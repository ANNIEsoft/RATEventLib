//
// File generated by rootcint at Fri Feb  1 13:51:38 2019

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdIsrcdIRATEventRootDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "RATEventRootDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void RATcLcLDScLcLMCParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLMCParticle(void *p = 0);
   static void *newArray_RATcLcLDScLcLMCParticle(Long_t size, void *p);
   static void delete_RATcLcLDScLcLMCParticle(void *p);
   static void deleteArray_RATcLcLDScLcLMCParticle(void *p);
   static void destruct_RATcLcLDScLcLMCParticle(void *p);
   static void streamer_RATcLcLDScLcLMCParticle(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::MCParticle*)
   {
      ::RAT::DS::MCParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::MCParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::MCParticle", ::RAT::DS::MCParticle::Class_Version(), "./include/MCParticle.hh", 21,
                  typeid(::RAT::DS::MCParticle), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::MCParticle::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::DS::MCParticle) );
      instance.SetNew(&new_RATcLcLDScLcLMCParticle);
      instance.SetNewArray(&newArray_RATcLcLDScLcLMCParticle);
      instance.SetDelete(&delete_RATcLcLDScLcLMCParticle);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLMCParticle);
      instance.SetDestructor(&destruct_RATcLcLDScLcLMCParticle);
      instance.SetStreamerFunc(&streamer_RATcLcLDScLcLMCParticle);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::MCParticle*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::MCParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::MCParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLMCTrackStep_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLMCTrackStep(void *p = 0);
   static void *newArray_RATcLcLDScLcLMCTrackStep(Long_t size, void *p);
   static void delete_RATcLcLDScLcLMCTrackStep(void *p);
   static void deleteArray_RATcLcLDScLcLMCTrackStep(void *p);
   static void destruct_RATcLcLDScLcLMCTrackStep(void *p);
   static void streamer_RATcLcLDScLcLMCTrackStep(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::MCTrackStep*)
   {
      ::RAT::DS::MCTrackStep *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::MCTrackStep >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::MCTrackStep", ::RAT::DS::MCTrackStep::Class_Version(), "./include/MCTrackStep.hh", 28,
                  typeid(::RAT::DS::MCTrackStep), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::MCTrackStep::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::DS::MCTrackStep) );
      instance.SetNew(&new_RATcLcLDScLcLMCTrackStep);
      instance.SetNewArray(&newArray_RATcLcLDScLcLMCTrackStep);
      instance.SetDelete(&delete_RATcLcLDScLcLMCTrackStep);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLMCTrackStep);
      instance.SetDestructor(&destruct_RATcLcLDScLcLMCTrackStep);
      instance.SetStreamerFunc(&streamer_RATcLcLDScLcLMCTrackStep);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::MCTrackStep*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::MCTrackStep*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::MCTrackStep*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLMCTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLMCTrack(void *p = 0);
   static void *newArray_RATcLcLDScLcLMCTrack(Long_t size, void *p);
   static void delete_RATcLcLDScLcLMCTrack(void *p);
   static void deleteArray_RATcLcLDScLcLMCTrack(void *p);
   static void destruct_RATcLcLDScLcLMCTrack(void *p);
   static void streamer_RATcLcLDScLcLMCTrack(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::MCTrack*)
   {
      ::RAT::DS::MCTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::MCTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::MCTrack", ::RAT::DS::MCTrack::Class_Version(), "./include/MCTrack.hh", 21,
                  typeid(::RAT::DS::MCTrack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::MCTrack::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::DS::MCTrack) );
      instance.SetNew(&new_RATcLcLDScLcLMCTrack);
      instance.SetNewArray(&newArray_RATcLcLDScLcLMCTrack);
      instance.SetDelete(&delete_RATcLcLDScLcLMCTrack);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLMCTrack);
      instance.SetDestructor(&destruct_RATcLcLDScLcLMCTrack);
      instance.SetStreamerFunc(&streamer_RATcLcLDScLcLMCTrack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::MCTrack*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::MCTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::MCTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLMCSummary_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLMCSummary(void *p = 0);
   static void *newArray_RATcLcLDScLcLMCSummary(Long_t size, void *p);
   static void delete_RATcLcLDScLcLMCSummary(void *p);
   static void deleteArray_RATcLcLDScLcLMCSummary(void *p);
   static void destruct_RATcLcLDScLcLMCSummary(void *p);
   static void streamer_RATcLcLDScLcLMCSummary(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::MCSummary*)
   {
      ::RAT::DS::MCSummary *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::MCSummary >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::MCSummary", ::RAT::DS::MCSummary::Class_Version(), "./include/MCSummary.hh", 25,
                  typeid(::RAT::DS::MCSummary), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::MCSummary::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::DS::MCSummary) );
      instance.SetNew(&new_RATcLcLDScLcLMCSummary);
      instance.SetNewArray(&newArray_RATcLcLDScLcLMCSummary);
      instance.SetDelete(&delete_RATcLcLDScLcLMCSummary);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLMCSummary);
      instance.SetDestructor(&destruct_RATcLcLDScLcLMCSummary);
      instance.SetStreamerFunc(&streamer_RATcLcLDScLcLMCSummary);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::MCSummary*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::MCSummary*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::MCSummary*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLMCPhoton_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLMCPhoton(void *p = 0);
   static void *newArray_RATcLcLDScLcLMCPhoton(Long_t size, void *p);
   static void delete_RATcLcLDScLcLMCPhoton(void *p);
   static void deleteArray_RATcLcLDScLcLMCPhoton(void *p);
   static void destruct_RATcLcLDScLcLMCPhoton(void *p);
   static void streamer_RATcLcLDScLcLMCPhoton(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::MCPhoton*)
   {
      ::RAT::DS::MCPhoton *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::MCPhoton >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::MCPhoton", ::RAT::DS::MCPhoton::Class_Version(), "./include/MCPhoton.hh", 25,
                  typeid(::RAT::DS::MCPhoton), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::MCPhoton::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::DS::MCPhoton) );
      instance.SetNew(&new_RATcLcLDScLcLMCPhoton);
      instance.SetNewArray(&newArray_RATcLcLDScLcLMCPhoton);
      instance.SetDelete(&delete_RATcLcLDScLcLMCPhoton);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLMCPhoton);
      instance.SetDestructor(&destruct_RATcLcLDScLcLMCPhoton);
      instance.SetStreamerFunc(&streamer_RATcLcLDScLcLMCPhoton);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::MCPhoton*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::MCPhoton*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::MCPhoton*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLMCPMT_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLMCPMT(void *p = 0);
   static void *newArray_RATcLcLDScLcLMCPMT(Long_t size, void *p);
   static void delete_RATcLcLDScLcLMCPMT(void *p);
   static void deleteArray_RATcLcLDScLcLMCPMT(void *p);
   static void destruct_RATcLcLDScLcLMCPMT(void *p);
   static void streamer_RATcLcLDScLcLMCPMT(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::MCPMT*)
   {
      ::RAT::DS::MCPMT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::MCPMT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::MCPMT", ::RAT::DS::MCPMT::Class_Version(), "./include/MCPMT.hh", 20,
                  typeid(::RAT::DS::MCPMT), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::MCPMT::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::DS::MCPMT) );
      instance.SetNew(&new_RATcLcLDScLcLMCPMT);
      instance.SetNewArray(&newArray_RATcLcLDScLcLMCPMT);
      instance.SetDelete(&delete_RATcLcLDScLcLMCPMT);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLMCPMT);
      instance.SetDestructor(&destruct_RATcLcLDScLcLMCPMT);
      instance.SetStreamerFunc(&streamer_RATcLcLDScLcLMCPMT);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::MCPMT*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::MCPMT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::MCPMT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLMCLAPPD_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLMCLAPPD(void *p = 0);
   static void *newArray_RATcLcLDScLcLMCLAPPD(Long_t size, void *p);
   static void delete_RATcLcLDScLcLMCLAPPD(void *p);
   static void deleteArray_RATcLcLDScLcLMCLAPPD(void *p);
   static void destruct_RATcLcLDScLcLMCLAPPD(void *p);
   static void streamer_RATcLcLDScLcLMCLAPPD(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::MCLAPPD*)
   {
      ::RAT::DS::MCLAPPD *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::MCLAPPD >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::MCLAPPD", ::RAT::DS::MCLAPPD::Class_Version(), "./include/MCLAPPD.hh", 20,
                  typeid(::RAT::DS::MCLAPPD), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::MCLAPPD::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::DS::MCLAPPD) );
      instance.SetNew(&new_RATcLcLDScLcLMCLAPPD);
      instance.SetNewArray(&newArray_RATcLcLDScLcLMCLAPPD);
      instance.SetDelete(&delete_RATcLcLDScLcLMCLAPPD);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLMCLAPPD);
      instance.SetDestructor(&destruct_RATcLcLDScLcLMCLAPPD);
      instance.SetStreamerFunc(&streamer_RATcLcLDScLcLMCLAPPD);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::MCLAPPD*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::MCLAPPD*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::MCLAPPD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLMC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLMC(void *p = 0);
   static void *newArray_RATcLcLDScLcLMC(Long_t size, void *p);
   static void delete_RATcLcLDScLcLMC(void *p);
   static void deleteArray_RATcLcLDScLcLMC(void *p);
   static void destruct_RATcLcLDScLcLMC(void *p);
   static void streamer_RATcLcLDScLcLMC(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::MC*)
   {
      ::RAT::DS::MC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::MC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::MC", ::RAT::DS::MC::Class_Version(), "./include/MC.hh", 29,
                  typeid(::RAT::DS::MC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::MC::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::DS::MC) );
      instance.SetNew(&new_RATcLcLDScLcLMC);
      instance.SetNewArray(&newArray_RATcLcLDScLcLMC);
      instance.SetDelete(&delete_RATcLcLDScLcLMC);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLMC);
      instance.SetDestructor(&destruct_RATcLcLDScLcLMC);
      instance.SetStreamerFunc(&streamer_RATcLcLDScLcLMC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::MC*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::MC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::MC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLPMT_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLPMT(void *p = 0);
   static void *newArray_RATcLcLDScLcLPMT(Long_t size, void *p);
   static void delete_RATcLcLDScLcLPMT(void *p);
   static void deleteArray_RATcLcLDScLcLPMT(void *p);
   static void destruct_RATcLcLDScLcLPMT(void *p);
   static void streamer_RATcLcLDScLcLPMT(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::PMT*)
   {
      ::RAT::DS::PMT *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::PMT >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::PMT", ::RAT::DS::PMT::Class_Version(), "./include/PMT.hh", 16,
                  typeid(::RAT::DS::PMT), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::PMT::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::DS::PMT) );
      instance.SetNew(&new_RATcLcLDScLcLPMT);
      instance.SetNewArray(&newArray_RATcLcLDScLcLPMT);
      instance.SetDelete(&delete_RATcLcLDScLcLPMT);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLPMT);
      instance.SetDestructor(&destruct_RATcLcLDScLcLPMT);
      instance.SetStreamerFunc(&streamer_RATcLcLDScLcLPMT);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::PMT*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::PMT*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::PMT*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLLAPPDHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLLAPPDHit(void *p = 0);
   static void *newArray_RATcLcLDScLcLLAPPDHit(Long_t size, void *p);
   static void delete_RATcLcLDScLcLLAPPDHit(void *p);
   static void deleteArray_RATcLcLDScLcLLAPPDHit(void *p);
   static void destruct_RATcLcLDScLcLLAPPDHit(void *p);
   static void streamer_RATcLcLDScLcLLAPPDHit(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::LAPPDHit*)
   {
      ::RAT::DS::LAPPDHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::LAPPDHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::LAPPDHit", ::RAT::DS::LAPPDHit::Class_Version(), "./include/LAPPDHit.hh", 19,
                  typeid(::RAT::DS::LAPPDHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::LAPPDHit::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::DS::LAPPDHit) );
      instance.SetNew(&new_RATcLcLDScLcLLAPPDHit);
      instance.SetNewArray(&newArray_RATcLcLDScLcLLAPPDHit);
      instance.SetDelete(&delete_RATcLcLDScLcLLAPPDHit);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLLAPPDHit);
      instance.SetDestructor(&destruct_RATcLcLDScLcLLAPPDHit);
      instance.SetStreamerFunc(&streamer_RATcLcLDScLcLLAPPDHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::LAPPDHit*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::LAPPDHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::LAPPDHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLLAPPD_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLLAPPD(void *p = 0);
   static void *newArray_RATcLcLDScLcLLAPPD(Long_t size, void *p);
   static void delete_RATcLcLDScLcLLAPPD(void *p);
   static void deleteArray_RATcLcLDScLcLLAPPD(void *p);
   static void destruct_RATcLcLDScLcLLAPPD(void *p);
   static void streamer_RATcLcLDScLcLLAPPD(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::LAPPD*)
   {
      ::RAT::DS::LAPPD *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::LAPPD >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::LAPPD", ::RAT::DS::LAPPD::Class_Version(), "./include/LAPPD.hh", 17,
                  typeid(::RAT::DS::LAPPD), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::LAPPD::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::DS::LAPPD) );
      instance.SetNew(&new_RATcLcLDScLcLLAPPD);
      instance.SetNewArray(&newArray_RATcLcLDScLcLLAPPD);
      instance.SetDelete(&delete_RATcLcLDScLcLLAPPD);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLLAPPD);
      instance.SetDestructor(&destruct_RATcLcLDScLcLLAPPD);
      instance.SetStreamerFunc(&streamer_RATcLcLDScLcLLAPPD);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::LAPPD*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::LAPPD*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::LAPPD*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLPosFit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_RATcLcLDScLcLPosFit(void *p);
   static void deleteArray_RATcLcLDScLcLPosFit(void *p);
   static void destruct_RATcLcLDScLcLPosFit(void *p);
   static void streamer_RATcLcLDScLcLPosFit(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::PosFit*)
   {
      ::RAT::DS::PosFit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::PosFit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::PosFit", ::RAT::DS::PosFit::Class_Version(), "./include/PosFit.hh", 20,
                  typeid(::RAT::DS::PosFit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::PosFit::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::DS::PosFit) );
      instance.SetDelete(&delete_RATcLcLDScLcLPosFit);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLPosFit);
      instance.SetDestructor(&destruct_RATcLcLDScLcLPosFit);
      instance.SetStreamerFunc(&streamer_RATcLcLDScLcLPosFit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::PosFit*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::PosFit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::PosFit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLCentroid_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLCentroid(void *p = 0);
   static void *newArray_RATcLcLDScLcLCentroid(Long_t size, void *p);
   static void delete_RATcLcLDScLcLCentroid(void *p);
   static void deleteArray_RATcLcLDScLcLCentroid(void *p);
   static void destruct_RATcLcLDScLcLCentroid(void *p);
   static void streamer_RATcLcLDScLcLCentroid(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::Centroid*)
   {
      ::RAT::DS::Centroid *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::Centroid >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::Centroid", ::RAT::DS::Centroid::Class_Version(), "./include/Centroid.hh", 14,
                  typeid(::RAT::DS::Centroid), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::Centroid::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::DS::Centroid) );
      instance.SetNew(&new_RATcLcLDScLcLCentroid);
      instance.SetNewArray(&newArray_RATcLcLDScLcLCentroid);
      instance.SetDelete(&delete_RATcLcLDScLcLCentroid);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLCentroid);
      instance.SetDestructor(&destruct_RATcLcLDScLcLCentroid);
      instance.SetStreamerFunc(&streamer_RATcLcLDScLcLCentroid);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::Centroid*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::Centroid*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::Centroid*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLPathFit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLPathFit(void *p = 0);
   static void *newArray_RATcLcLDScLcLPathFit(Long_t size, void *p);
   static void delete_RATcLcLDScLcLPathFit(void *p);
   static void deleteArray_RATcLcLDScLcLPathFit(void *p);
   static void destruct_RATcLcLDScLcLPathFit(void *p);
   static void streamer_RATcLcLDScLcLPathFit(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::PathFit*)
   {
      ::RAT::DS::PathFit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::PathFit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::PathFit", ::RAT::DS::PathFit::Class_Version(), "./include/PathFit.hh", 14,
                  typeid(::RAT::DS::PathFit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::PathFit::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::DS::PathFit) );
      instance.SetNew(&new_RATcLcLDScLcLPathFit);
      instance.SetNewArray(&newArray_RATcLcLDScLcLPathFit);
      instance.SetDelete(&delete_RATcLcLDScLcLPathFit);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLPathFit);
      instance.SetDestructor(&destruct_RATcLcLDScLcLPathFit);
      instance.SetStreamerFunc(&streamer_RATcLcLDScLcLPathFit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::PathFit*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::PathFit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::PathFit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLEV_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLEV(void *p = 0);
   static void *newArray_RATcLcLDScLcLEV(Long_t size, void *p);
   static void delete_RATcLcLDScLcLEV(void *p);
   static void deleteArray_RATcLcLDScLcLEV(void *p);
   static void destruct_RATcLcLDScLcLEV(void *p);
   static void streamer_RATcLcLDScLcLEV(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::EV*)
   {
      ::RAT::DS::EV *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::EV >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::EV", ::RAT::DS::EV::Class_Version(), "./include/EV.hh", 30,
                  typeid(::RAT::DS::EV), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::EV::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::DS::EV) );
      instance.SetNew(&new_RATcLcLDScLcLEV);
      instance.SetNewArray(&newArray_RATcLcLDScLcLEV);
      instance.SetDelete(&delete_RATcLcLDScLcLEV);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLEV);
      instance.SetDestructor(&destruct_RATcLcLDScLcLEV);
      instance.SetStreamerFunc(&streamer_RATcLcLDScLcLEV);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::EV*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::EV*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::EV*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLCalib_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLCalib(void *p = 0);
   static void *newArray_RATcLcLDScLcLCalib(Long_t size, void *p);
   static void delete_RATcLcLDScLcLCalib(void *p);
   static void deleteArray_RATcLcLDScLcLCalib(void *p);
   static void destruct_RATcLcLDScLcLCalib(void *p);
   static void streamer_RATcLcLDScLcLCalib(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::Calib*)
   {
      ::RAT::DS::Calib *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::Calib >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::Calib", ::RAT::DS::Calib::Class_Version(), "./include/Calib.hh", 29,
                  typeid(::RAT::DS::Calib), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::Calib::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::DS::Calib) );
      instance.SetNew(&new_RATcLcLDScLcLCalib);
      instance.SetNewArray(&newArray_RATcLcLDScLcLCalib);
      instance.SetDelete(&delete_RATcLcLDScLcLCalib);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLCalib);
      instance.SetDestructor(&destruct_RATcLcLDScLcLCalib);
      instance.SetStreamerFunc(&streamer_RATcLcLDScLcLCalib);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::Calib*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::Calib*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::Calib*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLRoot_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLRoot(void *p = 0);
   static void *newArray_RATcLcLDScLcLRoot(Long_t size, void *p);
   static void delete_RATcLcLDScLcLRoot(void *p);
   static void deleteArray_RATcLcLDScLcLRoot(void *p);
   static void destruct_RATcLcLDScLcLRoot(void *p);
   static void streamer_RATcLcLDScLcLRoot(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::Root*)
   {
      ::RAT::DS::Root *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::Root >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::Root", ::RAT::DS::Root::Class_Version(), "./include/Root.hh", 38,
                  typeid(::RAT::DS::Root), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::Root::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::DS::Root) );
      instance.SetNew(&new_RATcLcLDScLcLRoot);
      instance.SetNewArray(&newArray_RATcLcLDScLcLRoot);
      instance.SetDelete(&delete_RATcLcLDScLcLRoot);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLRoot);
      instance.SetDestructor(&destruct_RATcLcLDScLcLRoot);
      instance.SetStreamerFunc(&streamer_RATcLcLDScLcLRoot);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::Root*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::Root*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::Root*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLPMTInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLPMTInfo(void *p = 0);
   static void *newArray_RATcLcLDScLcLPMTInfo(Long_t size, void *p);
   static void delete_RATcLcLDScLcLPMTInfo(void *p);
   static void deleteArray_RATcLcLDScLcLPMTInfo(void *p);
   static void destruct_RATcLcLDScLcLPMTInfo(void *p);
   static void streamer_RATcLcLDScLcLPMTInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::PMTInfo*)
   {
      ::RAT::DS::PMTInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::PMTInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::PMTInfo", ::RAT::DS::PMTInfo::Class_Version(), "./include/PMTInfo.hh", 18,
                  typeid(::RAT::DS::PMTInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::PMTInfo::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::DS::PMTInfo) );
      instance.SetNew(&new_RATcLcLDScLcLPMTInfo);
      instance.SetNewArray(&newArray_RATcLcLDScLcLPMTInfo);
      instance.SetDelete(&delete_RATcLcLDScLcLPMTInfo);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLPMTInfo);
      instance.SetDestructor(&destruct_RATcLcLDScLcLPMTInfo);
      instance.SetStreamerFunc(&streamer_RATcLcLDScLcLPMTInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::PMTInfo*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::PMTInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::PMTInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLLAPPDInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLLAPPDInfo(void *p = 0);
   static void *newArray_RATcLcLDScLcLLAPPDInfo(Long_t size, void *p);
   static void delete_RATcLcLDScLcLLAPPDInfo(void *p);
   static void deleteArray_RATcLcLDScLcLLAPPDInfo(void *p);
   static void destruct_RATcLcLDScLcLLAPPDInfo(void *p);
   static void streamer_RATcLcLDScLcLLAPPDInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::LAPPDInfo*)
   {
      ::RAT::DS::LAPPDInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::LAPPDInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::LAPPDInfo", ::RAT::DS::LAPPDInfo::Class_Version(), "./include/LAPPDInfo.hh", 18,
                  typeid(::RAT::DS::LAPPDInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::LAPPDInfo::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::DS::LAPPDInfo) );
      instance.SetNew(&new_RATcLcLDScLcLLAPPDInfo);
      instance.SetNewArray(&newArray_RATcLcLDScLcLLAPPDInfo);
      instance.SetDelete(&delete_RATcLcLDScLcLLAPPDInfo);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLLAPPDInfo);
      instance.SetDestructor(&destruct_RATcLcLDScLcLLAPPDInfo);
      instance.SetStreamerFunc(&streamer_RATcLcLDScLcLLAPPDInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::LAPPDInfo*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::LAPPDInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::LAPPDInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLRun_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLRun(void *p = 0);
   static void *newArray_RATcLcLDScLcLRun(Long_t size, void *p);
   static void delete_RATcLcLDScLcLRun(void *p);
   static void deleteArray_RATcLcLDScLcLRun(void *p);
   static void destruct_RATcLcLDScLcLRun(void *p);
   static void streamer_RATcLcLDScLcLRun(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::Run*)
   {
      ::RAT::DS::Run *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::Run >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::Run", ::RAT::DS::Run::Class_Version(), "./include/Run.hh", 20,
                  typeid(::RAT::DS::Run), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::Run::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::DS::Run) );
      instance.SetNew(&new_RATcLcLDScLcLRun);
      instance.SetNewArray(&newArray_RATcLcLDScLcLRun);
      instance.SetDelete(&delete_RATcLcLDScLcLRun);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLRun);
      instance.SetDestructor(&destruct_RATcLcLDScLcLRun);
      instance.SetStreamerFunc(&streamer_RATcLcLDScLcLRun);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::Run*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::Run*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::Run*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDScLcLRunStore_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLDScLcLRunStore(void *p = 0);
   static void *newArray_RATcLcLDScLcLRunStore(Long_t size, void *p);
   static void delete_RATcLcLDScLcLRunStore(void *p);
   static void deleteArray_RATcLcLDScLcLRunStore(void *p);
   static void destruct_RATcLcLDScLcLRunStore(void *p);
   static void streamer_RATcLcLDScLcLRunStore(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DS::RunStore*)
   {
      ::RAT::DS::RunStore *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DS::RunStore >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DS::RunStore", ::RAT::DS::RunStore::Class_Version(), "./include/RunStore.hh", 78,
                  typeid(::RAT::DS::RunStore), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DS::RunStore::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::DS::RunStore) );
      instance.SetNew(&new_RATcLcLDScLcLRunStore);
      instance.SetNewArray(&newArray_RATcLcLDScLcLRunStore);
      instance.SetDelete(&delete_RATcLcLDScLcLRunStore);
      instance.SetDeleteArray(&deleteArray_RATcLcLDScLcLRunStore);
      instance.SetDestructor(&destruct_RATcLcLDScLcLRunStore);
      instance.SetStreamerFunc(&streamer_RATcLcLDScLcLRunStore);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DS::RunStore*)
   {
      return GenerateInitInstanceLocal((::RAT::DS::RunStore*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DS::RunStore*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLDSReader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_RATcLcLDSReader(void *p);
   static void deleteArray_RATcLcLDSReader(void *p);
   static void destruct_RATcLcLDSReader(void *p);
   static void streamer_RATcLcLDSReader(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::DSReader*)
   {
      ::RAT::DSReader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::DSReader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::DSReader", ::RAT::DSReader::Class_Version(), "./include/DSReader.hh", 16,
                  typeid(::RAT::DSReader), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::DSReader::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::DSReader) );
      instance.SetDelete(&delete_RATcLcLDSReader);
      instance.SetDeleteArray(&deleteArray_RATcLcLDSReader);
      instance.SetDestructor(&destruct_RATcLcLDSReader);
      instance.SetStreamerFunc(&streamer_RATcLcLDSReader);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::DSReader*)
   {
      return GenerateInitInstanceLocal((::RAT::DSReader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::DSReader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLTrackNode_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RATcLcLTrackNode(void *p = 0);
   static void *newArray_RATcLcLTrackNode(Long_t size, void *p);
   static void delete_RATcLcLTrackNode(void *p);
   static void deleteArray_RATcLcLTrackNode(void *p);
   static void destruct_RATcLcLTrackNode(void *p);
   static void streamer_RATcLcLTrackNode(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::TrackNode*)
   {
      ::RAT::TrackNode *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RAT::TrackNode >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::TrackNode", ::RAT::TrackNode::Class_Version(), "./include/TrackNode.hh", 10,
                  typeid(::RAT::TrackNode), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RAT::TrackNode::Dictionary, isa_proxy, 0,
                  sizeof(::RAT::TrackNode) );
      instance.SetNew(&new_RATcLcLTrackNode);
      instance.SetNewArray(&newArray_RATcLcLTrackNode);
      instance.SetDelete(&delete_RATcLcLTrackNode);
      instance.SetDeleteArray(&deleteArray_RATcLcLTrackNode);
      instance.SetDestructor(&destruct_RATcLcLTrackNode);
      instance.SetStreamerFunc(&streamer_RATcLcLTrackNode);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::TrackNode*)
   {
      return GenerateInitInstanceLocal((::RAT::TrackNode*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::TrackNode*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLTrackCursor_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void RATcLcLTrackCursor_Dictionary();
   static void delete_RATcLcLTrackCursor(void *p);
   static void deleteArray_RATcLcLTrackCursor(void *p);
   static void destruct_RATcLcLTrackCursor(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::TrackCursor*)
   {
      ::RAT::TrackCursor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::RAT::TrackCursor),0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::TrackCursor", "./include/TrackCursor.hh", 16,
                  typeid(::RAT::TrackCursor), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &RATcLcLTrackCursor_Dictionary, isa_proxy, 0,
                  sizeof(::RAT::TrackCursor) );
      instance.SetDelete(&delete_RATcLcLTrackCursor);
      instance.SetDeleteArray(&deleteArray_RATcLcLTrackCursor);
      instance.SetDestructor(&destruct_RATcLcLTrackCursor);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::TrackCursor*)
   {
      return GenerateInitInstanceLocal((::RAT::TrackCursor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::TrackCursor*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void RATcLcLTrackCursor_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::TrackCursor*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void RATcLcLTrackNav_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void RATcLcLTrackNav_Dictionary();
   static void delete_RATcLcLTrackNav(void *p);
   static void deleteArray_RATcLcLTrackNav(void *p);
   static void destruct_RATcLcLTrackNav(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RAT::TrackNav*)
   {
      ::RAT::TrackNav *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::RAT::TrackNav),0);
      static ::ROOT::TGenericClassInfo 
         instance("RAT::TrackNav", "./include/TrackNav.hh", 11,
                  typeid(::RAT::TrackNav), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &RATcLcLTrackNav_Dictionary, isa_proxy, 0,
                  sizeof(::RAT::TrackNav) );
      instance.SetDelete(&delete_RATcLcLTrackNav);
      instance.SetDeleteArray(&deleteArray_RATcLcLTrackNav);
      instance.SetDestructor(&destruct_RATcLcLTrackNav);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RAT::TrackNav*)
   {
      return GenerateInitInstanceLocal((::RAT::TrackNav*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RAT::TrackNav*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void RATcLcLTrackNav_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::TrackNav*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr MCParticle::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MCParticle::Class_Name()
{
   return "RAT::DS::MCParticle";
}

//______________________________________________________________________________
const char *MCParticle::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MCParticle::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MCParticle::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MCParticle::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCParticle*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr MCTrackStep::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MCTrackStep::Class_Name()
{
   return "RAT::DS::MCTrackStep";
}

//______________________________________________________________________________
const char *MCTrackStep::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCTrackStep*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MCTrackStep::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCTrackStep*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MCTrackStep::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCTrackStep*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MCTrackStep::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCTrackStep*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr MCTrack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MCTrack::Class_Name()
{
   return "RAT::DS::MCTrack";
}

//______________________________________________________________________________
const char *MCTrack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MCTrack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MCTrack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MCTrack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCTrack*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr MCSummary::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MCSummary::Class_Name()
{
   return "RAT::DS::MCSummary";
}

//______________________________________________________________________________
const char *MCSummary::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCSummary*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MCSummary::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCSummary*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MCSummary::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCSummary*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MCSummary::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCSummary*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr MCPhoton::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MCPhoton::Class_Name()
{
   return "RAT::DS::MCPhoton";
}

//______________________________________________________________________________
const char *MCPhoton::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCPhoton*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MCPhoton::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCPhoton*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MCPhoton::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCPhoton*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MCPhoton::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCPhoton*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr MCPMT::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MCPMT::Class_Name()
{
   return "RAT::DS::MCPMT";
}

//______________________________________________________________________________
const char *MCPMT::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCPMT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MCPMT::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCPMT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MCPMT::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCPMT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MCPMT::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCPMT*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr MCLAPPD::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MCLAPPD::Class_Name()
{
   return "RAT::DS::MCLAPPD";
}

//______________________________________________________________________________
const char *MCLAPPD::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCLAPPD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MCLAPPD::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCLAPPD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MCLAPPD::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCLAPPD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MCLAPPD::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MCLAPPD*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr MC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MC::Class_Name()
{
   return "RAT::DS::MC";
}

//______________________________________________________________________________
const char *MC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::MC*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr PMT::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PMT::Class_Name()
{
   return "RAT::DS::PMT";
}

//______________________________________________________________________________
const char *PMT::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PMT*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PMT::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PMT*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PMT::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PMT*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PMT::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PMT*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr LAPPDHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *LAPPDHit::Class_Name()
{
   return "RAT::DS::LAPPDHit";
}

//______________________________________________________________________________
const char *LAPPDHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::LAPPDHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int LAPPDHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::LAPPDHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void LAPPDHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::LAPPDHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *LAPPDHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::LAPPDHit*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr LAPPD::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *LAPPD::Class_Name()
{
   return "RAT::DS::LAPPD";
}

//______________________________________________________________________________
const char *LAPPD::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::LAPPD*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int LAPPD::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::LAPPD*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void LAPPD::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::LAPPD*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *LAPPD::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::LAPPD*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr PosFit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PosFit::Class_Name()
{
   return "RAT::DS::PosFit";
}

//______________________________________________________________________________
const char *PosFit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PosFit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PosFit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PosFit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PosFit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PosFit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PosFit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PosFit*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr Centroid::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Centroid::Class_Name()
{
   return "RAT::DS::Centroid";
}

//______________________________________________________________________________
const char *Centroid::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Centroid*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Centroid::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Centroid*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Centroid::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Centroid*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Centroid::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Centroid*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr PathFit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PathFit::Class_Name()
{
   return "RAT::DS::PathFit";
}

//______________________________________________________________________________
const char *PathFit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PathFit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PathFit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PathFit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PathFit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PathFit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PathFit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PathFit*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr EV::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EV::Class_Name()
{
   return "RAT::DS::EV";
}

//______________________________________________________________________________
const char *EV::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::EV*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EV::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::EV*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EV::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::EV*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EV::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::EV*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr Calib::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Calib::Class_Name()
{
   return "RAT::DS::Calib";
}

//______________________________________________________________________________
const char *Calib::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Calib*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Calib::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Calib*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Calib::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Calib*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Calib::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Calib*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr Root::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Root::Class_Name()
{
   return "RAT::DS::Root";
}

//______________________________________________________________________________
const char *Root::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Root*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Root::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Root*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Root::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Root*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Root::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Root*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr PMTInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PMTInfo::Class_Name()
{
   return "RAT::DS::PMTInfo";
}

//______________________________________________________________________________
const char *PMTInfo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PMTInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PMTInfo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PMTInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PMTInfo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PMTInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PMTInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::PMTInfo*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr LAPPDInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *LAPPDInfo::Class_Name()
{
   return "RAT::DS::LAPPDInfo";
}

//______________________________________________________________________________
const char *LAPPDInfo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::LAPPDInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int LAPPDInfo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::LAPPDInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void LAPPDInfo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::LAPPDInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *LAPPDInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::LAPPDInfo*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr Run::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Run::Class_Name()
{
   return "RAT::DS::Run";
}

//______________________________________________________________________________
const char *Run::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Run*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Run::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Run*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Run::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Run*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Run::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::Run*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
atomic_TClass_ptr RunStore::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RunStore::Class_Name()
{
   return "RAT::DS::RunStore";
}

//______________________________________________________________________________
const char *RunStore::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::RunStore*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RunStore::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::RunStore*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RunStore::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::RunStore*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RunStore::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DS::RunStore*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT::DS
} // namespace RAT::DS
      namespace RAT {
//______________________________________________________________________________
atomic_TClass_ptr DSReader::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DSReader::Class_Name()
{
   return "RAT::DSReader";
}

//______________________________________________________________________________
const char *DSReader::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DSReader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DSReader::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DSReader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DSReader::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DSReader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DSReader::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::DSReader*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT
      namespace RAT {
//______________________________________________________________________________
atomic_TClass_ptr TrackNode::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TrackNode::Class_Name()
{
   return "RAT::TrackNode";
}

//______________________________________________________________________________
const char *TrackNode::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::TrackNode*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TrackNode::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::TrackNode*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TrackNode::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::TrackNode*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TrackNode::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RAT::TrackNode*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace RAT
      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void Root::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::Root.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::RAT::DS::Root thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> runID;
      { TString R__str; R__str.Streamer(R__b); ratVersion = R__str.Data(); }
      {
         vector<std::pair<std::string,int> > &R__stl =  procResult;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(pair<string,int>));
         if (R__tcl1==0) {
            Error("procResult streamer","Missing the TClass object for pair<string,int>!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            pair<string,int> R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<MC> &R__stl =  mc;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            RAT::DS::MC R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Calib> &R__stl =  calib;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            RAT::DS::Calib R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<EV> &R__stl =  ev;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            RAT::DS::EV R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  user;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << runID;
      { TString R__str = ratVersion.c_str(); R__str.Streamer(R__b);}
      {
         vector<std::pair<std::string,int> > &R__stl =  procResult;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(pair<string,int>));
         if (R__tcl1==0) {
            Error("procResult streamer","Missing the TClass object for pair<string,int>!");
            return;
         }
            vector<std::pair<std::string,int> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((pair<string,int>*)&(*R__k),R__tcl1);
            }
         }
      }
      {
         vector<MC> &R__stl =  mc;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<MC>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((RAT::DS::MC&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<Calib> &R__stl =  calib;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Calib>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((RAT::DS::Calib&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<EV> &R__stl =  ev;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<EV>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((RAT::DS::EV&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<double> &R__stl =  user;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void Root::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::Root.
      TClass *R__cl = ::RAT::DS::Root::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runID", &runID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ratVersion", (void*)&ratVersion);
      R__insp.InspectMember("string", (void*)&ratVersion, "ratVersion.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "procResult", (void*)&procResult);
      R__insp.InspectMember("vector<std::pair<std::string,int> >", (void*)&procResult, "procResult.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc", (void*)&mc);
      R__insp.InspectMember("vector<MC>", (void*)&mc, "mc.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "calib", (void*)&calib);
      R__insp.InspectMember("vector<Calib>", (void*)&calib, "calib.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ev", (void*)&ev);
      R__insp.InspectMember("vector<EV>", (void*)&ev, "ev.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "user", (void*)&user);
      R__insp.InspectMember("vector<double>", (void*)&user, "user.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLRoot(void *p) {
      return  p ? new(p) ::RAT::DS::Root : new ::RAT::DS::Root;
   }
   static void *newArray_RATcLcLDScLcLRoot(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::Root[nElements] : new ::RAT::DS::Root[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLRoot(void *p) {
      delete ((::RAT::DS::Root*)p);
   }
   static void deleteArray_RATcLcLDScLcLRoot(void *p) {
      delete [] ((::RAT::DS::Root*)p);
   }
   static void destruct_RATcLcLDScLcLRoot(void *p) {
      typedef ::RAT::DS::Root current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLDScLcLRoot(TBuffer &buf, void *obj) {
      ((::RAT::DS::Root*)obj)->::RAT::DS::Root::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::DS::Root

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void MCLAPPD::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::MCLAPPD.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::RAT::DS::MCLAPPD thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> id;
      R__b >> type;
      { TString R__str; R__str.Streamer(R__b); modelName = R__str.Data(); }
      {
         vector<MCPhoton> &R__stl =  photon;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            RAT::DS::MCPhoton R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << id;
      R__b << type;
      { TString R__str = modelName.c_str(); R__str.Streamer(R__b);}
      {
         vector<MCPhoton> &R__stl =  photon;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<MCPhoton>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((RAT::DS::MCPhoton&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void MCLAPPD::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::MCLAPPD.
      TClass *R__cl = ::RAT::DS::MCLAPPD::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", &type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "modelName", (void*)&modelName);
      R__insp.InspectMember("string", (void*)&modelName, "modelName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "photon", (void*)&photon);
      R__insp.InspectMember("vector<MCPhoton>", (void*)&photon, "photon.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLMCLAPPD(void *p) {
      return  p ? new(p) ::RAT::DS::MCLAPPD : new ::RAT::DS::MCLAPPD;
   }
   static void *newArray_RATcLcLDScLcLMCLAPPD(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::MCLAPPD[nElements] : new ::RAT::DS::MCLAPPD[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLMCLAPPD(void *p) {
      delete ((::RAT::DS::MCLAPPD*)p);
   }
   static void deleteArray_RATcLcLDScLcLMCLAPPD(void *p) {
      delete [] ((::RAT::DS::MCLAPPD*)p);
   }
   static void destruct_RATcLcLDScLcLMCLAPPD(void *p) {
      typedef ::RAT::DS::MCLAPPD current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLDScLcLMCLAPPD(TBuffer &buf, void *obj) {
      ((::RAT::DS::MCLAPPD*)obj)->::RAT::DS::MCLAPPD::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::DS::MCLAPPD

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void MCPMT::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::MCPMT.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::RAT::DS::MCPMT thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> id;
      R__b >> type;
      { TString R__str; R__str.Streamer(R__b); modelName = R__str.Data(); }
      {
         vector<MCPhoton> &R__stl =  photon;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            RAT::DS::MCPhoton R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << id;
      R__b << type;
      { TString R__str = modelName.c_str(); R__str.Streamer(R__b);}
      {
         vector<MCPhoton> &R__stl =  photon;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<MCPhoton>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((RAT::DS::MCPhoton&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void MCPMT::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::MCPMT.
      TClass *R__cl = ::RAT::DS::MCPMT::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", &type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "modelName", (void*)&modelName);
      R__insp.InspectMember("string", (void*)&modelName, "modelName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "photon", (void*)&photon);
      R__insp.InspectMember("vector<MCPhoton>", (void*)&photon, "photon.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLMCPMT(void *p) {
      return  p ? new(p) ::RAT::DS::MCPMT : new ::RAT::DS::MCPMT;
   }
   static void *newArray_RATcLcLDScLcLMCPMT(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::MCPMT[nElements] : new ::RAT::DS::MCPMT[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLMCPMT(void *p) {
      delete ((::RAT::DS::MCPMT*)p);
   }
   static void deleteArray_RATcLcLDScLcLMCPMT(void *p) {
      delete [] ((::RAT::DS::MCPMT*)p);
   }
   static void destruct_RATcLcLDScLcLMCPMT(void *p) {
      typedef ::RAT::DS::MCPMT current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLDScLcLMCPMT(TBuffer &buf, void *obj) {
      ((::RAT::DS::MCPMT*)obj)->::RAT::DS::MCPMT::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::DS::MCPMT

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void RunStore::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::RunStore.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::RAT::DS::RunStore thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> fReadTree;
      R__b >> fReadRun;
      R__b >> fWriteTree;
      R__b >> fWriteRun;
      {
         map<int,RunRecord*> &R__stl =  fCache;
         R__stl.clear();
         TClass *R__tcl2 = TBuffer::GetClass(typeid(RAT::DS::RunRecord));
         if (R__tcl2==0) {
            Error("fCache streamer","Missing the TClass object for RAT::DS::RunRecord!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            RAT::DS::RunRecord* R__t2;
            R__t2 = (RAT::DS::RunRecord*)R__b.ReadObjectAny(R__tcl2);
            typedef int Value_t;
            std::pair<Value_t const, RAT::DS::RunRecord* > R__t3(R__t,R__t2);
            R__stl.insert(R__t3);
         }
      }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      R__b << fReadTree;
      R__b << fReadRun;
      R__b << fWriteTree;
      R__b << fWriteRun;
      {
         map<int,RunRecord*> &R__stl =  fCache;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl2 = TBuffer::GetClass(typeid(RAT::DS::RunRecord));
         if (R__tcl2==0) {
            Error("fCachestreamer","Missing the TClass object for RAT::DS::RunRecord!");
            return;
         }
            map<int,RunRecord*>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << ((*R__k).first );
            R__b.WriteObjectAny(((*R__k).second),R__tcl2);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void RunStore::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::RunStore.
      TClass *R__cl = ::RAT::DS::RunStore::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fReadTree", &fReadTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fReadRun", &fReadRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWriteTree", &fWriteTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fWriteRun", &fWriteRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCache", (void*)&fCache);
      R__insp.InspectMember("map<int,RunRecord*>", (void*)&fCache, "fCache.", false);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLRunStore(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RAT::DS::RunStore : new ::RAT::DS::RunStore;
   }
   static void *newArray_RATcLcLDScLcLRunStore(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RAT::DS::RunStore[nElements] : new ::RAT::DS::RunStore[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLRunStore(void *p) {
      delete ((::RAT::DS::RunStore*)p);
   }
   static void deleteArray_RATcLcLDScLcLRunStore(void *p) {
      delete [] ((::RAT::DS::RunStore*)p);
   }
   static void destruct_RATcLcLDScLcLRunStore(void *p) {
      typedef ::RAT::DS::RunStore current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLDScLcLRunStore(TBuffer &buf, void *obj) {
      ((::RAT::DS::RunStore*)obj)->::RAT::DS::RunStore::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::DS::RunStore

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void Centroid::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::Centroid.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::RAT::DS::Centroid thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      //This works around a msvc bug and should be harmless on other platforms
      typedef RAT::DS::PosFit baseClass0;
      baseClass0::Streamer(R__b);
      R__b >> power;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      //This works around a msvc bug and should be harmless on other platforms
      typedef RAT::DS::PosFit baseClass0;
      baseClass0::Streamer(R__b);
      R__b << power;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void Centroid::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::Centroid.
      TClass *R__cl = ::RAT::DS::Centroid::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "power", &power);
      TObject::ShowMembers(R__insp);
      //This works around a msvc bug and should be harmless on other platforms
      typedef RAT::DS::PosFit baseClass2;
      baseClass2::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLCentroid(void *p) {
      return  p ? new(p) ::RAT::DS::Centroid : new ::RAT::DS::Centroid;
   }
   static void *newArray_RATcLcLDScLcLCentroid(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::Centroid[nElements] : new ::RAT::DS::Centroid[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLCentroid(void *p) {
      delete ((::RAT::DS::Centroid*)p);
   }
   static void deleteArray_RATcLcLDScLcLCentroid(void *p) {
      delete [] ((::RAT::DS::Centroid*)p);
   }
   static void destruct_RATcLcLDScLcLCentroid(void *p) {
      typedef ::RAT::DS::Centroid current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLDScLcLCentroid(TBuffer &buf, void *obj) {
      ((::RAT::DS::Centroid*)obj)->::RAT::DS::Centroid::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::DS::Centroid

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void Calib::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::Calib.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::RAT::DS::Calib thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> id;
      R__b >> mode;
      R__b >> intensity;
      { TString R__str; R__str.Streamer(R__b); name = R__str.Data(); }
      utc.Streamer(R__b);
      pos.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << id;
      R__b << mode;
      R__b << intensity;
      { TString R__str = name.c_str(); R__str.Streamer(R__b);}
      utc.Streamer(R__b);
      pos.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void Calib::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::Calib.
      TClass *R__cl = ::RAT::DS::Calib::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mode", &mode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "intensity", &intensity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "name", (void*)&name);
      R__insp.InspectMember("string", (void*)&name, "name.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "utc", &utc);
      R__insp.InspectMember(utc, "utc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos", &pos);
      R__insp.InspectMember(pos, "pos.");
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLCalib(void *p) {
      return  p ? new(p) ::RAT::DS::Calib : new ::RAT::DS::Calib;
   }
   static void *newArray_RATcLcLDScLcLCalib(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::Calib[nElements] : new ::RAT::DS::Calib[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLCalib(void *p) {
      delete ((::RAT::DS::Calib*)p);
   }
   static void deleteArray_RATcLcLDScLcLCalib(void *p) {
      delete [] ((::RAT::DS::Calib*)p);
   }
   static void destruct_RATcLcLDScLcLCalib(void *p) {
      typedef ::RAT::DS::Calib current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLDScLcLCalib(TBuffer &buf, void *obj) {
      ((::RAT::DS::Calib*)obj)->::RAT::DS::Calib::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::DS::Calib

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void EV::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::EV.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::RAT::DS::EV thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> id;
      R__b >> qTotal;
      R__b >> calibratedTriggerTime;
      R__b >> deltat;
      utc.Streamer(R__b);
      {
         vector<PMT> &R__stl =  pmt;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            RAT::DS::PMT R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<LAPPD> &R__stl =  lappd;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            RAT::DS::LAPPD R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Centroid> &R__stl =  centroid;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            RAT::DS::Centroid R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<PathFit> &R__stl =  pathfit;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            RAT::DS::PathFit R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << id;
      R__b << qTotal;
      R__b << calibratedTriggerTime;
      R__b << deltat;
      utc.Streamer(R__b);
      {
         vector<PMT> &R__stl =  pmt;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<PMT>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((RAT::DS::PMT&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<LAPPD> &R__stl =  lappd;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<LAPPD>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((RAT::DS::LAPPD&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<Centroid> &R__stl =  centroid;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Centroid>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((RAT::DS::Centroid&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<PathFit> &R__stl =  pathfit;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<PathFit>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((RAT::DS::PathFit&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void EV::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::EV.
      TClass *R__cl = ::RAT::DS::EV::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qTotal", &qTotal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "calibratedTriggerTime", &calibratedTriggerTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltat", &deltat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "utc", &utc);
      R__insp.InspectMember(utc, "utc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmt", (void*)&pmt);
      R__insp.InspectMember("vector<PMT>", (void*)&pmt, "pmt.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lappd", (void*)&lappd);
      R__insp.InspectMember("vector<LAPPD>", (void*)&lappd, "lappd.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "centroid", (void*)&centroid);
      R__insp.InspectMember("vector<Centroid>", (void*)&centroid, "centroid.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pathfit", (void*)&pathfit);
      R__insp.InspectMember("vector<PathFit>", (void*)&pathfit, "pathfit.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLEV(void *p) {
      return  p ? new(p) ::RAT::DS::EV : new ::RAT::DS::EV;
   }
   static void *newArray_RATcLcLDScLcLEV(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::EV[nElements] : new ::RAT::DS::EV[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLEV(void *p) {
      delete ((::RAT::DS::EV*)p);
   }
   static void deleteArray_RATcLcLDScLcLEV(void *p) {
      delete [] ((::RAT::DS::EV*)p);
   }
   static void destruct_RATcLcLDScLcLEV(void *p) {
      typedef ::RAT::DS::EV current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLDScLcLEV(TBuffer &buf, void *obj) {
      ((::RAT::DS::EV*)obj)->::RAT::DS::EV::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::DS::EV

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void LAPPD::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::LAPPD.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::RAT::DS::LAPPD thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> id;
      {
         vector<LAPPDHit> &R__stl =  hits;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            RAT::DS::LAPPDHit R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b >> totalcharge;
      R__b >> totaltime;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << id;
      {
         vector<LAPPDHit> &R__stl =  hits;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<LAPPDHit>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((RAT::DS::LAPPDHit&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b << totalcharge;
      R__b << totaltime;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void LAPPD::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::LAPPD.
      TClass *R__cl = ::RAT::DS::LAPPD::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hits", (void*)&hits);
      R__insp.InspectMember("vector<LAPPDHit>", (void*)&hits, "hits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "totalcharge", &totalcharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "totaltime", &totaltime);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLLAPPD(void *p) {
      return  p ? new(p) ::RAT::DS::LAPPD : new ::RAT::DS::LAPPD;
   }
   static void *newArray_RATcLcLDScLcLLAPPD(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::LAPPD[nElements] : new ::RAT::DS::LAPPD[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLLAPPD(void *p) {
      delete ((::RAT::DS::LAPPD*)p);
   }
   static void deleteArray_RATcLcLDScLcLLAPPD(void *p) {
      delete [] ((::RAT::DS::LAPPD*)p);
   }
   static void destruct_RATcLcLDScLcLLAPPD(void *p) {
      typedef ::RAT::DS::LAPPD current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLDScLcLLAPPD(TBuffer &buf, void *obj) {
      ((::RAT::DS::LAPPD*)obj)->::RAT::DS::LAPPD::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::DS::LAPPD

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void LAPPDHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::LAPPDHit.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::RAT::DS::LAPPDHit thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> time;
      R__b >> charge;
      pos.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << time;
      R__b << charge;
      pos.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void LAPPDHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::LAPPDHit.
      TClass *R__cl = ::RAT::DS::LAPPDHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time", &time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge", &charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos", &pos);
      R__insp.InspectMember(pos, "pos.");
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLLAPPDHit(void *p) {
      return  p ? new(p) ::RAT::DS::LAPPDHit : new ::RAT::DS::LAPPDHit;
   }
   static void *newArray_RATcLcLDScLcLLAPPDHit(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::LAPPDHit[nElements] : new ::RAT::DS::LAPPDHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLLAPPDHit(void *p) {
      delete ((::RAT::DS::LAPPDHit*)p);
   }
   static void deleteArray_RATcLcLDScLcLLAPPDHit(void *p) {
      delete [] ((::RAT::DS::LAPPDHit*)p);
   }
   static void destruct_RATcLcLDScLcLLAPPDHit(void *p) {
      typedef ::RAT::DS::LAPPDHit current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLDScLcLLAPPDHit(TBuffer &buf, void *obj) {
      ((::RAT::DS::LAPPDHit*)obj)->::RAT::DS::LAPPDHit::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::DS::LAPPDHit

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void LAPPDInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::LAPPDInfo.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::RAT::DS::LAPPDInfo thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      {
         vector<TVector3> &R__stl =  pos;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TVector3 R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TVector3> &R__stl =  dir;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TVector3 R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  type;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  modeltype;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<std::string> &R__stl =  models;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            string R__t;
            {TString R__str;
             R__str.Streamer(R__b);
             R__t = R__str.Data();}
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      {
         vector<TVector3> &R__stl =  pos;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TVector3>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TVector3&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TVector3> &R__stl =  dir;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TVector3>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TVector3&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<int> &R__stl =  type;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  modeltype;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<std::string> &R__stl =  models;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<std::string>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            {TString R__str((*R__k).c_str());
             R__str.Streamer(R__b);};
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void LAPPDInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::LAPPDInfo.
      TClass *R__cl = ::RAT::DS::LAPPDInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos", (void*)&pos);
      R__insp.InspectMember("vector<TVector3>", (void*)&pos, "pos.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dir", (void*)&dir);
      R__insp.InspectMember("vector<TVector3>", (void*)&dir, "dir.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", (void*)&type);
      R__insp.InspectMember("vector<int>", (void*)&type, "type.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "modeltype", (void*)&modeltype);
      R__insp.InspectMember("vector<int>", (void*)&modeltype, "modeltype.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "models", (void*)&models);
      R__insp.InspectMember("vector<std::string>", (void*)&models, "models.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLLAPPDInfo(void *p) {
      return  p ? new(p) ::RAT::DS::LAPPDInfo : new ::RAT::DS::LAPPDInfo;
   }
   static void *newArray_RATcLcLDScLcLLAPPDInfo(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::LAPPDInfo[nElements] : new ::RAT::DS::LAPPDInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLLAPPDInfo(void *p) {
      delete ((::RAT::DS::LAPPDInfo*)p);
   }
   static void deleteArray_RATcLcLDScLcLLAPPDInfo(void *p) {
      delete [] ((::RAT::DS::LAPPDInfo*)p);
   }
   static void destruct_RATcLcLDScLcLLAPPDInfo(void *p) {
      typedef ::RAT::DS::LAPPDInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLDScLcLLAPPDInfo(TBuffer &buf, void *obj) {
      ((::RAT::DS::LAPPDInfo*)obj)->::RAT::DS::LAPPDInfo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::DS::LAPPDInfo

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void MC::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::MC.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::RAT::DS::MC thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> id;
      R__b >> numPE;
      R__b >> numPE_lappd;
      R__b >> numDarkHits;
      utc.Streamer(R__b);
      {
         vector<MCSummary> &R__stl =  summary;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            RAT::DS::MCSummary R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<MCParticle> &R__stl =  particle;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            RAT::DS::MCParticle R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<MCParticle> &R__stl =  parent;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            RAT::DS::MCParticle R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<MCTrack> &R__stl =  track;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            RAT::DS::MCTrack R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<MCPMT> &R__stl =  pmt;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            RAT::DS::MCPMT R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<MCLAPPD> &R__stl =  lappd;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            RAT::DS::MCLAPPD R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << id;
      R__b << numPE;
      R__b << numPE_lappd;
      R__b << numDarkHits;
      utc.Streamer(R__b);
      {
         vector<MCSummary> &R__stl =  summary;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<MCSummary>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((RAT::DS::MCSummary&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<MCParticle> &R__stl =  particle;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<MCParticle>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((RAT::DS::MCParticle&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<MCParticle> &R__stl =  parent;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<MCParticle>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((RAT::DS::MCParticle&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<MCTrack> &R__stl =  track;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<MCTrack>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((RAT::DS::MCTrack&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<MCPMT> &R__stl =  pmt;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<MCPMT>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((RAT::DS::MCPMT&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<MCLAPPD> &R__stl =  lappd;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<MCLAPPD>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((RAT::DS::MCLAPPD&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void MC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::MC.
      TClass *R__cl = ::RAT::DS::MC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numPE", &numPE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numPE_lappd", &numPE_lappd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numDarkHits", &numDarkHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "utc", &utc);
      R__insp.InspectMember(utc, "utc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "summary", (void*)&summary);
      R__insp.InspectMember("vector<MCSummary>", (void*)&summary, "summary.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particle", (void*)&particle);
      R__insp.InspectMember("vector<MCParticle>", (void*)&particle, "particle.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parent", (void*)&parent);
      R__insp.InspectMember("vector<MCParticle>", (void*)&parent, "parent.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "track", (void*)&track);
      R__insp.InspectMember("vector<MCTrack>", (void*)&track, "track.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmt", (void*)&pmt);
      R__insp.InspectMember("vector<MCPMT>", (void*)&pmt, "pmt.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lappd", (void*)&lappd);
      R__insp.InspectMember("vector<MCLAPPD>", (void*)&lappd, "lappd.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLMC(void *p) {
      return  p ? new(p) ::RAT::DS::MC : new ::RAT::DS::MC;
   }
   static void *newArray_RATcLcLDScLcLMC(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::MC[nElements] : new ::RAT::DS::MC[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLMC(void *p) {
      delete ((::RAT::DS::MC*)p);
   }
   static void deleteArray_RATcLcLDScLcLMC(void *p) {
      delete [] ((::RAT::DS::MC*)p);
   }
   static void destruct_RATcLcLDScLcLMC(void *p) {
      typedef ::RAT::DS::MC current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLDScLcLMC(TBuffer &buf, void *obj) {
      ((::RAT::DS::MC*)obj)->::RAT::DS::MC::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::DS::MC

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void MCParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::MCParticle.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::RAT::DS::MCParticle thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> pdgcode;
      R__b >> t;
      R__b >> ke;
      pos.Streamer(R__b);
      mom.Streamer(R__b);
      pol.Streamer(R__b);
      { TString R__str; R__str.Streamer(R__b); particleName = R__str.Data(); }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << pdgcode;
      R__b << t;
      R__b << ke;
      pos.Streamer(R__b);
      mom.Streamer(R__b);
      pol.Streamer(R__b);
      { TString R__str = particleName.c_str(); R__str.Streamer(R__b);}
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void MCParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::MCParticle.
      TClass *R__cl = ::RAT::DS::MCParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdgcode", &pdgcode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t", &t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ke", &ke);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos", &pos);
      R__insp.InspectMember(pos, "pos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mom", &mom);
      R__insp.InspectMember(mom, "mom.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pol", &pol);
      R__insp.InspectMember(pol, "pol.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particleName", (void*)&particleName);
      R__insp.InspectMember("string", (void*)&particleName, "particleName.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLMCParticle(void *p) {
      return  p ? new(p) ::RAT::DS::MCParticle : new ::RAT::DS::MCParticle;
   }
   static void *newArray_RATcLcLDScLcLMCParticle(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::MCParticle[nElements] : new ::RAT::DS::MCParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLMCParticle(void *p) {
      delete ((::RAT::DS::MCParticle*)p);
   }
   static void deleteArray_RATcLcLDScLcLMCParticle(void *p) {
      delete [] ((::RAT::DS::MCParticle*)p);
   }
   static void destruct_RATcLcLDScLcLMCParticle(void *p) {
      typedef ::RAT::DS::MCParticle current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLDScLcLMCParticle(TBuffer &buf, void *obj) {
      ((::RAT::DS::MCParticle*)obj)->::RAT::DS::MCParticle::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::DS::MCParticle

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void MCPhoton::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::MCPhoton.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::RAT::DS::MCPhoton thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> hitTime;
      R__b >> frontEndTime;
      R__b >> lambda;
      pos.Streamer(R__b);
      mom.Streamer(R__b);
      pol.Streamer(R__b);
      R__b >> charge;
      R__b >> isDarkHit;
      R__b >> trackID;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << hitTime;
      R__b << frontEndTime;
      R__b << lambda;
      pos.Streamer(R__b);
      mom.Streamer(R__b);
      pol.Streamer(R__b);
      R__b << charge;
      R__b << isDarkHit;
      R__b << trackID;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void MCPhoton::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::MCPhoton.
      TClass *R__cl = ::RAT::DS::MCPhoton::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hitTime", &hitTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "frontEndTime", &frontEndTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lambda", &lambda);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos", &pos);
      R__insp.InspectMember(pos, "pos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mom", &mom);
      R__insp.InspectMember(mom, "mom.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pol", &pol);
      R__insp.InspectMember(pol, "pol.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge", &charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isDarkHit", &isDarkHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackID", &trackID);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLMCPhoton(void *p) {
      return  p ? new(p) ::RAT::DS::MCPhoton : new ::RAT::DS::MCPhoton;
   }
   static void *newArray_RATcLcLDScLcLMCPhoton(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::MCPhoton[nElements] : new ::RAT::DS::MCPhoton[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLMCPhoton(void *p) {
      delete ((::RAT::DS::MCPhoton*)p);
   }
   static void deleteArray_RATcLcLDScLcLMCPhoton(void *p) {
      delete [] ((::RAT::DS::MCPhoton*)p);
   }
   static void destruct_RATcLcLDScLcLMCPhoton(void *p) {
      typedef ::RAT::DS::MCPhoton current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLDScLcLMCPhoton(TBuffer &buf, void *obj) {
      ((::RAT::DS::MCPhoton*)obj)->::RAT::DS::MCPhoton::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::DS::MCPhoton

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void MCSummary::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::MCSummary.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::RAT::DS::MCSummary thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> numScintPhoton;
      R__b >> numReemitPhoton;
      R__b >> totalScintEdep;
      R__b >> totalScintEdepQuenched;
      R__b >> initialScintTime;
      energyCentroid.Streamer(R__b);
      energyRMS.Streamer(R__b);
      opticalCentroid.Streamer(R__b);
      opticalRMS.Streamer(R__b);
      totalScintCentroid.Streamer(R__b);
      {
         RAT::DS::StringDoubleMap &R__stl =  energyLoss;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         for (R__i = 0; R__i < R__n; R__i++) {
            string R__t;
            {TString R__str;
             R__str.Streamer(R__b);
             R__t = R__str.Data();}
            double R__t2;
            R__b >> R__t2;
            typedef string Value_t;
            std::pair<Value_t const, double > R__t3(R__t,R__t2);
            R__stl.insert(R__t3);
         }
      }
      interactionName.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << numScintPhoton;
      R__b << numReemitPhoton;
      R__b << totalScintEdep;
      R__b << totalScintEdepQuenched;
      R__b << initialScintTime;
      energyCentroid.Streamer(R__b);
      energyRMS.Streamer(R__b);
      opticalCentroid.Streamer(R__b);
      opticalRMS.Streamer(R__b);
      totalScintCentroid.Streamer(R__b);
      {
         RAT::DS::StringDoubleMap &R__stl =  energyLoss;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            RAT::DS::StringDoubleMap::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            {TString R__str(((*R__k).first ).c_str());
             R__str.Streamer(R__b);};
            R__b << ((*R__k).second);
            }
         }
      }
      interactionName.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void MCSummary::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::MCSummary.
      TClass *R__cl = ::RAT::DS::MCSummary::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numScintPhoton", &numScintPhoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numReemitPhoton", &numReemitPhoton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "totalScintEdep", &totalScintEdep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "totalScintEdepQuenched", &totalScintEdepQuenched);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "initialScintTime", &initialScintTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energyCentroid", &energyCentroid);
      R__insp.InspectMember(energyCentroid, "energyCentroid.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energyRMS", &energyRMS);
      R__insp.InspectMember(energyRMS, "energyRMS.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "opticalCentroid", &opticalCentroid);
      R__insp.InspectMember(opticalCentroid, "opticalCentroid.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "opticalRMS", &opticalRMS);
      R__insp.InspectMember(opticalRMS, "opticalRMS.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "totalScintCentroid", &totalScintCentroid);
      R__insp.InspectMember(totalScintCentroid, "totalScintCentroid.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energyLoss", (void*)&energyLoss);
      R__insp.InspectMember("RAT::DS::StringDoubleMap", (void*)&energyLoss, "energyLoss.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "interactionName", &interactionName);
      R__insp.InspectMember(interactionName, "interactionName.");
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLMCSummary(void *p) {
      return  p ? new(p) ::RAT::DS::MCSummary : new ::RAT::DS::MCSummary;
   }
   static void *newArray_RATcLcLDScLcLMCSummary(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::MCSummary[nElements] : new ::RAT::DS::MCSummary[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLMCSummary(void *p) {
      delete ((::RAT::DS::MCSummary*)p);
   }
   static void deleteArray_RATcLcLDScLcLMCSummary(void *p) {
      delete [] ((::RAT::DS::MCSummary*)p);
   }
   static void destruct_RATcLcLDScLcLMCSummary(void *p) {
      typedef ::RAT::DS::MCSummary current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLDScLcLMCSummary(TBuffer &buf, void *obj) {
      ((::RAT::DS::MCSummary*)obj)->::RAT::DS::MCSummary::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::DS::MCSummary

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void MCTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::MCTrack.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::RAT::DS::MCTrack thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> id;
      R__b >> parentID;
      R__b >> pdgcode;
      R__b >> length;
      { TString R__str; R__str.Streamer(R__b); particleName = R__str.Data(); }
      {
         vector<MCTrackStep> &R__stl =  step;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            RAT::DS::MCTrackStep R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << id;
      R__b << parentID;
      R__b << pdgcode;
      R__b << length;
      { TString R__str = particleName.c_str(); R__str.Streamer(R__b);}
      {
         vector<MCTrackStep> &R__stl =  step;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<MCTrackStep>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((RAT::DS::MCTrackStep&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void MCTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::MCTrack.
      TClass *R__cl = ::RAT::DS::MCTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parentID", &parentID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdgcode", &pdgcode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "length", &length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particleName", (void*)&particleName);
      R__insp.InspectMember("string", (void*)&particleName, "particleName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "step", (void*)&step);
      R__insp.InspectMember("vector<MCTrackStep>", (void*)&step, "step.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLMCTrack(void *p) {
      return  p ? new(p) ::RAT::DS::MCTrack : new ::RAT::DS::MCTrack;
   }
   static void *newArray_RATcLcLDScLcLMCTrack(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::MCTrack[nElements] : new ::RAT::DS::MCTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLMCTrack(void *p) {
      delete ((::RAT::DS::MCTrack*)p);
   }
   static void deleteArray_RATcLcLDScLcLMCTrack(void *p) {
      delete [] ((::RAT::DS::MCTrack*)p);
   }
   static void destruct_RATcLcLDScLcLMCTrack(void *p) {
      typedef ::RAT::DS::MCTrack current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLDScLcLMCTrack(TBuffer &buf, void *obj) {
      ((::RAT::DS::MCTrack*)obj)->::RAT::DS::MCTrack::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::DS::MCTrack

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void MCTrackStep::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::MCTrackStep.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::RAT::DS::MCTrackStep thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> length;
      R__b >> globalTime;
      R__b >> localTime;
      R__b >> properTime;
      R__b >> ke;
      endpoint.Streamer(R__b);
      mom.Streamer(R__b);
      { TString R__str; R__str.Streamer(R__b); process = R__str.Data(); }
      { TString R__str; R__str.Streamer(R__b); volume = R__str.Data(); }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << length;
      R__b << globalTime;
      R__b << localTime;
      R__b << properTime;
      R__b << ke;
      endpoint.Streamer(R__b);
      mom.Streamer(R__b);
      { TString R__str = process.c_str(); R__str.Streamer(R__b);}
      { TString R__str = volume.c_str(); R__str.Streamer(R__b);}
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void MCTrackStep::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::MCTrackStep.
      TClass *R__cl = ::RAT::DS::MCTrackStep::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "length", &length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "globalTime", &globalTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "localTime", &localTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "properTime", &properTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ke", &ke);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "endpoint", &endpoint);
      R__insp.InspectMember(endpoint, "endpoint.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mom", &mom);
      R__insp.InspectMember(mom, "mom.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "process", (void*)&process);
      R__insp.InspectMember("string", (void*)&process, "process.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "volume", (void*)&volume);
      R__insp.InspectMember("string", (void*)&volume, "volume.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLMCTrackStep(void *p) {
      return  p ? new(p) ::RAT::DS::MCTrackStep : new ::RAT::DS::MCTrackStep;
   }
   static void *newArray_RATcLcLDScLcLMCTrackStep(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::MCTrackStep[nElements] : new ::RAT::DS::MCTrackStep[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLMCTrackStep(void *p) {
      delete ((::RAT::DS::MCTrackStep*)p);
   }
   static void deleteArray_RATcLcLDScLcLMCTrackStep(void *p) {
      delete [] ((::RAT::DS::MCTrackStep*)p);
   }
   static void destruct_RATcLcLDScLcLMCTrackStep(void *p) {
      typedef ::RAT::DS::MCTrackStep current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLDScLcLMCTrackStep(TBuffer &buf, void *obj) {
      ((::RAT::DS::MCTrackStep*)obj)->::RAT::DS::MCTrackStep::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::DS::MCTrackStep

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void PathFit::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::PathFit.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::RAT::DS::PathFit thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      //This works around a msvc bug and should be harmless on other platforms
      typedef RAT::DS::PosFit baseClass0;
      baseClass0::Streamer(R__b);
      R__b >> time0;
      R__b >> time;
      pos0.Streamer(R__b);
      dir.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      //This works around a msvc bug and should be harmless on other platforms
      typedef RAT::DS::PosFit baseClass0;
      baseClass0::Streamer(R__b);
      R__b << time0;
      R__b << time;
      pos0.Streamer(R__b);
      dir.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void PathFit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::PathFit.
      TClass *R__cl = ::RAT::DS::PathFit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time0", &time0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time", &time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos0", &pos0);
      R__insp.InspectMember(pos0, "pos0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dir", &dir);
      R__insp.InspectMember(dir, "dir.");
      TObject::ShowMembers(R__insp);
      //This works around a msvc bug and should be harmless on other platforms
      typedef RAT::DS::PosFit baseClass2;
      baseClass2::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLPathFit(void *p) {
      return  p ? new(p) ::RAT::DS::PathFit : new ::RAT::DS::PathFit;
   }
   static void *newArray_RATcLcLDScLcLPathFit(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::PathFit[nElements] : new ::RAT::DS::PathFit[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLPathFit(void *p) {
      delete ((::RAT::DS::PathFit*)p);
   }
   static void deleteArray_RATcLcLDScLcLPathFit(void *p) {
      delete [] ((::RAT::DS::PathFit*)p);
   }
   static void destruct_RATcLcLDScLcLPathFit(void *p) {
      typedef ::RAT::DS::PathFit current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLDScLcLPathFit(TBuffer &buf, void *obj) {
      ((::RAT::DS::PathFit*)obj)->::RAT::DS::PathFit::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::DS::PathFit

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void PMT::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::PMT.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::RAT::DS::PMT thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> id;
      R__b >> charge;
      R__b >> time;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << id;
      R__b << charge;
      R__b << time;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void PMT::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::PMT.
      TClass *R__cl = ::RAT::DS::PMT::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge", &charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time", &time);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLPMT(void *p) {
      return  p ? new(p) ::RAT::DS::PMT : new ::RAT::DS::PMT;
   }
   static void *newArray_RATcLcLDScLcLPMT(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::PMT[nElements] : new ::RAT::DS::PMT[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLPMT(void *p) {
      delete ((::RAT::DS::PMT*)p);
   }
   static void deleteArray_RATcLcLDScLcLPMT(void *p) {
      delete [] ((::RAT::DS::PMT*)p);
   }
   static void destruct_RATcLcLDScLcLPMT(void *p) {
      typedef ::RAT::DS::PMT current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLDScLcLPMT(TBuffer &buf, void *obj) {
      ((::RAT::DS::PMT*)obj)->::RAT::DS::PMT::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::DS::PMT

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void PMTInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::PMTInfo.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::RAT::DS::PMTInfo thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      {
         vector<TVector3> &R__stl =  pos;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TVector3 R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TVector3> &R__stl =  dir;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TVector3 R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  type;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  modeltype;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<std::string> &R__stl =  models;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            string R__t;
            {TString R__str;
             R__str.Streamer(R__b);
             R__t = R__str.Data();}
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      {
         vector<TVector3> &R__stl =  pos;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TVector3>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TVector3&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<TVector3> &R__stl =  dir;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TVector3>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TVector3&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<int> &R__stl =  type;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  modeltype;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<std::string> &R__stl =  models;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<std::string>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            {TString R__str((*R__k).c_str());
             R__str.Streamer(R__b);};
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void PMTInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::PMTInfo.
      TClass *R__cl = ::RAT::DS::PMTInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos", (void*)&pos);
      R__insp.InspectMember("vector<TVector3>", (void*)&pos, "pos.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dir", (void*)&dir);
      R__insp.InspectMember("vector<TVector3>", (void*)&dir, "dir.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", (void*)&type);
      R__insp.InspectMember("vector<int>", (void*)&type, "type.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "modeltype", (void*)&modeltype);
      R__insp.InspectMember("vector<int>", (void*)&modeltype, "modeltype.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "models", (void*)&models);
      R__insp.InspectMember("vector<std::string>", (void*)&models, "models.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLPMTInfo(void *p) {
      return  p ? new(p) ::RAT::DS::PMTInfo : new ::RAT::DS::PMTInfo;
   }
   static void *newArray_RATcLcLDScLcLPMTInfo(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::PMTInfo[nElements] : new ::RAT::DS::PMTInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLPMTInfo(void *p) {
      delete ((::RAT::DS::PMTInfo*)p);
   }
   static void deleteArray_RATcLcLDScLcLPMTInfo(void *p) {
      delete [] ((::RAT::DS::PMTInfo*)p);
   }
   static void destruct_RATcLcLDScLcLPMTInfo(void *p) {
      typedef ::RAT::DS::PMTInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLDScLcLPMTInfo(TBuffer &buf, void *obj) {
      ((::RAT::DS::PMTInfo*)obj)->::RAT::DS::PMTInfo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::DS::PMTInfo

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void PosFit::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::PosFit.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::RAT::DS::PosFit thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      { TString R__str; R__str.Streamer(R__b); posname = R__str.Data(); }
      pos.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      { TString R__str = posname.c_str(); R__str.Streamer(R__b);}
      pos.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void PosFit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::PosFit.
      TClass *R__cl = ::RAT::DS::PosFit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "posname", (void*)&posname);
      R__insp.InspectMember("string", (void*)&posname, "posname.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos", &pos);
      R__insp.InspectMember(pos, "pos.");
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLPosFit(void *p) {
      delete ((::RAT::DS::PosFit*)p);
   }
   static void deleteArray_RATcLcLDScLcLPosFit(void *p) {
      delete [] ((::RAT::DS::PosFit*)p);
   }
   static void destruct_RATcLcLDScLcLPosFit(void *p) {
      typedef ::RAT::DS::PosFit current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLDScLcLPosFit(TBuffer &buf, void *obj) {
      ((::RAT::DS::PosFit*)obj)->::RAT::DS::PosFit::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::DS::PosFit

      namespace RAT {
         namespace DS {
//______________________________________________________________________________
void Run::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DS::Run.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::RAT::DS::Run thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> id;
      R__b >> type;
      R__b >> startTime;
      {
         vector<PMTInfo> &R__stl =  pmtinfo;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            RAT::DS::PMTInfo R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<LAPPDInfo> &R__stl =  lappdinfo;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            RAT::DS::LAPPDInfo R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << id;
      R__b << type;
      R__b << startTime;
      {
         vector<PMTInfo> &R__stl =  pmtinfo;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<PMTInfo>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((RAT::DS::PMTInfo&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<LAPPDInfo> &R__stl =  lappdinfo;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<LAPPDInfo>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((RAT::DS::LAPPDInfo&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace RAT::DS
} // namespace RAT::DS
//______________________________________________________________________________
      namespace RAT {
         namespace DS {
void Run::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DS::Run.
      TClass *R__cl = ::RAT::DS::Run::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", &type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startTime", &startTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmtinfo", (void*)&pmtinfo);
      R__insp.InspectMember("vector<PMTInfo>", (void*)&pmtinfo, "pmtinfo.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lappdinfo", (void*)&lappdinfo);
      R__insp.InspectMember("vector<LAPPDInfo>", (void*)&lappdinfo, "lappdinfo.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT::DS
} // namespace RAT::DS
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLDScLcLRun(void *p) {
      return  p ? new(p) ::RAT::DS::Run : new ::RAT::DS::Run;
   }
   static void *newArray_RATcLcLDScLcLRun(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::DS::Run[nElements] : new ::RAT::DS::Run[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLDScLcLRun(void *p) {
      delete ((::RAT::DS::Run*)p);
   }
   static void deleteArray_RATcLcLDScLcLRun(void *p) {
      delete [] ((::RAT::DS::Run*)p);
   }
   static void destruct_RATcLcLDScLcLRun(void *p) {
      typedef ::RAT::DS::Run current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLDScLcLRun(TBuffer &buf, void *obj) {
      ((::RAT::DS::Run*)obj)->::RAT::DS::Run::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::DS::Run

      namespace RAT {
//______________________________________________________________________________
void DSReader::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::DSReader.

   TObject::Streamer(R__b);
}

} // namespace RAT
//______________________________________________________________________________
      namespace RAT {
void DSReader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::DSReader.
      TClass *R__cl = ::RAT::DSReader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "T", &T);
      R__insp.InspectMember(T, "T.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ds", &ds);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "next", &next);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "total", &total);
      TObject::ShowMembers(R__insp);
}

} // namespace RAT
namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_RATcLcLDSReader(void *p) {
      delete ((::RAT::DSReader*)p);
   }
   static void deleteArray_RATcLcLDSReader(void *p) {
      delete [] ((::RAT::DSReader*)p);
   }
   static void destruct_RATcLcLDSReader(void *p) {
      typedef ::RAT::DSReader current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLDSReader(TBuffer &buf, void *obj) {
      ((::RAT::DSReader*)obj)->::RAT::DSReader::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::DSReader

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_RATcLcLTrackNav(void *p) {
      delete ((::RAT::TrackNav*)p);
   }
   static void deleteArray_RATcLcLTrackNav(void *p) {
      delete [] ((::RAT::TrackNav*)p);
   }
   static void destruct_RATcLcLTrackNav(void *p) {
      typedef ::RAT::TrackNav current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::TrackNav

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_RATcLcLTrackCursor(void *p) {
      delete ((::RAT::TrackCursor*)p);
   }
   static void deleteArray_RATcLcLTrackCursor(void *p) {
      delete [] ((::RAT::TrackCursor*)p);
   }
   static void destruct_RATcLcLTrackCursor(void *p) {
      typedef ::RAT::TrackCursor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::RAT::TrackCursor

      namespace RAT {
//______________________________________________________________________________
void TrackNode::Streamer(TBuffer &R__b)
{
   // Stream an object of class RAT::TrackNode.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::RAT::TrackNode thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef RAT::DS::MCTrackStep baseClass0;
      baseClass0::Streamer(R__b);
      {
         vector<TrackNode*> &R__stl =  child;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(RAT::TrackNode));
         if (R__tcl1==0) {
            Error("child streamer","Missing the TClass object for RAT::TrackNode!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            RAT::TrackNode* R__t;
            R__t = (RAT::TrackNode*)R__b.ReadObjectAny(R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      R__b >> trackStart;
      R__b >> trackID;
      R__b >> stepID;
      R__b >> pdgcode;
      { TString R__str; R__str.Streamer(R__b); particleName = R__str.Data(); }
      R__b >> prev;
      R__b >> next;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      //This works around a msvc bug and should be harmless on other platforms
      typedef RAT::DS::MCTrackStep baseClass0;
      baseClass0::Streamer(R__b);
      {
         vector<TrackNode*> &R__stl =  child;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TrackNode*>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b << trackStart;
      R__b << trackID;
      R__b << stepID;
      R__b << pdgcode;
      { TString R__str = particleName.c_str(); R__str.Streamer(R__b);}
      R__b << prev;
      R__b << next;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace RAT
//______________________________________________________________________________
      namespace RAT {
void TrackNode::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RAT::TrackNode.
      TClass *R__cl = ::RAT::TrackNode::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "child", (void*)&child);
      R__insp.InspectMember("vector<TrackNode*>", (void*)&child, "child.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackStart", &trackStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackID", &trackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stepID", &stepID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdgcode", &pdgcode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particleName", (void*)&particleName);
      R__insp.InspectMember("string", (void*)&particleName, "particleName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*prev", &prev);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*next", &next);
      //This works around a msvc bug and should be harmless on other platforms
      typedef RAT::DS::MCTrackStep baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace RAT
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RATcLcLTrackNode(void *p) {
      return  p ? new(p) ::RAT::TrackNode : new ::RAT::TrackNode;
   }
   static void *newArray_RATcLcLTrackNode(Long_t nElements, void *p) {
      return p ? new(p) ::RAT::TrackNode[nElements] : new ::RAT::TrackNode[nElements];
   }
   // Wrapper around operator delete
   static void delete_RATcLcLTrackNode(void *p) {
      delete ((::RAT::TrackNode*)p);
   }
   static void deleteArray_RATcLcLTrackNode(void *p) {
      delete [] ((::RAT::TrackNode*)p);
   }
   static void destruct_RATcLcLTrackNode(void *p) {
      typedef ::RAT::TrackNode current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RATcLcLTrackNode(TBuffer &buf, void *obj) {
      ((::RAT::TrackNode*)obj)->::RAT::TrackNode::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RAT::TrackNode

namespace ROOTDict {
   void maplEintcORATcLcLDScLcLRunRecordmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcORATcLcLDScLcLRunRecordmUgR_Dictionary();
   static void *new_maplEintcORATcLcLDScLcLRunRecordmUgR(void *p = 0);
   static void *newArray_maplEintcORATcLcLDScLcLRunRecordmUgR(Long_t size, void *p);
   static void delete_maplEintcORATcLcLDScLcLRunRecordmUgR(void *p);
   static void deleteArray_maplEintcORATcLcLDScLcLRunRecordmUgR(void *p);
   static void destruct_maplEintcORATcLcLDScLcLRunRecordmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,RAT::DS::RunRecord*>*)
   {
      map<int,RAT::DS::RunRecord*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,RAT::DS::RunRecord*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,RAT::DS::RunRecord*>", -2, "/home/onetrueteal/Programs/SNOrat/snoing/install/root-5.34.34/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<int,RAT::DS::RunRecord*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcORATcLcLDScLcLRunRecordmUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,RAT::DS::RunRecord*>) );
      instance.SetNew(&new_maplEintcORATcLcLDScLcLRunRecordmUgR);
      instance.SetNewArray(&newArray_maplEintcORATcLcLDScLcLRunRecordmUgR);
      instance.SetDelete(&delete_maplEintcORATcLcLDScLcLRunRecordmUgR);
      instance.SetDeleteArray(&deleteArray_maplEintcORATcLcLDScLcLRunRecordmUgR);
      instance.SetDestructor(&destruct_maplEintcORATcLcLDScLcLRunRecordmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,RAT::DS::RunRecord*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,RAT::DS::RunRecord*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcORATcLcLDScLcLRunRecordmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,RAT::DS::RunRecord*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcORATcLcLDScLcLRunRecordmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,RAT::DS::RunRecord*> : new map<int,RAT::DS::RunRecord*>;
   }
   static void *newArray_maplEintcORATcLcLDScLcLRunRecordmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,RAT::DS::RunRecord*>[nElements] : new map<int,RAT::DS::RunRecord*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcORATcLcLDScLcLRunRecordmUgR(void *p) {
      delete ((map<int,RAT::DS::RunRecord*>*)p);
   }
   static void deleteArray_maplEintcORATcLcLDScLcLRunRecordmUgR(void *p) {
      delete [] ((map<int,RAT::DS::RunRecord*>*)p);
   }
   static void destruct_maplEintcORATcLcLDScLcLRunRecordmUgR(void *p) {
      typedef map<int,RAT::DS::RunRecord*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,RAT::DS::RunRecord*>

namespace ROOTDict {
   void maplEstringcOdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOdoublegR_Dictionary();
   static void *new_maplEstringcOdoublegR(void *p = 0);
   static void *newArray_maplEstringcOdoublegR(Long_t size, void *p);
   static void delete_maplEstringcOdoublegR(void *p);
   static void deleteArray_maplEstringcOdoublegR(void *p);
   static void destruct_maplEstringcOdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,double>*)
   {
      map<string,double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,double>", -2, "map.dll", 0,
                  typeid(map<string,double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,double>) );
      instance.SetNew(&new_maplEstringcOdoublegR);
      instance.SetNewArray(&newArray_maplEstringcOdoublegR);
      instance.SetDelete(&delete_maplEstringcOdoublegR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOdoublegR);
      instance.SetDestructor(&destruct_maplEstringcOdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,double> : new map<string,double>;
   }
   static void *newArray_maplEstringcOdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,double>[nElements] : new map<string,double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOdoublegR(void *p) {
      delete ((map<string,double>*)p);
   }
   static void deleteArray_maplEstringcOdoublegR(void *p) {
      delete [] ((map<string,double>*)p);
   }
   static void destruct_maplEstringcOdoublegR(void *p) {
      typedef map<string,double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,double>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLCalibgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLCalibgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLCalibgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLCalibgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLCalibgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLCalibgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLCalibgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::Calib>*)
   {
      vector<RAT::DS::Calib> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::Calib>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::Calib>", -2, "/home/onetrueteal/Programs/SNOrat/snoing/install/root-5.34.34/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::Calib>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLCalibgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::Calib>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLCalibgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLCalibgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLCalibgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLCalibgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLCalibgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::Calib> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::Calib>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLCalibgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::Calib>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLCalibgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::Calib> : new vector<RAT::DS::Calib>;
   }
   static void *newArray_vectorlERATcLcLDScLcLCalibgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::Calib>[nElements] : new vector<RAT::DS::Calib>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLCalibgR(void *p) {
      delete ((vector<RAT::DS::Calib>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLCalibgR(void *p) {
      delete [] ((vector<RAT::DS::Calib>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLCalibgR(void *p) {
      typedef vector<RAT::DS::Calib> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::Calib>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLCentroidgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLCentroidgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLCentroidgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLCentroidgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLCentroidgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLCentroidgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLCentroidgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::Centroid>*)
   {
      vector<RAT::DS::Centroid> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::Centroid>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::Centroid>", -2, "/home/onetrueteal/Programs/SNOrat/snoing/install/root-5.34.34/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::Centroid>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLCentroidgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::Centroid>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLCentroidgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLCentroidgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLCentroidgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLCentroidgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLCentroidgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::Centroid> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::Centroid>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLCentroidgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::Centroid>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLCentroidgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::Centroid> : new vector<RAT::DS::Centroid>;
   }
   static void *newArray_vectorlERATcLcLDScLcLCentroidgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::Centroid>[nElements] : new vector<RAT::DS::Centroid>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLCentroidgR(void *p) {
      delete ((vector<RAT::DS::Centroid>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLCentroidgR(void *p) {
      delete [] ((vector<RAT::DS::Centroid>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLCentroidgR(void *p) {
      typedef vector<RAT::DS::Centroid> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::Centroid>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLEVgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLEVgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLEVgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLEVgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLEVgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLEVgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLEVgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::EV>*)
   {
      vector<RAT::DS::EV> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::EV>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::EV>", -2, "/home/onetrueteal/Programs/SNOrat/snoing/install/root-5.34.34/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::EV>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLEVgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::EV>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLEVgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLEVgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLEVgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLEVgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLEVgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::EV> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::EV>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLEVgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::EV>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLEVgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::EV> : new vector<RAT::DS::EV>;
   }
   static void *newArray_vectorlERATcLcLDScLcLEVgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::EV>[nElements] : new vector<RAT::DS::EV>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLEVgR(void *p) {
      delete ((vector<RAT::DS::EV>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLEVgR(void *p) {
      delete [] ((vector<RAT::DS::EV>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLEVgR(void *p) {
      typedef vector<RAT::DS::EV> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::EV>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLLAPPDgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLLAPPDgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLLAPPDgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLLAPPDgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLLAPPDgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLLAPPDgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLLAPPDgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::LAPPD>*)
   {
      vector<RAT::DS::LAPPD> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::LAPPD>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::LAPPD>", -2, "/home/onetrueteal/Programs/SNOrat/snoing/install/root-5.34.34/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::LAPPD>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLLAPPDgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::LAPPD>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLLAPPDgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLLAPPDgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLLAPPDgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLLAPPDgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLLAPPDgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::LAPPD> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::LAPPD>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLLAPPDgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::LAPPD>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLLAPPDgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::LAPPD> : new vector<RAT::DS::LAPPD>;
   }
   static void *newArray_vectorlERATcLcLDScLcLLAPPDgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::LAPPD>[nElements] : new vector<RAT::DS::LAPPD>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLLAPPDgR(void *p) {
      delete ((vector<RAT::DS::LAPPD>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLLAPPDgR(void *p) {
      delete [] ((vector<RAT::DS::LAPPD>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLLAPPDgR(void *p) {
      typedef vector<RAT::DS::LAPPD> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::LAPPD>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLLAPPDHitgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLLAPPDHitgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLLAPPDHitgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLLAPPDHitgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLLAPPDHitgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLLAPPDHitgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLLAPPDHitgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::LAPPDHit>*)
   {
      vector<RAT::DS::LAPPDHit> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::LAPPDHit>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::LAPPDHit>", -2, "/home/onetrueteal/Programs/SNOrat/snoing/install/root-5.34.34/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::LAPPDHit>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLLAPPDHitgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::LAPPDHit>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLLAPPDHitgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLLAPPDHitgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLLAPPDHitgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLLAPPDHitgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLLAPPDHitgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::LAPPDHit> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::LAPPDHit>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLLAPPDHitgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::LAPPDHit>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLLAPPDHitgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::LAPPDHit> : new vector<RAT::DS::LAPPDHit>;
   }
   static void *newArray_vectorlERATcLcLDScLcLLAPPDHitgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::LAPPDHit>[nElements] : new vector<RAT::DS::LAPPDHit>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLLAPPDHitgR(void *p) {
      delete ((vector<RAT::DS::LAPPDHit>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLLAPPDHitgR(void *p) {
      delete [] ((vector<RAT::DS::LAPPDHit>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLLAPPDHitgR(void *p) {
      typedef vector<RAT::DS::LAPPDHit> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::LAPPDHit>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLLAPPDInfogR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLLAPPDInfogR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLLAPPDInfogR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLLAPPDInfogR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLLAPPDInfogR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLLAPPDInfogR(void *p);
   static void destruct_vectorlERATcLcLDScLcLLAPPDInfogR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::LAPPDInfo>*)
   {
      vector<RAT::DS::LAPPDInfo> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::LAPPDInfo>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::LAPPDInfo>", -2, "/home/onetrueteal/Programs/SNOrat/snoing/install/root-5.34.34/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::LAPPDInfo>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLLAPPDInfogR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::LAPPDInfo>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLLAPPDInfogR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLLAPPDInfogR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLLAPPDInfogR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLLAPPDInfogR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLLAPPDInfogR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::LAPPDInfo> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::LAPPDInfo>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLLAPPDInfogR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::LAPPDInfo>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLLAPPDInfogR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::LAPPDInfo> : new vector<RAT::DS::LAPPDInfo>;
   }
   static void *newArray_vectorlERATcLcLDScLcLLAPPDInfogR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::LAPPDInfo>[nElements] : new vector<RAT::DS::LAPPDInfo>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLLAPPDInfogR(void *p) {
      delete ((vector<RAT::DS::LAPPDInfo>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLLAPPDInfogR(void *p) {
      delete [] ((vector<RAT::DS::LAPPDInfo>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLLAPPDInfogR(void *p) {
      typedef vector<RAT::DS::LAPPDInfo> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::LAPPDInfo>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLMCgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLMCgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLMCgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLMCgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLMCgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLMCgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLMCgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::MC>*)
   {
      vector<RAT::DS::MC> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::MC>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::MC>", -2, "/home/onetrueteal/Programs/SNOrat/snoing/install/root-5.34.34/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::MC>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLMCgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::MC>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLMCgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLMCgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLMCgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLMCgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLMCgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::MC> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::MC>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLMCgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::MC>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLMCgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MC> : new vector<RAT::DS::MC>;
   }
   static void *newArray_vectorlERATcLcLDScLcLMCgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MC>[nElements] : new vector<RAT::DS::MC>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLMCgR(void *p) {
      delete ((vector<RAT::DS::MC>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLMCgR(void *p) {
      delete [] ((vector<RAT::DS::MC>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLMCgR(void *p) {
      typedef vector<RAT::DS::MC> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::MC>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLMCLAPPDgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLMCLAPPDgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLMCLAPPDgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLMCLAPPDgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLMCLAPPDgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLMCLAPPDgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLMCLAPPDgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::MCLAPPD>*)
   {
      vector<RAT::DS::MCLAPPD> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::MCLAPPD>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::MCLAPPD>", -2, "/home/onetrueteal/Programs/SNOrat/snoing/install/root-5.34.34/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::MCLAPPD>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLMCLAPPDgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::MCLAPPD>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLMCLAPPDgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLMCLAPPDgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLMCLAPPDgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLMCLAPPDgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLMCLAPPDgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::MCLAPPD> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::MCLAPPD>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLMCLAPPDgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::MCLAPPD>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLMCLAPPDgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCLAPPD> : new vector<RAT::DS::MCLAPPD>;
   }
   static void *newArray_vectorlERATcLcLDScLcLMCLAPPDgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCLAPPD>[nElements] : new vector<RAT::DS::MCLAPPD>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLMCLAPPDgR(void *p) {
      delete ((vector<RAT::DS::MCLAPPD>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLMCLAPPDgR(void *p) {
      delete [] ((vector<RAT::DS::MCLAPPD>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLMCLAPPDgR(void *p) {
      typedef vector<RAT::DS::MCLAPPD> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::MCLAPPD>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLMCPMTgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLMCPMTgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLMCPMTgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLMCPMTgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLMCPMTgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLMCPMTgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLMCPMTgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::MCPMT>*)
   {
      vector<RAT::DS::MCPMT> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::MCPMT>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::MCPMT>", -2, "/home/onetrueteal/Programs/SNOrat/snoing/install/root-5.34.34/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::MCPMT>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLMCPMTgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::MCPMT>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLMCPMTgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLMCPMTgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLMCPMTgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLMCPMTgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLMCPMTgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::MCPMT> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::MCPMT>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLMCPMTgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::MCPMT>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLMCPMTgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCPMT> : new vector<RAT::DS::MCPMT>;
   }
   static void *newArray_vectorlERATcLcLDScLcLMCPMTgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCPMT>[nElements] : new vector<RAT::DS::MCPMT>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLMCPMTgR(void *p) {
      delete ((vector<RAT::DS::MCPMT>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLMCPMTgR(void *p) {
      delete [] ((vector<RAT::DS::MCPMT>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLMCPMTgR(void *p) {
      typedef vector<RAT::DS::MCPMT> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::MCPMT>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLMCParticlegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLMCParticlegR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLMCParticlegR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLMCParticlegR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLMCParticlegR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLMCParticlegR(void *p);
   static void destruct_vectorlERATcLcLDScLcLMCParticlegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::MCParticle>*)
   {
      vector<RAT::DS::MCParticle> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::MCParticle>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::MCParticle>", -2, "/home/onetrueteal/Programs/SNOrat/snoing/install/root-5.34.34/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::MCParticle>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLMCParticlegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::MCParticle>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLMCParticlegR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLMCParticlegR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLMCParticlegR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLMCParticlegR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLMCParticlegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::MCParticle> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::MCParticle>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLMCParticlegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::MCParticle>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLMCParticlegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCParticle> : new vector<RAT::DS::MCParticle>;
   }
   static void *newArray_vectorlERATcLcLDScLcLMCParticlegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCParticle>[nElements] : new vector<RAT::DS::MCParticle>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLMCParticlegR(void *p) {
      delete ((vector<RAT::DS::MCParticle>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLMCParticlegR(void *p) {
      delete [] ((vector<RAT::DS::MCParticle>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLMCParticlegR(void *p) {
      typedef vector<RAT::DS::MCParticle> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::MCParticle>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLMCPhotongR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLMCPhotongR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLMCPhotongR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLMCPhotongR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLMCPhotongR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLMCPhotongR(void *p);
   static void destruct_vectorlERATcLcLDScLcLMCPhotongR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::MCPhoton>*)
   {
      vector<RAT::DS::MCPhoton> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::MCPhoton>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::MCPhoton>", -2, "/home/onetrueteal/Programs/SNOrat/snoing/install/root-5.34.34/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::MCPhoton>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLMCPhotongR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::MCPhoton>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLMCPhotongR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLMCPhotongR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLMCPhotongR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLMCPhotongR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLMCPhotongR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::MCPhoton> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::MCPhoton>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLMCPhotongR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::MCPhoton>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLMCPhotongR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCPhoton> : new vector<RAT::DS::MCPhoton>;
   }
   static void *newArray_vectorlERATcLcLDScLcLMCPhotongR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCPhoton>[nElements] : new vector<RAT::DS::MCPhoton>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLMCPhotongR(void *p) {
      delete ((vector<RAT::DS::MCPhoton>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLMCPhotongR(void *p) {
      delete [] ((vector<RAT::DS::MCPhoton>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLMCPhotongR(void *p) {
      typedef vector<RAT::DS::MCPhoton> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::MCPhoton>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLMCSummarygR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLMCSummarygR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLMCSummarygR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLMCSummarygR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLMCSummarygR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLMCSummarygR(void *p);
   static void destruct_vectorlERATcLcLDScLcLMCSummarygR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::MCSummary>*)
   {
      vector<RAT::DS::MCSummary> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::MCSummary>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::MCSummary>", -2, "/home/onetrueteal/Programs/SNOrat/snoing/install/root-5.34.34/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::MCSummary>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLMCSummarygR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::MCSummary>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLMCSummarygR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLMCSummarygR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLMCSummarygR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLMCSummarygR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLMCSummarygR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::MCSummary> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::MCSummary>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLMCSummarygR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::MCSummary>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLMCSummarygR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCSummary> : new vector<RAT::DS::MCSummary>;
   }
   static void *newArray_vectorlERATcLcLDScLcLMCSummarygR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCSummary>[nElements] : new vector<RAT::DS::MCSummary>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLMCSummarygR(void *p) {
      delete ((vector<RAT::DS::MCSummary>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLMCSummarygR(void *p) {
      delete [] ((vector<RAT::DS::MCSummary>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLMCSummarygR(void *p) {
      typedef vector<RAT::DS::MCSummary> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::MCSummary>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLMCTrackgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLMCTrackgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLMCTrackgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLMCTrackgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLMCTrackgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLMCTrackgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLMCTrackgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::MCTrack>*)
   {
      vector<RAT::DS::MCTrack> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::MCTrack>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::MCTrack>", -2, "/home/onetrueteal/Programs/SNOrat/snoing/install/root-5.34.34/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::MCTrack>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLMCTrackgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::MCTrack>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLMCTrackgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLMCTrackgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLMCTrackgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLMCTrackgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLMCTrackgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::MCTrack> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::MCTrack>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLMCTrackgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::MCTrack>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLMCTrackgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCTrack> : new vector<RAT::DS::MCTrack>;
   }
   static void *newArray_vectorlERATcLcLDScLcLMCTrackgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCTrack>[nElements] : new vector<RAT::DS::MCTrack>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLMCTrackgR(void *p) {
      delete ((vector<RAT::DS::MCTrack>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLMCTrackgR(void *p) {
      delete [] ((vector<RAT::DS::MCTrack>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLMCTrackgR(void *p) {
      typedef vector<RAT::DS::MCTrack> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::MCTrack>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLMCTrackStepgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLMCTrackStepgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLMCTrackStepgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLMCTrackStepgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLMCTrackStepgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLMCTrackStepgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLMCTrackStepgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::MCTrackStep>*)
   {
      vector<RAT::DS::MCTrackStep> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::MCTrackStep>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::MCTrackStep>", -2, "/home/onetrueteal/Programs/SNOrat/snoing/install/root-5.34.34/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::MCTrackStep>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLMCTrackStepgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::MCTrackStep>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLMCTrackStepgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLMCTrackStepgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLMCTrackStepgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLMCTrackStepgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLMCTrackStepgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::MCTrackStep> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::MCTrackStep>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLMCTrackStepgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::MCTrackStep>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLMCTrackStepgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCTrackStep> : new vector<RAT::DS::MCTrackStep>;
   }
   static void *newArray_vectorlERATcLcLDScLcLMCTrackStepgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::MCTrackStep>[nElements] : new vector<RAT::DS::MCTrackStep>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLMCTrackStepgR(void *p) {
      delete ((vector<RAT::DS::MCTrackStep>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLMCTrackStepgR(void *p) {
      delete [] ((vector<RAT::DS::MCTrackStep>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLMCTrackStepgR(void *p) {
      typedef vector<RAT::DS::MCTrackStep> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::MCTrackStep>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLPMTgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLPMTgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLPMTgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLPMTgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLPMTgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLPMTgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLPMTgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::PMT>*)
   {
      vector<RAT::DS::PMT> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::PMT>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::PMT>", -2, "/home/onetrueteal/Programs/SNOrat/snoing/install/root-5.34.34/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::PMT>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLPMTgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::PMT>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLPMTgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLPMTgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLPMTgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLPMTgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLPMTgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::PMT> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::PMT>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLPMTgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::PMT>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLPMTgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::PMT> : new vector<RAT::DS::PMT>;
   }
   static void *newArray_vectorlERATcLcLDScLcLPMTgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::PMT>[nElements] : new vector<RAT::DS::PMT>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLPMTgR(void *p) {
      delete ((vector<RAT::DS::PMT>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLPMTgR(void *p) {
      delete [] ((vector<RAT::DS::PMT>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLPMTgR(void *p) {
      typedef vector<RAT::DS::PMT> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::PMT>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLPMTInfogR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLPMTInfogR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLPMTInfogR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLPMTInfogR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLPMTInfogR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLPMTInfogR(void *p);
   static void destruct_vectorlERATcLcLDScLcLPMTInfogR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::PMTInfo>*)
   {
      vector<RAT::DS::PMTInfo> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::PMTInfo>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::PMTInfo>", -2, "/home/onetrueteal/Programs/SNOrat/snoing/install/root-5.34.34/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::PMTInfo>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLPMTInfogR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::PMTInfo>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLPMTInfogR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLPMTInfogR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLPMTInfogR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLPMTInfogR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLPMTInfogR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::PMTInfo> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::PMTInfo>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLPMTInfogR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::PMTInfo>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLPMTInfogR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::PMTInfo> : new vector<RAT::DS::PMTInfo>;
   }
   static void *newArray_vectorlERATcLcLDScLcLPMTInfogR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::PMTInfo>[nElements] : new vector<RAT::DS::PMTInfo>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLPMTInfogR(void *p) {
      delete ((vector<RAT::DS::PMTInfo>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLPMTInfogR(void *p) {
      delete [] ((vector<RAT::DS::PMTInfo>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLPMTInfogR(void *p) {
      typedef vector<RAT::DS::PMTInfo> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::PMTInfo>

namespace ROOTDict {
   void vectorlERATcLcLDScLcLPathFitgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLDScLcLPathFitgR_Dictionary();
   static void *new_vectorlERATcLcLDScLcLPathFitgR(void *p = 0);
   static void *newArray_vectorlERATcLcLDScLcLPathFitgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLDScLcLPathFitgR(void *p);
   static void deleteArray_vectorlERATcLcLDScLcLPathFitgR(void *p);
   static void destruct_vectorlERATcLcLDScLcLPathFitgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::DS::PathFit>*)
   {
      vector<RAT::DS::PathFit> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::DS::PathFit>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::DS::PathFit>", -2, "/home/onetrueteal/Programs/SNOrat/snoing/install/root-5.34.34/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::DS::PathFit>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLDScLcLPathFitgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::DS::PathFit>) );
      instance.SetNew(&new_vectorlERATcLcLDScLcLPathFitgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLDScLcLPathFitgR);
      instance.SetDelete(&delete_vectorlERATcLcLDScLcLPathFitgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLDScLcLPathFitgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLDScLcLPathFitgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::DS::PathFit> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::DS::PathFit>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLDScLcLPathFitgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::DS::PathFit>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLDScLcLPathFitgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::PathFit> : new vector<RAT::DS::PathFit>;
   }
   static void *newArray_vectorlERATcLcLDScLcLPathFitgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::DS::PathFit>[nElements] : new vector<RAT::DS::PathFit>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLDScLcLPathFitgR(void *p) {
      delete ((vector<RAT::DS::PathFit>*)p);
   }
   static void deleteArray_vectorlERATcLcLDScLcLPathFitgR(void *p) {
      delete [] ((vector<RAT::DS::PathFit>*)p);
   }
   static void destruct_vectorlERATcLcLDScLcLPathFitgR(void *p) {
      typedef vector<RAT::DS::PathFit> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::DS::PathFit>

namespace ROOTDict {
   void vectorlERATcLcLTrackNodemUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlERATcLcLTrackNodemUgR_Dictionary();
   static void *new_vectorlERATcLcLTrackNodemUgR(void *p = 0);
   static void *newArray_vectorlERATcLcLTrackNodemUgR(Long_t size, void *p);
   static void delete_vectorlERATcLcLTrackNodemUgR(void *p);
   static void deleteArray_vectorlERATcLcLTrackNodemUgR(void *p);
   static void destruct_vectorlERATcLcLTrackNodemUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<RAT::TrackNode*>*)
   {
      vector<RAT::TrackNode*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<RAT::TrackNode*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<RAT::TrackNode*>", -2, "/home/onetrueteal/Programs/SNOrat/snoing/install/root-5.34.34/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<RAT::TrackNode*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlERATcLcLTrackNodemUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<RAT::TrackNode*>) );
      instance.SetNew(&new_vectorlERATcLcLTrackNodemUgR);
      instance.SetNewArray(&newArray_vectorlERATcLcLTrackNodemUgR);
      instance.SetDelete(&delete_vectorlERATcLcLTrackNodemUgR);
      instance.SetDeleteArray(&deleteArray_vectorlERATcLcLTrackNodemUgR);
      instance.SetDestructor(&destruct_vectorlERATcLcLTrackNodemUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<RAT::TrackNode*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<RAT::TrackNode*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlERATcLcLTrackNodemUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<RAT::TrackNode*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlERATcLcLTrackNodemUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::TrackNode*> : new vector<RAT::TrackNode*>;
   }
   static void *newArray_vectorlERATcLcLTrackNodemUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<RAT::TrackNode*>[nElements] : new vector<RAT::TrackNode*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlERATcLcLTrackNodemUgR(void *p) {
      delete ((vector<RAT::TrackNode*>*)p);
   }
   static void deleteArray_vectorlERATcLcLTrackNodemUgR(void *p) {
      delete [] ((vector<RAT::TrackNode*>*)p);
   }
   static void destruct_vectorlERATcLcLTrackNodemUgR(void *p) {
      typedef vector<RAT::TrackNode*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<RAT::TrackNode*>

namespace ROOTDict {
   void vectorlETVector3gR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETVector3gR_Dictionary();
   static void *new_vectorlETVector3gR(void *p = 0);
   static void *newArray_vectorlETVector3gR(Long_t size, void *p);
   static void delete_vectorlETVector3gR(void *p);
   static void deleteArray_vectorlETVector3gR(void *p);
   static void destruct_vectorlETVector3gR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TVector3>*)
   {
      vector<TVector3> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TVector3>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TVector3>", -2, "/home/onetrueteal/Programs/SNOrat/snoing/install/root-5.34.34/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TVector3>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETVector3gR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TVector3>) );
      instance.SetNew(&new_vectorlETVector3gR);
      instance.SetNewArray(&newArray_vectorlETVector3gR);
      instance.SetDelete(&delete_vectorlETVector3gR);
      instance.SetDeleteArray(&deleteArray_vectorlETVector3gR);
      instance.SetDestructor(&destruct_vectorlETVector3gR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TVector3> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TVector3>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETVector3gR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TVector3>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETVector3gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TVector3> : new vector<TVector3>;
   }
   static void *newArray_vectorlETVector3gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TVector3>[nElements] : new vector<TVector3>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETVector3gR(void *p) {
      delete ((vector<TVector3>*)p);
   }
   static void deleteArray_vectorlETVector3gR(void *p) {
      delete [] ((vector<TVector3>*)p);
   }
   static void destruct_vectorlETVector3gR(void *p) {
      typedef vector<TVector3> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TVector3>

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/home/onetrueteal/Programs/SNOrat/snoing/install/root-5.34.34/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

namespace ROOTDict {
   void vectorlEpairlEstringcOintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEpairlEstringcOintgRsPgR_Dictionary();
   static void *new_vectorlEpairlEstringcOintgRsPgR(void *p = 0);
   static void *newArray_vectorlEpairlEstringcOintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEpairlEstringcOintgRsPgR(void *p);
   static void deleteArray_vectorlEpairlEstringcOintgRsPgR(void *p);
   static void destruct_vectorlEpairlEstringcOintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<pair<string,int> >*)
   {
      vector<pair<string,int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<pair<string,int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<pair<string,int> >", -2, "/home/onetrueteal/Programs/SNOrat/snoing/install/root-5.34.34/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<pair<string,int> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEpairlEstringcOintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<pair<string,int> >) );
      instance.SetNew(&new_vectorlEpairlEstringcOintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEpairlEstringcOintgRsPgR);
      instance.SetDelete(&delete_vectorlEpairlEstringcOintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEpairlEstringcOintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEpairlEstringcOintgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<pair<string,int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<pair<string,int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEpairlEstringcOintgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<pair<string,int> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEpairlEstringcOintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<string,int> > : new vector<pair<string,int> >;
   }
   static void *newArray_vectorlEpairlEstringcOintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<pair<string,int> >[nElements] : new vector<pair<string,int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEpairlEstringcOintgRsPgR(void *p) {
      delete ((vector<pair<string,int> >*)p);
   }
   static void deleteArray_vectorlEpairlEstringcOintgRsPgR(void *p) {
      delete [] ((vector<pair<string,int> >*)p);
   }
   static void destruct_vectorlEpairlEstringcOintgRsPgR(void *p) {
      typedef vector<pair<string,int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<pair<string,int> >

namespace ROOTDict {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "/home/onetrueteal/Programs/SNOrat/snoing/install/root-5.34.34/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<string>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<string>

/********************************************************
* ./src/RATEventRootDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableRATEventRootDict();

extern "C" void G__set_cpp_environmentRATEventRootDict() {
  G__cpp_reset_tagtableRATEventRootDict();
}
#include <new>
extern "C" int G__cpp_dllrevRATEventRootDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* RAT::DS::MCParticle */
static int G__RATEventRootDict_225_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCParticle[n];
     } else {
       p = new((void*) gvp) RAT::DS::MCParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCParticle;
     } else {
       p = new((void*) gvp) RAT::DS::MCParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_225_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MCParticle*) G__getstructoffset())->GetPDGCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_225_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCParticle*) G__getstructoffset())->SetPDGCode((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_225_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const RAT::DS::MCParticle*) G__getstructoffset())->GetParticleName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_225_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCParticle*) G__getstructoffset())->SetParticleName(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_225_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCParticle*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_225_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCParticle*) G__getstructoffset())->SetTime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_225_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const RAT::DS::MCParticle*) G__getstructoffset())->GetPosition();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_225_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCParticle*) G__getstructoffset())->SetPosition(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_225_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCParticle*) G__getstructoffset())->GetKE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_225_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCParticle*) G__getstructoffset())->SetKE((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_225_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const RAT::DS::MCParticle*) G__getstructoffset())->GetMomentum();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_225_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCParticle*) G__getstructoffset())->SetMomentum(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_225_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const RAT::DS::MCParticle*) G__getstructoffset())->GetPolarization();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_225_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCParticle*) G__getstructoffset())->SetPolarization(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_225_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::MCParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_225_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_225_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::MCParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_225_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::MCParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_225_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_225_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_225_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_225_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_225_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RATEventRootDict_225_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::MCParticle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::MCParticle(*(RAT::DS::MCParticle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::MCParticle G__TRATcLcLDScLcLMCParticle;
static int G__RATEventRootDict_225_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::MCParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::MCParticle*) (soff+(sizeof(RAT::DS::MCParticle)*i)))->~G__TRATcLcLDScLcLMCParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::MCParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::MCParticle*) (soff))->~G__TRATcLcLDScLcLMCParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RATEventRootDict_225_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCParticle* dest = (RAT::DS::MCParticle*) G__getstructoffset();
   *dest = *(RAT::DS::MCParticle*) libp->para[0].ref;
   const RAT::DS::MCParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::MCTrackStep */
static int G__RATEventRootDict_226_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCTrackStep* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCTrackStep[n];
     } else {
       p = new((void*) gvp) RAT::DS::MCTrackStep[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCTrackStep;
     } else {
       p = new((void*) gvp) RAT::DS::MCTrackStep;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrackStep));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCTrackStep*) G__getstructoffset())->GetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrackStep*) G__getstructoffset())->SetLength((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const RAT::DS::MCTrackStep*) G__getstructoffset())->GetEndpoint();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrackStep*) G__getstructoffset())->SetEndpoint(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCTrackStep*) G__getstructoffset())->GetGlobalTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrackStep*) G__getstructoffset())->SetGlobalTime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCTrackStep*) G__getstructoffset())->GetLocalTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrackStep*) G__getstructoffset())->SetLocalTime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCTrackStep*) G__getstructoffset())->GetProperTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrackStep*) G__getstructoffset())->SetProperTime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const RAT::DS::MCTrackStep*) G__getstructoffset())->GetMomentum();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrackStep*) G__getstructoffset())->SetMomentum(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCTrackStep*) G__getstructoffset())->GetKE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrackStep*) G__getstructoffset())->SetKE((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const RAT::DS::MCTrackStep*) G__getstructoffset())->GetProcess();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrackStep*) G__getstructoffset())->SetProcess(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const RAT::DS::MCTrackStep*) G__getstructoffset())->GetVolume();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrackStep*) G__getstructoffset())->SetVolume(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::MCTrackStep::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCTrackStep::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::MCTrackStep::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::MCTrackStep::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrackStep*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCTrackStep::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCTrackStep::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCTrackStep::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_226_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCTrackStep::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RATEventRootDict_226_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::MCTrackStep* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::MCTrackStep(*(RAT::DS::MCTrackStep*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrackStep));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::MCTrackStep G__TRATcLcLDScLcLMCTrackStep;
static int G__RATEventRootDict_226_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::MCTrackStep*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::MCTrackStep*) (soff+(sizeof(RAT::DS::MCTrackStep)*i)))->~G__TRATcLcLDScLcLMCTrackStep();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::MCTrackStep*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::MCTrackStep*) (soff))->~G__TRATcLcLDScLcLMCTrackStep();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RATEventRootDict_226_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCTrackStep* dest = (RAT::DS::MCTrackStep*) G__getstructoffset();
   *dest = *(RAT::DS::MCTrackStep*) libp->para[0].ref;
   const RAT::DS::MCTrackStep& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::MCTrack */
static int G__RATEventRootDict_227_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCTrack[n];
     } else {
       p = new((void*) gvp) RAT::DS::MCTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCTrack;
     } else {
       p = new((void*) gvp) RAT::DS::MCTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_227_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MCTrack*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_227_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrack*) G__getstructoffset())->SetID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_227_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MCTrack*) G__getstructoffset())->GetParentID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_227_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrack*) G__getstructoffset())->SetParentID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_227_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MCTrack*) G__getstructoffset())->GetPDGCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_227_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrack*) G__getstructoffset())->SetPDGCode((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_227_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const RAT::DS::MCTrack*) G__getstructoffset())->GetParticleName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_227_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrack*) G__getstructoffset())->SetParticleName(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_227_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MCTrack*) G__getstructoffset())->GetMCTrackStep((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_227_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MCTrack*) G__getstructoffset())->GetMCTrackStepCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_227_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MCTrack*) G__getstructoffset())->AddNewMCTrackStep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_227_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrack*) G__getstructoffset())->PruneMCTrackStep();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_227_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MCTrack*) G__getstructoffset())->GetLastMCTrackStep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_227_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrack*) G__getstructoffset())->PruneIntermediateMCTrackSteps();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_227_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCTrack*) G__getstructoffset())->GetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_227_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrack*) G__getstructoffset())->SetLength((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_227_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::MCTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_227_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_227_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::MCTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_227_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::MCTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_227_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_227_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_227_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_227_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_227_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RATEventRootDict_227_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::MCTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::MCTrack(*(RAT::DS::MCTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::MCTrack G__TRATcLcLDScLcLMCTrack;
static int G__RATEventRootDict_227_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::MCTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::MCTrack*) (soff+(sizeof(RAT::DS::MCTrack)*i)))->~G__TRATcLcLDScLcLMCTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::MCTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::MCTrack*) (soff))->~G__TRATcLcLDScLcLMCTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RATEventRootDict_227_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCTrack* dest = (RAT::DS::MCTrack*) G__getstructoffset();
   *dest = *(RAT::DS::MCTrack*) libp->para[0].ref;
   const RAT::DS::MCTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::MCSummary */
static int G__RATEventRootDict_467_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCSummary* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCSummary[n];
     } else {
       p = new((void*) gvp) RAT::DS::MCSummary[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCSummary;
     } else {
       p = new((void*) gvp) RAT::DS::MCSummary;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCSummary));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const RAT::DS::MCSummary*) G__getstructoffset())->GetEnergyCentroid();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCSummary*) G__getstructoffset())->SetEnergyCentroid(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const RAT::DS::MCSummary*) G__getstructoffset())->GetEnergyRMS();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCSummary*) G__getstructoffset())->SetEnergyRMS(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((RAT::DS::MCSummary*) G__getstructoffset())->GetEnergyLossByVolume((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCSummary*) G__getstructoffset())->SetEnergyLossByVolume(*((RAT::DS::StringDoubleMap*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCSummary*) G__getstructoffset())->GetTotalScintEdep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCSummary*) G__getstructoffset())->SetTotalScintEdep((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCSummary*) G__getstructoffset())->GetTotalScintEdepQuenched());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCSummary*) G__getstructoffset())->SetTotalScintEdepQuenched((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const RAT::DS::MCSummary*) G__getstructoffset())->GetTotalScintCentroid();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCSummary*) G__getstructoffset())->SetTotalScintCentroid(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCSummary*) G__getstructoffset())->GetInitialScintTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCSummary*) G__getstructoffset())->SetInitialScintTime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MCSummary*) G__getstructoffset())->GetNumScintPhoton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCSummary*) G__getstructoffset())->SetNumScintPhoton((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MCSummary*) G__getstructoffset())->GetNumReemitPhoton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCSummary*) G__getstructoffset())->SetNumReemitPhoton((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString& obj = ((const RAT::DS::MCSummary*) G__getstructoffset())->GetInteractionName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCSummary*) G__getstructoffset())->SetInteractionName(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::MCSummary::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCSummary::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::MCSummary::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::MCSummary::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCSummary*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCSummary::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCSummary::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCSummary::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_467_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCSummary::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RATEventRootDict_467_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::MCSummary* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::MCSummary(*(RAT::DS::MCSummary*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCSummary));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::MCSummary G__TRATcLcLDScLcLMCSummary;
static int G__RATEventRootDict_467_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::MCSummary*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::MCSummary*) (soff+(sizeof(RAT::DS::MCSummary)*i)))->~G__TRATcLcLDScLcLMCSummary();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::MCSummary*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::MCSummary*) (soff))->~G__TRATcLcLDScLcLMCSummary();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RATEventRootDict_467_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCSummary* dest = (RAT::DS::MCSummary*) G__getstructoffset();
   *dest = *(RAT::DS::MCSummary*) libp->para[0].ref;
   const RAT::DS::MCSummary& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::MCPhoton */
static int G__RATEventRootDict_468_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCPhoton* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCPhoton[n];
     } else {
       p = new((void*) gvp) RAT::DS::MCPhoton[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCPhoton;
     } else {
       p = new((void*) gvp) RAT::DS::MCPhoton;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCPhoton));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCPhoton*) G__getstructoffset())->GetHitTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPhoton*) G__getstructoffset())->SetHitTime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCPhoton*) G__getstructoffset())->GetFrontEndTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPhoton*) G__getstructoffset())->SetFrontEndTime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const RAT::DS::MCPhoton*) G__getstructoffset())->GetPosition();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPhoton*) G__getstructoffset())->SetPosition(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCPhoton*) G__getstructoffset())->GetLambda());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPhoton*) G__getstructoffset())->SetLambda((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const RAT::DS::MCPhoton*) G__getstructoffset())->GetMomentum();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPhoton*) G__getstructoffset())->SetMomentum(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const RAT::DS::MCPhoton*) G__getstructoffset())->GetPolarization();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPhoton*) G__getstructoffset())->SetPolarization(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCPhoton*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPhoton*) G__getstructoffset())->SetCharge((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPhoton*) G__getstructoffset())->SetDarkHit((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::DS::MCPhoton*) G__getstructoffset())->IsDarkHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPhoton*) G__getstructoffset())->SetTrackID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MCPhoton*) G__getstructoffset())->GetTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::MCPhoton::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCPhoton::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::MCPhoton::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::MCPhoton::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPhoton*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCPhoton::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCPhoton::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCPhoton::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_468_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCPhoton::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RATEventRootDict_468_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::MCPhoton* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::MCPhoton(*(RAT::DS::MCPhoton*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCPhoton));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::MCPhoton G__TRATcLcLDScLcLMCPhoton;
static int G__RATEventRootDict_468_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::MCPhoton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::MCPhoton*) (soff+(sizeof(RAT::DS::MCPhoton)*i)))->~G__TRATcLcLDScLcLMCPhoton();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::MCPhoton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::MCPhoton*) (soff))->~G__TRATcLcLDScLcLMCPhoton();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RATEventRootDict_468_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCPhoton* dest = (RAT::DS::MCPhoton*) G__getstructoffset();
   *dest = *(RAT::DS::MCPhoton*) libp->para[0].ref;
   const RAT::DS::MCPhoton& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::MCPMT */
static int G__RATEventRootDict_469_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCPMT* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCPMT[n];
     } else {
       p = new((void*) gvp) RAT::DS::MCPMT[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCPMT;
     } else {
       p = new((void*) gvp) RAT::DS::MCPMT;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCPMT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_469_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MCPMT*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_469_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPMT*) G__getstructoffset())->SetID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_469_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCPMT*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_469_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MCPMT*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_469_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPMT*) G__getstructoffset())->SetType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_469_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const RAT::DS::MCPMT*) G__getstructoffset())->GetModelName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_469_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPMT*) G__getstructoffset())->SetModelName(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_469_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MCPMT*) G__getstructoffset())->GetMCPhoton((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_469_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MCPMT*) G__getstructoffset())->GetMCPhotonCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_469_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MCPMT*) G__getstructoffset())->AddNewMCPhoton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_469_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPMT*) G__getstructoffset())->PruneMCPhoton();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_469_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::MCPMT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_469_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCPMT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_469_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::MCPMT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_469_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::MCPMT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_469_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCPMT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_469_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCPMT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_469_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCPMT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_469_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCPMT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_469_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCPMT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RATEventRootDict_469_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::MCPMT* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::MCPMT(*(RAT::DS::MCPMT*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCPMT));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::MCPMT G__TRATcLcLDScLcLMCPMT;
static int G__RATEventRootDict_469_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::MCPMT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::MCPMT*) (soff+(sizeof(RAT::DS::MCPMT)*i)))->~G__TRATcLcLDScLcLMCPMT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::MCPMT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::MCPMT*) (soff))->~G__TRATcLcLDScLcLMCPMT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RATEventRootDict_469_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCPMT* dest = (RAT::DS::MCPMT*) G__getstructoffset();
   *dest = *(RAT::DS::MCPMT*) libp->para[0].ref;
   const RAT::DS::MCPMT& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::MCLAPPD */
static int G__RATEventRootDict_474_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCLAPPD* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCLAPPD[n];
     } else {
       p = new((void*) gvp) RAT::DS::MCLAPPD[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MCLAPPD;
     } else {
       p = new((void*) gvp) RAT::DS::MCLAPPD;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCLAPPD));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_474_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MCLAPPD*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_474_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCLAPPD*) G__getstructoffset())->SetID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_474_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::MCLAPPD*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_474_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MCLAPPD*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_474_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCLAPPD*) G__getstructoffset())->SetType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_474_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const RAT::DS::MCLAPPD*) G__getstructoffset())->GetModelName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_474_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCLAPPD*) G__getstructoffset())->SetModelName(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_474_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MCLAPPD*) G__getstructoffset())->GetMCPhoton((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_474_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MCLAPPD*) G__getstructoffset())->GetMCPhotonCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_474_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MCLAPPD*) G__getstructoffset())->AddNewMCPhoton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_474_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCLAPPD*) G__getstructoffset())->PruneMCPhoton();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_474_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::MCLAPPD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_474_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCLAPPD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_474_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::MCLAPPD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_474_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::MCLAPPD::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_474_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MCLAPPD*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_474_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCLAPPD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_474_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCLAPPD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_474_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MCLAPPD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_474_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MCLAPPD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RATEventRootDict_474_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::MCLAPPD* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::MCLAPPD(*(RAT::DS::MCLAPPD*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCLAPPD));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::MCLAPPD G__TRATcLcLDScLcLMCLAPPD;
static int G__RATEventRootDict_474_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::MCLAPPD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::MCLAPPD*) (soff+(sizeof(RAT::DS::MCLAPPD)*i)))->~G__TRATcLcLDScLcLMCLAPPD();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::MCLAPPD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::MCLAPPD*) (soff))->~G__TRATcLcLDScLcLMCLAPPD();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RATEventRootDict_474_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MCLAPPD* dest = (RAT::DS::MCLAPPD*) G__getstructoffset();
   *dest = *(RAT::DS::MCLAPPD*) libp->para[0].ref;
   const RAT::DS::MCLAPPD& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::MC */
static int G__RATEventRootDict_475_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MC[n];
     } else {
       p = new((void*) gvp) RAT::DS::MC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::MC;
     } else {
       p = new((void*) gvp) RAT::DS::MC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MC*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MC*) G__getstructoffset())->SetID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TTimeStamp* pobj;
         const TTimeStamp xobj = ((const RAT::DS::MC*) G__getstructoffset())->GetUTC();
         pobj = new TTimeStamp(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MC*) G__getstructoffset())->SetUTC(*(TTimeStamp*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MC*) G__getstructoffset())->GetMCParticle((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MC*) G__getstructoffset())->GetMCParticleCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MC*) G__getstructoffset())->AddNewMCParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MC*) G__getstructoffset())->PruneMCParticle();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MC*) G__getstructoffset())->GetMCParent((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MC*) G__getstructoffset())->GetMCParentCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MC*) G__getstructoffset())->AddNewMCParent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MC*) G__getstructoffset())->PruneMCParent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MC*) G__getstructoffset())->GetMCTrack((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MC*) G__getstructoffset())->GetMCTrackCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MC*) G__getstructoffset())->AddNewMCTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MC*) G__getstructoffset())->PruneMCTrack();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MC*) G__getstructoffset())->PruneMCTrack(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MC*) G__getstructoffset())->GetMCPMT((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MC*) G__getstructoffset())->GetMCLAPPD((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MC*) G__getstructoffset())->GetMCPMTCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MC*) G__getstructoffset())->GetMCLAPPDCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MC*) G__getstructoffset())->AddNewMCPMT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MC*) G__getstructoffset())->AddNewMCLAPPD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MC*) G__getstructoffset())->PrunePMT();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MC*) G__getstructoffset())->PruneLAPPD();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MC*) G__getstructoffset())->GetNumPE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MC*) G__getstructoffset())->SetNumPE((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MC*) G__getstructoffset())->GetNumPE_lappd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MC*) G__getstructoffset())->SetNumPE_lappd((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::MC*) G__getstructoffset())->GetNumDark());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MC*) G__getstructoffset())->SetNumDark((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::MC*) G__getstructoffset())->GetMCSummary());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::DS::MC*) G__getstructoffset())->ExistMCSummary());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MC*) G__getstructoffset())->PruneMCSummary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::MC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::MC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::MC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::MC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::MC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_475_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::MC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RATEventRootDict_475_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::MC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::MC(*(RAT::DS::MC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::MC G__TRATcLcLDScLcLMC;
static int G__RATEventRootDict_475_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::MC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::MC*) (soff+(sizeof(RAT::DS::MC)*i)))->~G__TRATcLcLDScLcLMC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::MC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::MC*) (soff))->~G__TRATcLcLDScLcLMC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RATEventRootDict_475_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::MC* dest = (RAT::DS::MC*) G__getstructoffset();
   *dest = *(RAT::DS::MC*) libp->para[0].ref;
   const RAT::DS::MC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::PMT */
static int G__RATEventRootDict_497_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::PMT* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::PMT[n];
     } else {
       p = new((void*) gvp) RAT::DS::PMT[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::PMT;
     } else {
       p = new((void*) gvp) RAT::DS::PMT;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPMT));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_497_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PMT*) G__getstructoffset())->SetID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_497_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RAT::DS::PMT*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_497_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PMT*) G__getstructoffset())->SetCharge((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_497_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((RAT::DS::PMT*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_497_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PMT*) G__getstructoffset())->SetTime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_497_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((RAT::DS::PMT*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_497_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::PMT::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_497_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::PMT::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_497_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::PMT::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_497_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::PMT::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_497_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PMT*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_497_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::PMT::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_497_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::PMT::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_497_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::PMT::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_497_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::PMT::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RATEventRootDict_497_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::PMT* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::PMT(*(RAT::DS::PMT*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPMT));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::PMT G__TRATcLcLDScLcLPMT;
static int G__RATEventRootDict_497_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::PMT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::PMT*) (soff+(sizeof(RAT::DS::PMT)*i)))->~G__TRATcLcLDScLcLPMT();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::PMT*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::PMT*) (soff))->~G__TRATcLcLDScLcLPMT();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RATEventRootDict_497_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::PMT* dest = (RAT::DS::PMT*) G__getstructoffset();
   *dest = *(RAT::DS::PMT*) libp->para[0].ref;
   const RAT::DS::PMT& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::LAPPDHit */
static int G__RATEventRootDict_498_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::LAPPDHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::LAPPDHit[n];
     } else {
       p = new((void*) gvp) RAT::DS::LAPPDHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::LAPPDHit;
     } else {
       p = new((void*) gvp) RAT::DS::LAPPDHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPDHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_498_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::LAPPDHit*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_498_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::LAPPDHit*) G__getstructoffset())->SetTime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_498_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const RAT::DS::LAPPDHit*) G__getstructoffset())->GetPosition();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_498_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::LAPPDHit*) G__getstructoffset())->SetPosition(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_498_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::LAPPDHit*) G__getstructoffset())->GetCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_498_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::LAPPDHit*) G__getstructoffset())->SetCharge((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_498_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::LAPPDHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_498_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::LAPPDHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_498_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::LAPPDHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_498_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::LAPPDHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_498_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::LAPPDHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_498_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::LAPPDHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_498_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::LAPPDHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_498_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::LAPPDHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_498_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::LAPPDHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RATEventRootDict_498_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::LAPPDHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::LAPPDHit(*(RAT::DS::LAPPDHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPDHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::LAPPDHit G__TRATcLcLDScLcLLAPPDHit;
static int G__RATEventRootDict_498_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::LAPPDHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::LAPPDHit*) (soff+(sizeof(RAT::DS::LAPPDHit)*i)))->~G__TRATcLcLDScLcLLAPPDHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::LAPPDHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::LAPPDHit*) (soff))->~G__TRATcLcLDScLcLLAPPDHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RATEventRootDict_498_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::LAPPDHit* dest = (RAT::DS::LAPPDHit*) G__getstructoffset();
   *dest = *(RAT::DS::LAPPDHit*) libp->para[0].ref;
   const RAT::DS::LAPPDHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::LAPPD */
static int G__RATEventRootDict_499_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::LAPPD* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::LAPPD[n];
     } else {
       p = new((void*) gvp) RAT::DS::LAPPD[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::LAPPD;
     } else {
       p = new((void*) gvp) RAT::DS::LAPPD;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPD));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_499_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::LAPPD*) G__getstructoffset())->SetID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_499_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RAT::DS::LAPPD*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_499_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::LAPPD*) G__getstructoffset())->SetTotalCharge((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_499_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((RAT::DS::LAPPD*) G__getstructoffset())->GetTotalCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_499_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::LAPPD*) G__getstructoffset())->SetTotalTime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_499_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((RAT::DS::LAPPD*) G__getstructoffset())->GetTotalTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_499_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::LAPPD*) G__getstructoffset())->GetHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_499_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::LAPPD*) G__getstructoffset())->GetNHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_499_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::LAPPD*) G__getstructoffset())->AddNewHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_499_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::LAPPD*) G__getstructoffset())->PruneHits();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_499_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::LAPPD::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_499_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::LAPPD::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_499_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::LAPPD::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_499_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::LAPPD::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_499_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::LAPPD*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_499_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::LAPPD::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_499_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::LAPPD::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_499_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::LAPPD::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_499_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::LAPPD::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RATEventRootDict_499_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::LAPPD* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::LAPPD(*(RAT::DS::LAPPD*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPD));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::LAPPD G__TRATcLcLDScLcLLAPPD;
static int G__RATEventRootDict_499_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::LAPPD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::LAPPD*) (soff+(sizeof(RAT::DS::LAPPD)*i)))->~G__TRATcLcLDScLcLLAPPD();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::LAPPD*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::LAPPD*) (soff))->~G__TRATcLcLDScLcLLAPPD();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RATEventRootDict_499_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::LAPPD* dest = (RAT::DS::LAPPD*) G__getstructoffset();
   *dest = *(RAT::DS::LAPPD*) libp->para[0].ref;
   const RAT::DS::LAPPD& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::PosFit */
static int G__RATEventRootDict_504_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::PosFit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RAT::DS::PosFit((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) RAT::DS::PosFit((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPosFit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_504_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const RAT::DS::PosFit*) G__getstructoffset())->GetPosFitName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_504_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PosFit*) G__getstructoffset())->SetPosFitName(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_504_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const RAT::DS::PosFit*) G__getstructoffset())->GetPosition();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_504_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PosFit*) G__getstructoffset())->SetPosition(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_504_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::PosFit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_504_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::PosFit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_504_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::PosFit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_504_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::PosFit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_504_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RAT::DS::PosFit*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_504_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PosFit*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_504_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PosFit*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_504_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PosFit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_504_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::PosFit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_504_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::PosFit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_504_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::PosFit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_504_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::PosFit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RATEventRootDict_504_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::PosFit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::PosFit(*(RAT::DS::PosFit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPosFit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::PosFit G__TRATcLcLDScLcLPosFit;
static int G__RATEventRootDict_504_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::PosFit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::PosFit*) (soff+(sizeof(RAT::DS::PosFit)*i)))->~G__TRATcLcLDScLcLPosFit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::PosFit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::PosFit*) (soff))->~G__TRATcLcLDScLcLPosFit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RATEventRootDict_504_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::PosFit* dest = (RAT::DS::PosFit*) G__getstructoffset();
   *dest = *(RAT::DS::PosFit*) libp->para[0].ref;
   const RAT::DS::PosFit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::Centroid */
static int G__RATEventRootDict_505_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::Centroid* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::Centroid[n];
     } else {
       p = new((void*) gvp) RAT::DS::Centroid[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::Centroid;
     } else {
       p = new((void*) gvp) RAT::DS::Centroid;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLCentroid));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_505_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RAT::DS::Centroid*) G__getstructoffset())->GetPower());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_505_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Centroid*) G__getstructoffset())->SetPower((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_505_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::Centroid::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_505_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::Centroid::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_505_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::Centroid::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_505_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::Centroid::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_505_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Centroid*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_505_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::Centroid::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_505_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::Centroid::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_505_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::Centroid::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_505_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::Centroid::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RATEventRootDict_505_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::Centroid* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::Centroid(*(RAT::DS::Centroid*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLCentroid));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::Centroid G__TRATcLcLDScLcLCentroid;
static int G__RATEventRootDict_505_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::Centroid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::Centroid*) (soff+(sizeof(RAT::DS::Centroid)*i)))->~G__TRATcLcLDScLcLCentroid();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::Centroid*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::Centroid*) (soff))->~G__TRATcLcLDScLcLCentroid();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RATEventRootDict_505_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::Centroid* dest = (RAT::DS::Centroid*) G__getstructoffset();
   *dest = *(RAT::DS::Centroid*) libp->para[0].ref;
   const RAT::DS::Centroid& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::PathFit */
static int G__RATEventRootDict_506_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::PathFit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::PathFit[n];
     } else {
       p = new((void*) gvp) RAT::DS::PathFit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::PathFit;
     } else {
       p = new((void*) gvp) RAT::DS::PathFit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPathFit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_506_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RAT::DS::PathFit*) G__getstructoffset())->GetTime0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_506_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PathFit*) G__getstructoffset())->SetTime0((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_506_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const RAT::DS::PathFit*) G__getstructoffset())->GetPos0();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_506_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PathFit*) G__getstructoffset())->SetPos0(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_506_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RAT::DS::PathFit*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_506_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PathFit*) G__getstructoffset())->SetTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_506_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const RAT::DS::PathFit*) G__getstructoffset())->GetDirection();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_506_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PathFit*) G__getstructoffset())->SetDirection(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_506_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::PathFit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_506_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::PathFit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_506_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::PathFit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_506_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::PathFit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_506_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PathFit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_506_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::PathFit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_506_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::PathFit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_506_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::PathFit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_506_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::PathFit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RATEventRootDict_506_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::PathFit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::PathFit(*(RAT::DS::PathFit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPathFit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::PathFit G__TRATcLcLDScLcLPathFit;
static int G__RATEventRootDict_506_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::PathFit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::PathFit*) (soff+(sizeof(RAT::DS::PathFit)*i)))->~G__TRATcLcLDScLcLPathFit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::PathFit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::PathFit*) (soff))->~G__TRATcLcLDScLcLPathFit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RATEventRootDict_506_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::PathFit* dest = (RAT::DS::PathFit*) G__getstructoffset();
   *dest = *(RAT::DS::PathFit*) libp->para[0].ref;
   const RAT::DS::PathFit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::EV */
static int G__RATEventRootDict_507_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::EV* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::EV[n];
     } else {
       p = new((void*) gvp) RAT::DS::EV[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::EV;
     } else {
       p = new((void*) gvp) RAT::DS::EV;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLEV));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::EV*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::EV*) G__getstructoffset())->SetID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TTimeStamp* pobj;
         const TTimeStamp xobj = ((const RAT::DS::EV*) G__getstructoffset())->GetUTC();
         pobj = new TTimeStamp(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::EV*) G__getstructoffset())->SetUTC(*(TTimeStamp*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::EV*) G__getstructoffset())->GetPMT((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::EV*) G__getstructoffset())->GetPMTCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::EV*) G__getstructoffset())->AddNewPMT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::EV*) G__getstructoffset())->PrunePMT();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::EV*) G__getstructoffset())->Nhits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::EV*) G__getstructoffset())->GetLAPPD((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::EV*) G__getstructoffset())->GetLAPPDCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::EV*) G__getstructoffset())->AddNewLAPPD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::EV*) G__getstructoffset())->PruneLAPPD();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::EV*) G__getstructoffset())->GetDeltaT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::EV*) G__getstructoffset())->SetDeltaT((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::EV*) G__getstructoffset())->GetTotalCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::EV*) G__getstructoffset())->SetTotalCharge((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::EV*) G__getstructoffset())->GetCentroid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::DS::EV*) G__getstructoffset())->ExistCentroid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::EV*) G__getstructoffset())->PruneCentroid();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::EV*) G__getstructoffset())->GetPathFit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::DS::EV*) G__getstructoffset())->ExistPathFit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::EV*) G__getstructoffset())->PrunePathFit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::EV::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::EV::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::EV::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::EV::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::EV*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::EV::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::EV::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::EV::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_507_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::EV::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RATEventRootDict_507_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::EV* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::EV(*(RAT::DS::EV*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLEV));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::EV G__TRATcLcLDScLcLEV;
static int G__RATEventRootDict_507_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::EV*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::EV*) (soff+(sizeof(RAT::DS::EV)*i)))->~G__TRATcLcLDScLcLEV();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::EV*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::EV*) (soff))->~G__TRATcLcLDScLcLEV();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RATEventRootDict_507_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::EV* dest = (RAT::DS::EV*) G__getstructoffset();
   *dest = *(RAT::DS::EV*) libp->para[0].ref;
   const RAT::DS::EV& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::Calib */
static int G__RATEventRootDict_524_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::Calib* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::Calib[n];
     } else {
       p = new((void*) gvp) RAT::DS::Calib[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::Calib;
     } else {
       p = new((void*) gvp) RAT::DS::Calib;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLCalib));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_524_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const RAT::DS::Calib*) G__getstructoffset())->GetSourceName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_524_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Calib*) G__getstructoffset())->SetSourceName(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_524_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::Calib*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_524_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Calib*) G__getstructoffset())->SetID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_524_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::Calib*) G__getstructoffset())->GetMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_524_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Calib*) G__getstructoffset())->SetMode((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_524_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RAT::DS::Calib*) G__getstructoffset())->GetIntensity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_524_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Calib*) G__getstructoffset())->SetIntensity((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_524_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TTimeStamp* pobj;
         const TTimeStamp xobj = ((const RAT::DS::Calib*) G__getstructoffset())->GetUTC();
         pobj = new TTimeStamp(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_524_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Calib*) G__getstructoffset())->SetUTC(*(TTimeStamp*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_524_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const RAT::DS::Calib*) G__getstructoffset())->GetPosition();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_524_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Calib*) G__getstructoffset())->SetPosition(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_524_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::Calib::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_524_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::Calib::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_524_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::Calib::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_524_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::Calib::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_524_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Calib*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_524_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::Calib::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_524_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::Calib::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_524_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::Calib::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_524_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::Calib::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RATEventRootDict_524_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::Calib* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::Calib(*(RAT::DS::Calib*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLCalib));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::Calib G__TRATcLcLDScLcLCalib;
static int G__RATEventRootDict_524_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::Calib*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::Calib*) (soff+(sizeof(RAT::DS::Calib)*i)))->~G__TRATcLcLDScLcLCalib();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::Calib*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::Calib*) (soff))->~G__TRATcLcLDScLcLCalib();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RATEventRootDict_524_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::Calib* dest = (RAT::DS::Calib*) G__getstructoffset();
   *dest = *(RAT::DS::Calib*) libp->para[0].ref;
   const RAT::DS::Calib& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::Root */
static int G__RATEventRootDict_525_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::Root* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::Root[n];
     } else {
       p = new((void*) gvp) RAT::DS::Root[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::Root;
     } else {
       p = new((void*) gvp) RAT::DS::Root;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRoot));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::Root*) G__getstructoffset())->GetRunID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Root*) G__getstructoffset())->SetRunID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Root*) G__getstructoffset())->AppendProcResult(*(string*) libp->para[0].ref, (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::Root*) G__getstructoffset())->GetLastProcResult(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::Root*) G__getstructoffset())->GetLastProcResult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<std::pair<std::string,int> >* pobj;
         const vector<std::pair<std::string,int> > xobj = ((const RAT::DS::Root*) G__getstructoffset())->GetProcResult();
         pobj = new vector<std::pair<std::string,int> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const RAT::DS::Root*) G__getstructoffset())->GetRatVersion();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Root*) G__getstructoffset())->SetRatVersion(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::Root*) G__getstructoffset())->GetMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::DS::Root*) G__getstructoffset())->ExistMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Root*) G__getstructoffset())->PruneMC();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::Root*) G__getstructoffset())->GetCalib());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::DS::Root*) G__getstructoffset())->ExistCalib());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Root*) G__getstructoffset())->PruneCalib();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::Root*) G__getstructoffset())->GetEV((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::Root*) G__getstructoffset())->GetEVCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::Root*) G__getstructoffset())->AddNewEV());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::DS::Root*) G__getstructoffset())->ExistEV());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Root*) G__getstructoffset())->PruneEV();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Root*) G__getstructoffset())->PruneEV((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::Root*) G__getstructoffset())->GetUserDataCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Root*) G__getstructoffset())->SetUserDataCount((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RAT::DS::Root*) G__getstructoffset())->GetUserData((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Root*) G__getstructoffset())->SetUserData((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::Root::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::Root::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::Root::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::Root::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Root*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::Root::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::Root::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::Root::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_525_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::Root::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RATEventRootDict_525_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::Root* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::Root(*(RAT::DS::Root*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRoot));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::Root G__TRATcLcLDScLcLRoot;
static int G__RATEventRootDict_525_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::Root*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::Root*) (soff+(sizeof(RAT::DS::Root)*i)))->~G__TRATcLcLDScLcLRoot();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::Root*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::Root*) (soff))->~G__TRATcLcLDScLcLRoot();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RATEventRootDict_525_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::Root* dest = (RAT::DS::Root*) G__getstructoffset();
   *dest = *(RAT::DS::Root*) libp->para[0].ref;
   const RAT::DS::Root& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::PMTInfo */
static int G__RATEventRootDict_621_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::PMTInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::PMTInfo[n];
     } else {
       p = new((void*) gvp) RAT::DS::PMTInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::PMTInfo;
     } else {
       p = new((void*) gvp) RAT::DS::PMTInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPMTInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_621_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PMTInfo*) G__getstructoffset())->AddPMT(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (const int) G__int(libp->para[2]), *((const string*) G__int(libp->para[3])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_621_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PMTInfo*) G__getstructoffset())->AddPMT(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (const int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_621_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::PMTInfo*) G__getstructoffset())->GetPMTCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_621_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const RAT::DS::PMTInfo*) G__getstructoffset())->GetPosition((int) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_621_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PMTInfo*) G__getstructoffset())->SetPosition((int) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_621_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const RAT::DS::PMTInfo*) G__getstructoffset())->GetDirection((int) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_621_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PMTInfo*) G__getstructoffset())->SetDirection((int) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_621_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::PMTInfo*) G__getstructoffset())->GetType((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_621_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PMTInfo*) G__getstructoffset())->SetType((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_621_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::PMTInfo*) G__getstructoffset())->GetModel((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_621_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RAT::DS::PMTInfo*) G__getstructoffset())->SetModel((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_621_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const RAT::DS::PMTInfo*) G__getstructoffset())->GetModelName((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_621_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::PMTInfo*) G__getstructoffset())->GetModelCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_621_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::PMTInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_621_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::PMTInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_621_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::PMTInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_621_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::PMTInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_621_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::PMTInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_621_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::PMTInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_621_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::PMTInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_621_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::PMTInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_621_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::PMTInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RATEventRootDict_621_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::PMTInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::PMTInfo(*(RAT::DS::PMTInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPMTInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::PMTInfo G__TRATcLcLDScLcLPMTInfo;
static int G__RATEventRootDict_621_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::PMTInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::PMTInfo*) (soff+(sizeof(RAT::DS::PMTInfo)*i)))->~G__TRATcLcLDScLcLPMTInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::PMTInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::PMTInfo*) (soff))->~G__TRATcLcLDScLcLPMTInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RATEventRootDict_621_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::PMTInfo* dest = (RAT::DS::PMTInfo*) G__getstructoffset();
   *dest = *(RAT::DS::PMTInfo*) libp->para[0].ref;
   const RAT::DS::PMTInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::LAPPDInfo */
static int G__RATEventRootDict_634_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::LAPPDInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::LAPPDInfo[n];
     } else {
       p = new((void*) gvp) RAT::DS::LAPPDInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::LAPPDInfo;
     } else {
       p = new((void*) gvp) RAT::DS::LAPPDInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPDInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_634_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::LAPPDInfo*) G__getstructoffset())->AddLAPPD(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (const int) G__int(libp->para[2]), *((const string*) G__int(libp->para[3])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_634_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::LAPPDInfo*) G__getstructoffset())->AddLAPPD(*(TVector3*) libp->para[0].ref, *(TVector3*) libp->para[1].ref
, (const int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_634_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::LAPPDInfo*) G__getstructoffset())->GetLAPPDCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_634_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const RAT::DS::LAPPDInfo*) G__getstructoffset())->GetPosition((int) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_634_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::LAPPDInfo*) G__getstructoffset())->SetPosition((int) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_634_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const RAT::DS::LAPPDInfo*) G__getstructoffset())->GetDirection((int) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_634_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::LAPPDInfo*) G__getstructoffset())->SetDirection((int) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_634_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::LAPPDInfo*) G__getstructoffset())->GetType((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_634_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::LAPPDInfo*) G__getstructoffset())->SetType((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_634_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::LAPPDInfo*) G__getstructoffset())->GetModel((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_634_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RAT::DS::LAPPDInfo*) G__getstructoffset())->SetModel((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_634_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const RAT::DS::LAPPDInfo*) G__getstructoffset())->GetModelName((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_634_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::LAPPDInfo*) G__getstructoffset())->GetModelCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_634_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::LAPPDInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_634_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::LAPPDInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_634_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::LAPPDInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_634_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::LAPPDInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_634_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::LAPPDInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_634_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::LAPPDInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_634_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::LAPPDInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_634_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::LAPPDInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_634_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::LAPPDInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RATEventRootDict_634_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::LAPPDInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::LAPPDInfo(*(RAT::DS::LAPPDInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPDInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::LAPPDInfo G__TRATcLcLDScLcLLAPPDInfo;
static int G__RATEventRootDict_634_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::LAPPDInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::LAPPDInfo*) (soff+(sizeof(RAT::DS::LAPPDInfo)*i)))->~G__TRATcLcLDScLcLLAPPDInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::LAPPDInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::LAPPDInfo*) (soff))->~G__TRATcLcLDScLcLLAPPDInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RATEventRootDict_634_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::LAPPDInfo* dest = (RAT::DS::LAPPDInfo*) G__getstructoffset();
   *dest = *(RAT::DS::LAPPDInfo*) libp->para[0].ref;
   const RAT::DS::LAPPDInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::Run */
static int G__RATEventRootDict_635_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::Run* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::Run[n];
     } else {
       p = new((void*) gvp) RAT::DS::Run[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::Run;
     } else {
       p = new((void*) gvp) RAT::DS::Run;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_635_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::DS::Run*) G__getstructoffset())->GetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_635_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Run*) G__getstructoffset())->SetID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_635_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letULonglong(result7, 109, (G__uint64) ((const RAT::DS::Run*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_635_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Run*) G__getstructoffset())->SetType((ULong64_t) G__ULonglong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_635_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((const RAT::DS::Run*) G__getstructoffset())->GetStartTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_635_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Run*) G__getstructoffset())->SetStartTime((time_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_635_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::Run*) G__getstructoffset())->GetPMTInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_635_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Run*) G__getstructoffset())->SetPMTInfo((RAT::DS::PMTInfo*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_635_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RAT::DS::Run*) G__getstructoffset())->ExistPMTInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_635_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Run*) G__getstructoffset())->PrunePMTInfo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_635_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::Run*) G__getstructoffset())->GetLAPPDInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_635_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Run*) G__getstructoffset())->SetLAPPDInfo((RAT::DS::LAPPDInfo*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_635_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RAT::DS::Run*) G__getstructoffset())->ExistLAPPDInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_635_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Run*) G__getstructoffset())->PruneLAPPDInfo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_635_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::Run::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_635_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::Run::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_635_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::Run::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_635_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::Run::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_635_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::Run*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_635_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::Run::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_635_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::Run::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_635_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::Run::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_635_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::Run::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RATEventRootDict_635_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::Run* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::Run(*(RAT::DS::Run*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRun));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::Run G__TRATcLcLDScLcLRun;
static int G__RATEventRootDict_635_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::Run*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::Run*) (soff+(sizeof(RAT::DS::Run)*i)))->~G__TRATcLcLDScLcLRun();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::Run*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::Run*) (soff))->~G__TRATcLcLDScLcLRun();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RATEventRootDict_635_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::Run* dest = (RAT::DS::Run*) G__getstructoffset();
   *dest = *(RAT::DS::Run*) libp->para[0].ref;
   const RAT::DS::Run& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DS::RunStore */
static int G__RATEventRootDict_644_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::RunStore::Get());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::RunStore::GetRun((RAT::DS::Root*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::RunStore::GetRun((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::RunStore::SetReadTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::RunStore::SetWriteTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::RunStore::FlushWriteTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::RunStore::AddNewRun((RAT::DS::Run*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      RAT::DS::RunStore::PreloadFromTree((TTree*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      RAT::DS::RunStore::PreloadFromTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::RunStore* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::RunStore[n];
     } else {
       p = new((void*) gvp) RAT::DS::RunStore[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::DS::RunStore;
     } else {
       p = new((void*) gvp) RAT::DS::RunStore;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRunStore));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::RunStore*) G__getstructoffset())->InstanceGetRun((RAT::DS::Root*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DS::RunStore*) G__getstructoffset())->InstanceGetRun((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::RunStore*) G__getstructoffset())->InstanceSetReadTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::RunStore*) G__getstructoffset())->InstanceSetWriteTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::RunStore*) G__getstructoffset())->InstanceFlushWriteTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::RunStore*) G__getstructoffset())->InstanceAddNewRun((RAT::DS::Run*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((RAT::DS::RunStore*) G__getstructoffset())->InstancePreloadFromTree((TTree*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((RAT::DS::RunStore*) G__getstructoffset())->InstancePreloadFromTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DS::RunStore::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::RunStore::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DS::RunStore::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DS::RunStore::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RAT::DS::RunStore*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::RunStore*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::RunStore*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DS::RunStore*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::RunStore::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::RunStore::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DS::RunStore::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_644_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DS::RunStore::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RATEventRootDict_644_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::DS::RunStore* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::DS::RunStore(*(RAT::DS::RunStore*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRunStore));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DS::RunStore G__TRATcLcLDScLcLRunStore;
static int G__RATEventRootDict_644_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DS::RunStore*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DS::RunStore*) (soff+(sizeof(RAT::DS::RunStore)*i)))->~G__TRATcLcLDScLcLRunStore();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DS::RunStore*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DS::RunStore*) (soff))->~G__TRATcLcLDScLcLRunStore();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RATEventRootDict_644_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DS::RunStore* dest = (RAT::DS::RunStore*) G__getstructoffset();
   *dest = *(RAT::DS::RunStore*) libp->para[0].ref;
   const RAT::DS::RunStore& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::DSReader */
static int G__RATEventRootDict_655_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::DSReader* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RAT::DSReader((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) RAT::DSReader((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDSReader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_655_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DSReader*) G__getstructoffset())->Add((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_655_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((RAT::DSReader*) G__getstructoffset())->SetBranchStatus((const char*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((RAT::DSReader*) G__getstructoffset())->SetBranchStatus((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_655_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DSReader*) G__getstructoffset())->GetT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_655_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DSReader*) G__getstructoffset())->GetDS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_655_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((RAT::DSReader*) G__getstructoffset())->GetTotal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_655_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DSReader*) G__getstructoffset())->GetEvent((Long64_t) G__Longlong(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_655_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::DSReader*) G__getstructoffset())->NextEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_655_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::DSReader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_655_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DSReader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_655_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::DSReader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_655_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::DSReader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_655_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::DSReader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_655_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DSReader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_655_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DSReader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_655_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::DSReader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_655_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::DSReader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::DSReader G__TRATcLcLDSReader;
static int G__RATEventRootDict_655_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::DSReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::DSReader*) (soff+(sizeof(RAT::DSReader)*i)))->~G__TRATcLcLDSReader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::DSReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::DSReader*) (soff))->~G__TRATcLcLDSReader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::TrackNode */
static int G__RATEventRootDict_656_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::TrackNode* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::TrackNode[n];
     } else {
       p = new((void*) gvp) RAT::TrackNode[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::TrackNode;
     } else {
       p = new((void*) gvp) RAT::TrackNode;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::TrackNode*) G__getstructoffset())->IsTrackStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((RAT::TrackNode*) G__getstructoffset())->SetTrackStart((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((RAT::TrackNode*) G__getstructoffset())->SetTrackStart();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::TrackNode*) G__getstructoffset())->IsTrackEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::TrackNode*) G__getstructoffset())->GetTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::TrackNode*) G__getstructoffset())->SetTrackID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::TrackNode*) G__getstructoffset())->GetStepID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::TrackNode*) G__getstructoffset())->SetStepID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::TrackNode*) G__getstructoffset())->GetPDGCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::TrackNode*) G__getstructoffset())->SetPDGCode((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((const RAT::TrackNode*) G__getstructoffset())->GetParticleName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::TrackNode*) G__getstructoffset())->SetParticleName(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RAT::TrackNode*) G__getstructoffset())->GetPrev());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::TrackNode*) G__getstructoffset())->SetPrev((RAT::TrackNode*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RAT::TrackNode*) G__getstructoffset())->GetNext());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::TrackNode*) G__getstructoffset())->SetNext((RAT::TrackNode*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::TrackNode*) G__getstructoffset())->AddNext((RAT::TrackNode*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::TrackNode*) G__getstructoffset())->AddChild((RAT::TrackNode*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RAT::TrackNode& obj = ((RAT::TrackNode*) G__getstructoffset())->operator=(*(RAT::DS::MCTrackStep*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RAT::TrackNode::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::TrackNode::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RAT::TrackNode::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RAT::TrackNode::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::TrackNode*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::TrackNode::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::TrackNode::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RAT::TrackNode::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_656_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RAT::TrackNode::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RATEventRootDict_656_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::TrackNode* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::TrackNode(*(RAT::TrackNode*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::TrackNode G__TRATcLcLTrackNode;
static int G__RATEventRootDict_656_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::TrackNode*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::TrackNode*) (soff+(sizeof(RAT::TrackNode)*i)))->~G__TRATcLcLTrackNode();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::TrackNode*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::TrackNode*) (soff))->~G__TRATcLcLTrackNode();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RATEventRootDict_656_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::TrackNode* dest = (RAT::TrackNode*) G__getstructoffset();
   *dest = *(RAT::TrackNode*) libp->para[0].ref;
   const RAT::TrackNode& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::TrackCursor */
static int G__RATEventRootDict_663_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::TrackCursor* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::TrackCursor((RAT::TrackNode*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RAT::TrackCursor((RAT::TrackNode*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::TrackCursor((RAT::TrackNode*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) RAT::TrackCursor((RAT::TrackNode*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackCursor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RAT::TrackCursor*) G__getstructoffset())->GetVerbose());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((RAT::TrackCursor*) G__getstructoffset())->SetVerbose((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((RAT::TrackCursor*) G__getstructoffset())->SetVerbose();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RAT::TrackCursor*) G__getstructoffset())->TrackStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RAT::TrackCursor*) G__getstructoffset())->Prev());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RAT::TrackCursor*) G__getstructoffset())->Here());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RAT::TrackCursor*) G__getstructoffset())->Next());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RAT::TrackCursor*) G__getstructoffset())->TrackEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::TrackCursor*) G__getstructoffset())->StepCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RAT::TrackCursor*) G__getstructoffset())->Step((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::TrackCursor*) G__getstructoffset())->ChildCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((const RAT::TrackCursor*) G__getstructoffset())->Child((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((const RAT::TrackCursor*) G__getstructoffset())->Child());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RAT::TrackCursor*) G__getstructoffset())->TrackChildCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RAT::TrackCursor*) G__getstructoffset())->TrackChild((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RAT::TrackCursor*) G__getstructoffset())->Parent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const RAT::TrackCursor*) G__getstructoffset())->TrackLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::TrackCursor*) G__getstructoffset())->IsTrackStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const RAT::TrackCursor*) G__getstructoffset())->IsTrackEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::TrackCursor*) G__getstructoffset())->Go((RAT::TrackNode*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->GoTrackStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->GoPrev());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->GoNext());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->GoTrackEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->GoStep((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->GoChild((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->GoChild());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->GoTrackChild((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->GoParent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const RAT::TrackCursor*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const RAT::TrackCursor*) G__getstructoffset())->PrintTrack();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = RAT::TrackCursor::PrintTrackIDs((RAT::TrackNode*) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = RAT::TrackCursor::Print((RAT::TrackNode*) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = RAT::TrackCursor::PrintTrack((RAT::TrackNode*) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->FindNextTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->FindNextTrackNoDescend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->FindNextTrack((RAT::TrackTest*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_663_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackCursor*) G__getstructoffset())->FindNextParticle(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RATEventRootDict_663_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::TrackCursor* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::TrackCursor(*(RAT::TrackCursor*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackCursor));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::TrackCursor G__TRATcLcLTrackCursor;
static int G__RATEventRootDict_663_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::TrackCursor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::TrackCursor*) (soff+(sizeof(RAT::TrackCursor)*i)))->~G__TRATcLcLTrackCursor();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::TrackCursor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::TrackCursor*) (soff))->~G__TRATcLcLTrackCursor();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RATEventRootDict_663_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::TrackCursor* dest = (RAT::TrackCursor*) G__getstructoffset();
   *dest = *(RAT::TrackCursor*) libp->para[0].ref;
   const RAT::TrackCursor& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RAT::TrackNav */
static int G__RATEventRootDict_666_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::TrackNav* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::TrackNav((RAT::DS::Root*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RAT::TrackNav((RAT::DS::Root*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::TrackNav((RAT::DS::Root*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) RAT::TrackNav((RAT::DS::Root*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNav));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_666_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::TrackNav* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::TrackNav((RAT::DS::MC*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RAT::TrackNav((RAT::DS::MC*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RAT::TrackNav((RAT::DS::MC*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) RAT::TrackNav((RAT::DS::MC*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNav));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_666_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((RAT::TrackNav*) G__getstructoffset())->Load((RAT::DS::MC*) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((RAT::TrackNav*) G__getstructoffset())->Load((RAT::DS::MC*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_666_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RAT::TrackNav*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_666_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackNav*) G__getstructoffset())->Head());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_666_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         RAT::TrackCursor* pobj;
         RAT::TrackCursor xobj = ((RAT::TrackNav*) G__getstructoffset())->Cursor((bool) G__int(libp->para[0]));
         pobj = new RAT::TrackCursor(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         RAT::TrackCursor* pobj;
         RAT::TrackCursor xobj = ((RAT::TrackNav*) G__getstructoffset())->Cursor();
         pobj = new RAT::TrackCursor(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_666_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RAT::TrackNav*) G__getstructoffset())->FindID((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RATEventRootDict_666_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((RAT::TrackNav*) G__getstructoffset())->FindParticle(*(string*) libp->para[0].ref, (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((RAT::TrackNav*) G__getstructoffset())->FindParticle(*(string*) libp->para[0].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RATEventRootDict_666_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RAT::TrackNav* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RAT::TrackNav(*(RAT::TrackNav*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNav));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RAT::TrackNav G__TRATcLcLTrackNav;
static int G__RATEventRootDict_666_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RAT::TrackNav*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RAT::TrackNav*) (soff+(sizeof(RAT::TrackNav)*i)))->~G__TRATcLcLTrackNav();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RAT::TrackNav*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RAT::TrackNav*) (soff))->~G__TRATcLcLTrackNav();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RATEventRootDict_666_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RAT::TrackNav* dest = (RAT::TrackNav*) G__getstructoffset();
   *dest = *(RAT::TrackNav*) libp->para[0].ref;
   const RAT::TrackNav& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* RAT::DS::MCParticle */

/* RAT::DS::MCTrackStep */

/* RAT::DS::MCTrack */

/* RAT::DS::MCSummary */

/* RAT::DS::MCPhoton */

/* RAT::DS::MCPMT */

/* RAT::DS::MCLAPPD */

/* RAT::DS::MC */

/* RAT::DS::PMT */

/* RAT::DS::LAPPDHit */

/* RAT::DS::LAPPD */

/* RAT::DS::PosFit */

/* RAT::DS::Centroid */

/* RAT::DS::PathFit */

/* RAT::DS::EV */

/* RAT::DS::Calib */

/* RAT::DS::Root */

/* RAT::DS::PMTInfo */

/* RAT::DS::LAPPDInfo */

/* RAT::DS::Run */

/* RAT::DS::RunStore */

/* RAT::DSReader */

/* RAT::TrackNode */

/* RAT::TrackCursor */

/* RAT::TrackNav */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncRATEventRootDict {
 public:
  G__Sizep2memfuncRATEventRootDict(): p(&G__Sizep2memfuncRATEventRootDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncRATEventRootDict::*p)();
};

size_t G__get_sizep2memfuncRATEventRootDict()
{
  G__Sizep2memfuncRATEventRootDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceRATEventRootDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCParticle))) {
     RAT::DS::MCParticle *G__Lderived;
     G__Lderived=(RAT::DS::MCParticle*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCParticle),G__get_linked_tagnum(&G__RATEventRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrackStep))) {
     RAT::DS::MCTrackStep *G__Lderived;
     G__Lderived=(RAT::DS::MCTrackStep*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrackStep),G__get_linked_tagnum(&G__RATEventRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrack))) {
     RAT::DS::MCTrack *G__Lderived;
     G__Lderived=(RAT::DS::MCTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrack),G__get_linked_tagnum(&G__RATEventRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCSummary))) {
     RAT::DS::MCSummary *G__Lderived;
     G__Lderived=(RAT::DS::MCSummary*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCSummary),G__get_linked_tagnum(&G__RATEventRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCPhoton))) {
     RAT::DS::MCPhoton *G__Lderived;
     G__Lderived=(RAT::DS::MCPhoton*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCPhoton),G__get_linked_tagnum(&G__RATEventRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCPMT))) {
     RAT::DS::MCPMT *G__Lderived;
     G__Lderived=(RAT::DS::MCPMT*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCPMT),G__get_linked_tagnum(&G__RATEventRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCLAPPD))) {
     RAT::DS::MCLAPPD *G__Lderived;
     G__Lderived=(RAT::DS::MCLAPPD*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCLAPPD),G__get_linked_tagnum(&G__RATEventRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMC))) {
     RAT::DS::MC *G__Lderived;
     G__Lderived=(RAT::DS::MC*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMC),G__get_linked_tagnum(&G__RATEventRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPMT))) {
     RAT::DS::PMT *G__Lderived;
     G__Lderived=(RAT::DS::PMT*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPMT),G__get_linked_tagnum(&G__RATEventRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPDHit))) {
     RAT::DS::LAPPDHit *G__Lderived;
     G__Lderived=(RAT::DS::LAPPDHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPDHit),G__get_linked_tagnum(&G__RATEventRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPD))) {
     RAT::DS::LAPPD *G__Lderived;
     G__Lderived=(RAT::DS::LAPPD*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPD),G__get_linked_tagnum(&G__RATEventRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLCentroid))) {
     RAT::DS::Centroid *G__Lderived;
     G__Lderived=(RAT::DS::Centroid*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLCentroid),G__get_linked_tagnum(&G__RATEventRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RAT::DS::PosFit *G__Lpbase=(RAT::DS::PosFit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLCentroid),G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPosFit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPathFit))) {
     RAT::DS::PathFit *G__Lderived;
     G__Lderived=(RAT::DS::PathFit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPathFit),G__get_linked_tagnum(&G__RATEventRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RAT::DS::PosFit *G__Lpbase=(RAT::DS::PosFit*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPathFit),G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPosFit),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLEV))) {
     RAT::DS::EV *G__Lderived;
     G__Lderived=(RAT::DS::EV*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLEV),G__get_linked_tagnum(&G__RATEventRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLCalib))) {
     RAT::DS::Calib *G__Lderived;
     G__Lderived=(RAT::DS::Calib*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLCalib),G__get_linked_tagnum(&G__RATEventRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRoot))) {
     RAT::DS::Root *G__Lderived;
     G__Lderived=(RAT::DS::Root*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRoot),G__get_linked_tagnum(&G__RATEventRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPMTInfo))) {
     RAT::DS::PMTInfo *G__Lderived;
     G__Lderived=(RAT::DS::PMTInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPMTInfo),G__get_linked_tagnum(&G__RATEventRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPDInfo))) {
     RAT::DS::LAPPDInfo *G__Lderived;
     G__Lderived=(RAT::DS::LAPPDInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPDInfo),G__get_linked_tagnum(&G__RATEventRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRun))) {
     RAT::DS::Run *G__Lderived;
     G__Lderived=(RAT::DS::Run*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRun),G__get_linked_tagnum(&G__RATEventRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDSReader))) {
     RAT::DSReader *G__Lderived;
     G__Lderived=(RAT::DSReader*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDSReader),G__get_linked_tagnum(&G__RATEventRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode))) {
     RAT::TrackNode *G__Lderived;
     G__Lderived=(RAT::TrackNode*)0x1000;
     {
       RAT::DS::MCTrackStep *G__Lpbase=(RAT::DS::MCTrackStep*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode),G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrackStep),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode),G__get_linked_tagnum(&G__RATEventRootDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableRATEventRootDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("ULong64_t",109,-1,0,-1);
   G__setnewtype(-1,"Portable unsigned long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MCTrackStep>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::MCTrackStep>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,double>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,double>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StringDoubleMap",117,G__get_linked_tagnum(&G__RATEventRootDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDS));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MCPhoton>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::MCPhoton>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MCSummary>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::MCSummary>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MCParticle>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::MCParticle>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MCTrack>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::MCTrack>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MCPMT>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::MCPMT>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MCLAPPD>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCLAPPDcOallocatorlERATcLcLDScLcLMCLAPPDgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCLAPPDcOallocatorlERATcLcLDScLcLMCLAPPDgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCLAPPDcOallocatorlERATcLcLDScLcLMCLAPPDgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCLAPPDcOallocatorlERATcLcLDScLcLMCLAPPDgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCLAPPDcOallocatorlERATcLcLDScLcLMCLAPPDgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::MCLAPPD>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCLAPPDcOallocatorlERATcLcLDScLcLMCLAPPDgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<LAPPDHit>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLLAPPDHitcOallocatorlERATcLcLDScLcLLAPPDHitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLLAPPDHitcOallocatorlERATcLcLDScLcLLAPPDHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLLAPPDHitcOallocatorlERATcLcLDScLcLLAPPDHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLLAPPDHitcOallocatorlERATcLcLDScLcLLAPPDHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLLAPPDHitcOallocatorlERATcLcLDScLcLLAPPDHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::LAPPDHit>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLLAPPDHitcOallocatorlERATcLcLDScLcLLAPPDHitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PMT>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::PMT>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<LAPPD>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLLAPPDcOallocatorlERATcLcLDScLcLLAPPDgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLLAPPDcOallocatorlERATcLcLDScLcLLAPPDgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLLAPPDcOallocatorlERATcLcLDScLcLLAPPDgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLLAPPDcOallocatorlERATcLcLDScLcLLAPPDgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLLAPPDcOallocatorlERATcLcLDScLcLLAPPDgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::LAPPD>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLLAPPDcOallocatorlERATcLcLDScLcLLAPPDgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Centroid>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::Centroid>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PathFit>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::PathFit>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<std::string,int>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_pairlEstringcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<string,int>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_pairlEstringcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<std::string,int> >",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<string,int> >",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<string,int> >",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MC>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::MC>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Calib>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::Calib>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<EV>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::EV>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__RATEventRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVector3>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PMTInfo>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::PMTInfo>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<LAPPDInfo>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLLAPPDInfocOallocatorlERATcLcLDScLcLLAPPDInfogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLLAPPDInfocOallocatorlERATcLcLDScLcLLAPPDInfogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLLAPPDInfocOallocatorlERATcLcLDScLcLLAPPDInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLLAPPDInfocOallocatorlERATcLcLDScLcLLAPPDInfogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLLAPPDInfocOallocatorlERATcLcLDScLcLLAPPDInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::DS::LAPPDInfo>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLLAPPDInfocOallocatorlERATcLcLDScLcLLAPPDInfogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,RunRecord*>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_maplEintcORATcLcLDScLcLRunRecordmUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLDScLcLRunRecordmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,RAT::DS::RunRecord*>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_maplEintcORATcLcLDScLcLRunRecordmUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLDScLcLRunRecordmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,RAT::DS::RunRecord*,less<int> >",117,G__get_linked_tagnum(&G__RATEventRootDictLN_maplEintcORATcLcLDScLcLRunRecordmUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLDScLcLRunRecordmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TrackNode*>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RAT::TrackNode*>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("unary_function<TrackNode*,bool>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_unary_functionlERATcLcLTrackNodemUcOboolgR),0,G__get_linked_tagnum(&G__RATEventRootDictLN_RAT));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TrackNode*>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_maplEintcORATcLcLTrackNodemUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLTrackNodemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,RAT::TrackNode*>",117,G__get_linked_tagnum(&G__RATEventRootDictLN_maplEintcORATcLcLTrackNodemUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLTrackNodemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,RAT::TrackNode*,less<int> >",117,G__get_linked_tagnum(&G__RATEventRootDictLN_maplEintcORATcLcLTrackNodemUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLTrackNodemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* RAT::DS::MCParticle */
static void G__setup_memvarRATcLcLDScLcLMCParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCParticle));
   { RAT::DS::MCParticle *p; p=(RAT::DS::MCParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"pdgcode=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"t=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"ke=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3),-1,-1,2,"pos=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3),-1,-1,2,"mom=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3),-1,-1,2,"pol=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_string),-1,-1,2,"particleName=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::MCTrackStep */
static void G__setup_memvarRATcLcLDScLcLMCTrackStep(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrackStep));
   { RAT::DS::MCTrackStep *p; p=(RAT::DS::MCTrackStep*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"length=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"globalTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"localTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"properTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"ke=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3),-1,-1,2,"endpoint=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3),-1,-1,2,"mom=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_string),-1,-1,2,"process=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_string),-1,-1,2,"volume=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::MCTrack */
static void G__setup_memvarRATcLcLDScLcLMCTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrack));
   { RAT::DS::MCTrack *p; p=(RAT::DS::MCTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"parentID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"pdgcode=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"length=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_string),-1,-1,2,"particleName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR),G__defined_typename("vector<MCTrackStep>"),-1,2,"step=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::MCSummary */
static void G__setup_memvarRATcLcLDScLcLMCSummary(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCSummary));
   { RAT::DS::MCSummary *p; p=(RAT::DS::MCSummary*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"numScintPhoton=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"numReemitPhoton=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"totalScintEdep=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"totalScintEdepQuenched=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"initialScintTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3),-1,-1,2,"energyCentroid=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3),-1,-1,2,"energyRMS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3),-1,-1,2,"opticalCentroid=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3),-1,-1,2,"opticalRMS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3),-1,-1,2,"totalScintCentroid=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),G__defined_typename("StringDoubleMap"),-1,2,"energyLoss=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TString),-1,-1,2,"interactionName=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::MCPhoton */
static void G__setup_memvarRATcLcLDScLcLMCPhoton(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCPhoton));
   { RAT::DS::MCPhoton *p; p=(RAT::DS::MCPhoton*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"hitTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"frontEndTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"lambda=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3),-1,-1,2,"pos=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3),-1,-1,2,"mom=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3),-1,-1,2,"pol=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"isDarkHit=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"trackID=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::MCPMT */
static void G__setup_memvarRATcLcLDScLcLMCPMT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCPMT));
   { RAT::DS::MCPMT *p; p=(RAT::DS::MCPMT*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"type=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_string),-1,-1,2,"modelName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR),G__defined_typename("vector<MCPhoton>"),-1,2,"photon=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::MCLAPPD */
static void G__setup_memvarRATcLcLDScLcLMCLAPPD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCLAPPD));
   { RAT::DS::MCLAPPD *p; p=(RAT::DS::MCLAPPD*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"type=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_string),-1,-1,2,"modelName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR),G__defined_typename("vector<MCPhoton>"),-1,2,"photon=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::MC */
static void G__setup_memvarRATcLcLDScLcLMC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMC));
   { RAT::DS::MC *p; p=(RAT::DS::MC*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"numPE=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"numPE_lappd=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"numDarkHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TTimeStamp),-1,-1,2,"utc=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgR),G__defined_typename("vector<MCSummary>"),-1,2,"summary=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR),G__defined_typename("vector<MCParticle>"),-1,2,"particle=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR),G__defined_typename("vector<MCParticle>"),-1,2,"parent=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR),G__defined_typename("vector<MCTrack>"),-1,2,"track=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR),G__defined_typename("vector<MCPMT>"),-1,2,"pmt=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCLAPPDcOallocatorlERATcLcLDScLcLMCLAPPDgRsPgR),G__defined_typename("vector<MCLAPPD>"),-1,2,"lappd=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::PMT */
static void G__setup_memvarRATcLcLDScLcLPMT(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPMT));
   { RAT::DS::PMT *p; p=(RAT::DS::PMT*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"time=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::LAPPDHit */
static void G__setup_memvarRATcLcLDScLcLLAPPDHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPDHit));
   { RAT::DS::LAPPDHit *p; p=(RAT::DS::LAPPDHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"time=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3),-1,-1,2,"pos=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::LAPPD */
static void G__setup_memvarRATcLcLDScLcLLAPPD(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPD));
   { RAT::DS::LAPPD *p; p=(RAT::DS::LAPPD*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLLAPPDHitcOallocatorlERATcLcLDScLcLLAPPDHitgRsPgR),G__defined_typename("vector<LAPPDHit>"),-1,2,"hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"totalcharge=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"totaltime=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::PosFit */
static void G__setup_memvarRATcLcLDScLcLPosFit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPosFit));
   { RAT::DS::PosFit *p; p=(RAT::DS::PosFit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_string),-1,-1,2,"posname=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3),-1,-1,2,"pos=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::Centroid */
static void G__setup_memvarRATcLcLDScLcLCentroid(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLCentroid));
   { RAT::DS::Centroid *p; p=(RAT::DS::Centroid*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"power=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::PathFit */
static void G__setup_memvarRATcLcLDScLcLPathFit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPathFit));
   { RAT::DS::PathFit *p; p=(RAT::DS::PathFit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"time0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"time=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3),-1,-1,2,"pos0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3),-1,-1,2,"dir=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::EV */
static void G__setup_memvarRATcLcLDScLcLEV(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLEV));
   { RAT::DS::EV *p; p=(RAT::DS::EV*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"qTotal=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"calibratedTriggerTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"deltat=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TTimeStamp),-1,-1,2,"utc=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR),G__defined_typename("vector<PMT>"),-1,2,"pmt=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLLAPPDcOallocatorlERATcLcLDScLcLLAPPDgRsPgR),G__defined_typename("vector<LAPPD>"),-1,2,"lappd=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgR),G__defined_typename("vector<Centroid>"),-1,2,"centroid=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgR),G__defined_typename("vector<PathFit>"),-1,2,"pathfit=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::Calib */
static void G__setup_memvarRATcLcLDScLcLCalib(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLCalib));
   { RAT::DS::Calib *p; p=(RAT::DS::Calib*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mode=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"intensity=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_string),-1,-1,2,"name=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TTimeStamp),-1,-1,2,"utc=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3),-1,-1,2,"pos=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::Root */
static void G__setup_memvarRATcLcLDScLcLRoot(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRoot));
   { RAT::DS::Root *p; p=(RAT::DS::Root*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"runID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_string),-1,-1,2,"ratVersion=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR),G__defined_typename("vector<std::pair<std::string,int> >"),-1,2,"procResult=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR),G__defined_typename("vector<MC>"),-1,2,"mc=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR),G__defined_typename("vector<Calib>"),-1,2,"calib=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR),G__defined_typename("vector<EV>"),-1,2,"ev=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"user=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::PMTInfo */
static void G__setup_memvarRATcLcLDScLcLPMTInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPMTInfo));
   { RAT::DS::PMTInfo *p; p=(RAT::DS::PMTInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR),G__defined_typename("vector<TVector3>"),-1,2,"pos=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR),G__defined_typename("vector<TVector3>"),-1,2,"dir=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,2,"type=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,2,"modeltype=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,2,"models=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::LAPPDInfo */
static void G__setup_memvarRATcLcLDScLcLLAPPDInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPDInfo));
   { RAT::DS::LAPPDInfo *p; p=(RAT::DS::LAPPDInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR),G__defined_typename("vector<TVector3>"),-1,2,"pos=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR),G__defined_typename("vector<TVector3>"),-1,2,"dir=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,2,"type=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,2,"modeltype=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,2,"models=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::Run */
static void G__setup_memvarRATcLcLDScLcLRun(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRun));
   { RAT::DS::Run *p; p=(RAT::DS::Run*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,2,"type=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("time_t"),-1,2,"startTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR),G__defined_typename("vector<PMTInfo>"),-1,2,"pmtinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLLAPPDInfocOallocatorlERATcLcLDScLcLLAPPDInfogRsPgR),G__defined_typename("vector<LAPPDInfo>"),-1,2,"lappdinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DS::RunStore */
static void G__setup_memvarRATcLcLDScLcLRunStore(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRunStore));
   { RAT::DS::RunStore *p; p=(RAT::DS::RunStore*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRunStore),-1,-2,2,"fgStore=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TTree),-1,-1,2,"fReadTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRun),-1,-1,2,"fReadRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TTree),-1,-1,2,"fWriteTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRun),-1,-1,2,"fWriteRun=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_maplEintcORATcLcLDScLcLRunRecordmUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLDScLcLRunRecordmUgRsPgRsPgR),G__defined_typename("map<int,RunRecord*>"),-1,2,"fCache=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::DSReader */
static void G__setup_memvarRATcLcLDSReader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDSReader));
   { RAT::DSReader *p; p=(RAT::DSReader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TChain),-1,-1,2,"T=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRoot),-1,-1,2,"ds=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"next=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,2,"total=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::TrackNode */
static void G__setup_memvarRATcLcLTrackNode(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode));
   { RAT::TrackNode *p; p=(RAT::TrackNode*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->child)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR),G__defined_typename("vector<TrackNode*>"),-1,1,"child=",0,"Any additional tracks connected to this one");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"trackStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"trackID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"stepID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"pdgcode=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_string),-1,-1,2,"particleName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode),-1,-1,2,"prev=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode),-1,-1,2,"next=",0,"Next node for this same particle");
   }
   G__tag_memvar_reset();
}


   /* RAT::TrackCursor */
static void G__setup_memvarRATcLcLTrackCursor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackCursor));
   { RAT::TrackCursor *p; p=(RAT::TrackCursor*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode),-1,-1,2,"fCur=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fVerbose=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RAT::TrackNav */
static void G__setup_memvarRATcLcLTrackNav(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNav));
   { RAT::TrackNav *p; p=(RAT::TrackNav*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode),-1,-1,2,"fHead=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RATEventRootDictLN_maplEintcORATcLcLTrackNodemUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLTrackNodemUgRsPgRsPgR),G__defined_typename("map<int,TrackNode*>"),-1,2,"fTracks=",0,"Access by Track ID");
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarRATEventRootDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncRATcLcLDScLcLMCParticle(void) {
   /* RAT::DS::MCParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCParticle));
   G__memfunc_setup("MCParticle",964,G__RATEventRootDict_225_0_1, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPDGCode",886,G__RATEventRootDict_225_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPDGCode",898,G__RATEventRootDict_225_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _pdgcode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParticleName",1493,G__RATEventRootDict_225_0_4, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParticleName",1505,G__RATEventRootDict_225_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - _particleName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTime",687,G__RATEventRootDict_225_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTime",699,G__RATEventRootDict_225_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _t", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPosition",1141,G__RATEventRootDict_225_0_8, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosition",1153,G__RATEventRootDict_225_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _pos", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetKE",432,G__RATEventRootDict_225_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetKE",444,G__RATEventRootDict_225_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _ke", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMomentum",1138,G__RATEventRootDict_225_0_12, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMomentum",1150,G__RATEventRootDict_225_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _mom", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPolarization",1564,G__RATEventRootDict_225_0_14, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPolarization",1576,G__RATEventRootDict_225_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _pol", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RATEventRootDict_225_0_16, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::MCParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RATEventRootDict_225_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RATEventRootDict_225_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::MCParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RATEventRootDict_225_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::MCParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RATEventRootDict_225_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RATEventRootDict_225_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RATEventRootDict_225_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RATEventRootDict_225_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RATEventRootDict_225_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCParticle::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MCParticle", 964, G__RATEventRootDict_225_0_28, (int) ('i'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCParticle), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::MCParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MCParticle", 1090, G__RATEventRootDict_225_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RATEventRootDict_225_0_30, (int) ('u'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCParticle), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::MCParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLMCTrackStep(void) {
   /* RAT::DS::MCTrackStep */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrackStep));
   G__memfunc_setup("MCTrackStep",1057,G__RATEventRootDict_226_0_1, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrackStep), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLength",898,G__RATEventRootDict_226_0_2, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLength",910,G__RATEventRootDict_226_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _length", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEndpoint",1121,G__RATEventRootDict_226_0_4, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEndpoint",1133,G__RATEventRootDict_226_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _endpoint", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetGlobalTime",1280,G__RATEventRootDict_226_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGlobalTime",1292,G__RATEventRootDict_226_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _globalTime", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLocalTime",1178,G__RATEventRootDict_226_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLocalTime",1190,G__RATEventRootDict_226_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _localTime", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetProperTime",1319,G__RATEventRootDict_226_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetProperTime",1331,G__RATEventRootDict_226_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _properTime", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMomentum",1138,G__RATEventRootDict_226_0_12, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMomentum",1150,G__RATEventRootDict_226_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _mom", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetKE",432,G__RATEventRootDict_226_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetKE",444,G__RATEventRootDict_226_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _ke", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetProcess",1023,G__RATEventRootDict_226_0_16, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetProcess",1035,G__RATEventRootDict_226_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - _process", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetVolume",920,G__RATEventRootDict_226_0_18, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetVolume",932,G__RATEventRootDict_226_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - _volume", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RATEventRootDict_226_0_20, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::MCTrackStep::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RATEventRootDict_226_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCTrackStep::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RATEventRootDict_226_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::MCTrackStep::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RATEventRootDict_226_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::MCTrackStep::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RATEventRootDict_226_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RATEventRootDict_226_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCTrackStep::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RATEventRootDict_226_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCTrackStep::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RATEventRootDict_226_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCTrackStep::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RATEventRootDict_226_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCTrackStep::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MCTrackStep", 1057, G__RATEventRootDict_226_0_32, (int) ('i'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrackStep), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::MCTrackStep' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MCTrackStep", 1183, G__RATEventRootDict_226_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RATEventRootDict_226_0_34, (int) ('u'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrackStep), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::MCTrackStep' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLMCTrack(void) {
   /* RAT::DS::MCTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrack));
   G__memfunc_setup("MCTrack",645,G__RATEventRootDict_227_0_1, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__RATEventRootDict_227_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetID",441,G__RATEventRootDict_227_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParentID",1047,G__RATEventRootDict_227_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParentID",1059,G__RATEventRootDict_227_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _parentID", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPDGCode",886,G__RATEventRootDict_227_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPDGCode",898,G__RATEventRootDict_227_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _pdgcode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParticleName",1493,G__RATEventRootDict_227_0_8, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParticleName",1505,G__RATEventRootDict_227_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - _particleName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCTrackStep",1345,G__RATEventRootDict_227_0_10, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrackStep), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCTrackStepCount",1866,G__RATEventRootDict_227_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddNewMCTrackStep",1620,G__RATEventRootDict_227_0_12, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrackStep), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneMCTrackStep",1579,G__RATEventRootDict_227_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLastMCTrackStep",1749,G__RATEventRootDict_227_0_14, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrackStep), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneIntermediateMCTrackSteps",2937,G__RATEventRootDict_227_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLength",898,G__RATEventRootDict_227_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLength",910,G__RATEventRootDict_227_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _length", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RATEventRootDict_227_0_18, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::MCTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RATEventRootDict_227_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RATEventRootDict_227_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::MCTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RATEventRootDict_227_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::MCTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RATEventRootDict_227_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RATEventRootDict_227_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RATEventRootDict_227_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RATEventRootDict_227_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RATEventRootDict_227_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MCTrack", 645, G__RATEventRootDict_227_0_30, (int) ('i'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrack), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::MCTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MCTrack", 771, G__RATEventRootDict_227_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RATEventRootDict_227_0_32, (int) ('u'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrack), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::MCTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLMCSummary(void) {
   /* RAT::DS::MCSummary */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCSummary));
   G__memfunc_setup("MCSummary",894,G__RATEventRootDict_467_0_1, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCSummary), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergyCentroid",1730,G__RATEventRootDict_467_0_2, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEnergyCentroid",1742,G__RATEventRootDict_467_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _energyCentroid", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergyRMS",1148,G__RATEventRootDict_467_0_4, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEnergyRMS",1160,G__RATEventRootDict_467_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _energyRMS", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergyLossByVolume",2142,G__RATEventRootDict_467_0_6, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "C - - 10 - volume", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetEnergyLossByVolume",2154,G__RATEventRootDict_467_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,double,less<string>,allocator<pair<const string,double> > >' 'RAT::DS::StringDoubleMap' 0 - _energyLoss", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTotalScintEdep",1699,G__RATEventRootDict_467_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTotalScintEdep",1711,G__RATEventRootDict_467_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _totalScintEdep", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTotalScintEdepQuenched",2512,G__RATEventRootDict_467_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTotalScintEdepQuenched",2524,G__RATEventRootDict_467_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _totalScintEdepQuenched", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTotalScintCentroid",2141,G__RATEventRootDict_467_0_12, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTotalScintCentroid",2153,G__RATEventRootDict_467_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _totalScintCentroid", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetInitialScintTime",1914,G__RATEventRootDict_467_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetInitialScintTime",1926,G__RATEventRootDict_467_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _initialScintTime", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumScintPhoton",1737,G__RATEventRootDict_467_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNumScintPhoton",1749,G__RATEventRootDict_467_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _numScintPhoton", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumReemitPhoton",1838,G__RATEventRootDict_467_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNumReemitPhoton",1850,G__RATEventRootDict_467_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _numReemitPhoton", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetInteractionName",1825,G__RATEventRootDict_467_0_20, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_TString), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetInteractionName",1837,G__RATEventRootDict_467_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 11 - _interactionName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RATEventRootDict_467_0_22, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::MCSummary::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RATEventRootDict_467_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCSummary::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RATEventRootDict_467_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::MCSummary::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RATEventRootDict_467_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::MCSummary::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RATEventRootDict_467_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RATEventRootDict_467_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCSummary::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RATEventRootDict_467_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCSummary::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RATEventRootDict_467_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCSummary::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RATEventRootDict_467_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCSummary::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MCSummary", 894, G__RATEventRootDict_467_0_34, (int) ('i'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCSummary), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::MCSummary' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MCSummary", 1020, G__RATEventRootDict_467_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RATEventRootDict_467_0_36, (int) ('u'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCSummary), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::MCSummary' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLMCPhoton(void) {
   /* RAT::DS::MCPhoton */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCPhoton));
   G__memfunc_setup("MCPhoton",776,G__RATEventRootDict_468_0_1, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCPhoton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitTime",980,G__RATEventRootDict_468_0_2, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHitTime",992,G__RATEventRootDict_468_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _hitTime", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFrontEndTime",1487,G__RATEventRootDict_468_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFrontEndTime",1499,G__RATEventRootDict_468_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _frontEndTime", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPosition",1141,G__RATEventRootDict_468_0_6, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosition",1153,G__RATEventRootDict_468_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _pos", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLambda",865,G__RATEventRootDict_468_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLambda",877,G__RATEventRootDict_468_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _lambda", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMomentum",1138,G__RATEventRootDict_468_0_10, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMomentum",1150,G__RATEventRootDict_468_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _mom", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPolarization",1564,G__RATEventRootDict_468_0_12, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPolarization",1576,G__RATEventRootDict_468_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _pol", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCharge",874,G__RATEventRootDict_468_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCharge",886,G__RATEventRootDict_468_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _charge", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDarkHit",979,G__RATEventRootDict_468_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - _isDarkHit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsDarkHit",867,G__RATEventRootDict_468_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTrackID",942,G__RATEventRootDict_468_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _trackID", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrackID",930,G__RATEventRootDict_468_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RATEventRootDict_468_0_20, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::MCPhoton::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RATEventRootDict_468_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCPhoton::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RATEventRootDict_468_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::MCPhoton::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RATEventRootDict_468_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::MCPhoton::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RATEventRootDict_468_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RATEventRootDict_468_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCPhoton::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RATEventRootDict_468_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCPhoton::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RATEventRootDict_468_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCPhoton::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RATEventRootDict_468_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCPhoton::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MCPhoton", 776, G__RATEventRootDict_468_0_32, (int) ('i'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCPhoton), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::MCPhoton' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MCPhoton", 902, G__RATEventRootDict_468_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RATEventRootDict_468_0_34, (int) ('u'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCPhoton), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::MCPhoton' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLMCPMT(void) {
   /* RAT::DS::MCPMT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCPMT));
   G__memfunc_setup("MCPMT",385,G__RATEventRootDict_469_0_1, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCPMT), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__RATEventRootDict_469_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetID",441,G__RATEventRootDict_469_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCharge",874,G__RATEventRootDict_469_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetType",706,G__RATEventRootDict_469_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetType",718,G__RATEventRootDict_469_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModelName",1170,G__RATEventRootDict_469_0_7, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetModelName",1182,G__RATEventRootDict_469_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - _modelName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCPhoton",1064,G__RATEventRootDict_469_0_9, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCPhoton), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMCPhotonCount",1585,G__RATEventRootDict_469_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddNewMCPhoton",1339,G__RATEventRootDict_469_0_11, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCPhoton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PruneMCPhoton",1298,G__RATEventRootDict_469_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RATEventRootDict_469_0_13, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::MCPMT::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RATEventRootDict_469_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCPMT::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RATEventRootDict_469_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::MCPMT::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RATEventRootDict_469_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::MCPMT::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RATEventRootDict_469_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RATEventRootDict_469_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCPMT::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RATEventRootDict_469_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCPMT::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RATEventRootDict_469_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCPMT::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RATEventRootDict_469_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCPMT::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MCPMT", 385, G__RATEventRootDict_469_0_25, (int) ('i'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCPMT), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::MCPMT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MCPMT", 511, G__RATEventRootDict_469_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RATEventRootDict_469_0_27, (int) ('u'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCPMT), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::MCPMT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLMCLAPPD(void) {
   /* RAT::DS::MCLAPPD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCLAPPD));
   G__memfunc_setup("MCLAPPD",513,G__RATEventRootDict_474_0_1, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCLAPPD), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__RATEventRootDict_474_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetID",441,G__RATEventRootDict_474_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCharge",874,G__RATEventRootDict_474_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetType",706,G__RATEventRootDict_474_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetType",718,G__RATEventRootDict_474_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModelName",1170,G__RATEventRootDict_474_0_7, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetModelName",1182,G__RATEventRootDict_474_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - _modelName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCPhoton",1064,G__RATEventRootDict_474_0_9, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCPhoton), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMCPhotonCount",1585,G__RATEventRootDict_474_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddNewMCPhoton",1339,G__RATEventRootDict_474_0_11, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCPhoton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PruneMCPhoton",1298,G__RATEventRootDict_474_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RATEventRootDict_474_0_13, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::MCLAPPD::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RATEventRootDict_474_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCLAPPD::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RATEventRootDict_474_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::MCLAPPD::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RATEventRootDict_474_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::MCLAPPD::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RATEventRootDict_474_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RATEventRootDict_474_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCLAPPD::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RATEventRootDict_474_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCLAPPD::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RATEventRootDict_474_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MCLAPPD::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RATEventRootDict_474_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MCLAPPD::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MCLAPPD", 513, G__RATEventRootDict_474_0_25, (int) ('i'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCLAPPD), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::MCLAPPD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MCLAPPD", 639, G__RATEventRootDict_474_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RATEventRootDict_474_0_27, (int) ('u'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCLAPPD), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::MCLAPPD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLMC(void) {
   /* RAT::DS::MC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMC));
   G__memfunc_setup("MC",144,G__RATEventRootDict_475_0_1, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__RATEventRootDict_475_0_2, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetID",441,G__RATEventRootDict_475_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - _id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUTC",524,G__RATEventRootDict_475_0_4, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_TTimeStamp), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUTC",536,G__RATEventRootDict_475_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TTimeStamp' - 11 - _utc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCParticle",1252,G__RATEventRootDict_475_0_6, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCParticle), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCParticleCount",1773,G__RATEventRootDict_475_0_7, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddNewMCParticle",1527,G__RATEventRootDict_475_0_8, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneMCParticle",1486,G__RATEventRootDict_475_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCParent",1050,G__RATEventRootDict_475_0_10, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCParticle), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCParentCount",1571,G__RATEventRootDict_475_0_11, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddNewMCParent",1325,G__RATEventRootDict_475_0_12, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneMCParent",1284,G__RATEventRootDict_475_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCTrack",933,G__RATEventRootDict_475_0_14, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrack), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCTrackCount",1454,G__RATEventRootDict_475_0_15, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddNewMCTrack",1208,G__RATEventRootDict_475_0_16, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneMCTrack",1167,G__RATEventRootDict_475_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneMCTrack",1167,G__RATEventRootDict_475_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - particleName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCPMT",673,G__RATEventRootDict_475_0_19, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCPMT), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCLAPPD",801,G__RATEventRootDict_475_0_20, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCLAPPD), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCPMTCount",1194,G__RATEventRootDict_475_0_21, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCLAPPDCount",1322,G__RATEventRootDict_475_0_22, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddNewMCPMT",948,G__RATEventRootDict_475_0_23, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCPMT), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddNewMCLAPPD",1076,G__RATEventRootDict_475_0_24, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCLAPPD), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrunePMT",763,G__RATEventRootDict_475_0_25, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneLAPPD",891,G__RATEventRootDict_475_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumPE",741,G__RATEventRootDict_475_0_27, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNumPE",753,G__RATEventRootDict_475_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - _numPE", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumPE_lappd",1365,G__RATEventRootDict_475_0_29, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNumPE_lappd",1377,G__RATEventRootDict_475_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - _numPE_lappd", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumDark",978,G__RATEventRootDict_475_0_31, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNumDark",990,G__RATEventRootDict_475_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - _numDarkHits", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCSummary",1182,G__RATEventRootDict_475_0_33, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMCSummary), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExistMCSummary",1419,G__RATEventRootDict_475_0_34, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneMCSummary",1416,G__RATEventRootDict_475_0_35, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RATEventRootDict_475_0_36, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::MC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RATEventRootDict_475_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RATEventRootDict_475_0_38, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::MC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RATEventRootDict_475_0_39, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::MC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RATEventRootDict_475_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RATEventRootDict_475_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RATEventRootDict_475_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RATEventRootDict_475_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::MC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RATEventRootDict_475_0_47, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::MC::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MC", 144, G__RATEventRootDict_475_0_48, (int) ('i'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMC), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::MC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MC", 270, G__RATEventRootDict_475_0_49, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RATEventRootDict_475_0_50, (int) ('u'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMC), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::MC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLPMT(void) {
   /* RAT::DS::PMT */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPMT));
   G__memfunc_setup("PMT",241,G__RATEventRootDict_497_0_1, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPMT), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetID",441,G__RATEventRootDict_497_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetID",429,G__RATEventRootDict_497_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCharge",886,G__RATEventRootDict_497_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _charge", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCharge",874,G__RATEventRootDict_497_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTime",699,G__RATEventRootDict_497_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _time", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTime",687,G__RATEventRootDict_497_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RATEventRootDict_497_0_8, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::PMT::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RATEventRootDict_497_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::PMT::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RATEventRootDict_497_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::PMT::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RATEventRootDict_497_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::PMT::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RATEventRootDict_497_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RATEventRootDict_497_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::PMT::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RATEventRootDict_497_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::PMT::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RATEventRootDict_497_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::PMT::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RATEventRootDict_497_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::PMT::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PMT", 241, G__RATEventRootDict_497_0_20, (int) ('i'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPMT), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::PMT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PMT", 367, G__RATEventRootDict_497_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RATEventRootDict_497_0_22, (int) ('u'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPMT), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::PMT' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLLAPPDHit(void) {
   /* RAT::DS::LAPPDHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPDHit));
   G__memfunc_setup("LAPPDHit",662,G__RATEventRootDict_498_0_1, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPDHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__RATEventRootDict_498_0_2, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTime",699,G__RATEventRootDict_498_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _time", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPosition",1141,G__RATEventRootDict_498_0_4, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosition",1153,G__RATEventRootDict_498_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _pos", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCharge",874,G__RATEventRootDict_498_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetCharge",886,G__RATEventRootDict_498_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _charge", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RATEventRootDict_498_0_8, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::LAPPDHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RATEventRootDict_498_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::LAPPDHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RATEventRootDict_498_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::LAPPDHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RATEventRootDict_498_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::LAPPDHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RATEventRootDict_498_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RATEventRootDict_498_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::LAPPDHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RATEventRootDict_498_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::LAPPDHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RATEventRootDict_498_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::LAPPDHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RATEventRootDict_498_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::LAPPDHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("LAPPDHit", 662, G__RATEventRootDict_498_0_20, (int) ('i'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPDHit), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::LAPPDHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~LAPPDHit", 788, G__RATEventRootDict_498_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RATEventRootDict_498_0_22, (int) ('u'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPDHit), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::LAPPDHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLLAPPD(void) {
   /* RAT::DS::LAPPD */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPD));
   G__memfunc_setup("LAPPD",369,G__RATEventRootDict_499_0_1, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPD), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetID",441,G__RATEventRootDict_499_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetID",429,G__RATEventRootDict_499_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTotalCharge",1402,G__RATEventRootDict_499_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _charge", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTotalCharge",1390,G__RATEventRootDict_499_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTotalTime",1215,G__RATEventRootDict_499_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _time", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTotalTime",1203,G__RATEventRootDict_499_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHit",581,G__RATEventRootDict_499_0_8, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPDHit), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNHits",774,G__RATEventRootDict_499_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddNewHit",856,G__RATEventRootDict_499_0_10, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPDHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PruneHits",930,G__RATEventRootDict_499_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RATEventRootDict_499_0_12, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::LAPPD::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RATEventRootDict_499_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::LAPPD::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RATEventRootDict_499_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::LAPPD::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RATEventRootDict_499_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::LAPPD::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RATEventRootDict_499_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RATEventRootDict_499_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::LAPPD::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RATEventRootDict_499_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::LAPPD::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RATEventRootDict_499_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::LAPPD::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RATEventRootDict_499_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::LAPPD::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("LAPPD", 369, G__RATEventRootDict_499_0_24, (int) ('i'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPD), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::LAPPD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~LAPPD", 495, G__RATEventRootDict_499_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RATEventRootDict_499_0_26, (int) ('u'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPD), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::LAPPD' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLPosFit(void) {
   /* RAT::DS::PosFit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPosFit));
   G__memfunc_setup("PosFit",597,G__RATEventRootDict_504_0_1, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPosFit), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosFitName",1270,G__RATEventRootDict_504_0_2, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosFitName",1282,G__RATEventRootDict_504_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - _name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPosition",1141,G__RATEventRootDict_504_0_4, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosition",1153,G__RATEventRootDict_504_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _pos", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RATEventRootDict_504_0_6, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::PosFit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RATEventRootDict_504_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::PosFit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RATEventRootDict_504_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::PosFit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RATEventRootDict_504_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::PosFit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__RATEventRootDict_504_0_10, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__RATEventRootDict_504_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__RATEventRootDict_504_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RATEventRootDict_504_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RATEventRootDict_504_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::PosFit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RATEventRootDict_504_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::PosFit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RATEventRootDict_504_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::PosFit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RATEventRootDict_504_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::PosFit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PosFit", 597, G__RATEventRootDict_504_0_18, (int) ('i'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPosFit), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::PosFit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PosFit", 723, G__RATEventRootDict_504_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RATEventRootDict_504_0_20, (int) ('u'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPosFit), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::PosFit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLCentroid(void) {
   /* RAT::DS::Centroid */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLCentroid));
   G__memfunc_setup("Centroid",824,G__RATEventRootDict_505_0_1, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLCentroid), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPower",813,G__RATEventRootDict_505_0_2, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPower",825,G__RATEventRootDict_505_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - _power", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RATEventRootDict_505_0_4, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::Centroid::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RATEventRootDict_505_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::Centroid::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RATEventRootDict_505_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::Centroid::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RATEventRootDict_505_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::Centroid::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RATEventRootDict_505_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RATEventRootDict_505_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::Centroid::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RATEventRootDict_505_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::Centroid::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RATEventRootDict_505_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::Centroid::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RATEventRootDict_505_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::Centroid::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Centroid", 824, G__RATEventRootDict_505_0_16, (int) ('i'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLCentroid), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::Centroid' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Centroid", 950, G__RATEventRootDict_505_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RATEventRootDict_505_0_18, (int) ('u'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLCentroid), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::Centroid' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLPathFit(void) {
   /* RAT::DS::PathFit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPathFit));
   G__memfunc_setup("PathFit",688,G__RATEventRootDict_506_0_1, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPathFit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime0",735,G__RATEventRootDict_506_0_2, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTime0",747,G__RATEventRootDict_506_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - _time0", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPos0",642,G__RATEventRootDict_506_0_4, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPos0",654,G__RATEventRootDict_506_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 0 - _pos0", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTime",687,G__RATEventRootDict_506_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTime",699,G__RATEventRootDict_506_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - _time", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDirection",1217,G__RATEventRootDict_506_0_8, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDirection",1229,G__RATEventRootDict_506_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 0 - _dir", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RATEventRootDict_506_0_10, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::PathFit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RATEventRootDict_506_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::PathFit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RATEventRootDict_506_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::PathFit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RATEventRootDict_506_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::PathFit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RATEventRootDict_506_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RATEventRootDict_506_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::PathFit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RATEventRootDict_506_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::PathFit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RATEventRootDict_506_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::PathFit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RATEventRootDict_506_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::PathFit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PathFit", 688, G__RATEventRootDict_506_0_22, (int) ('i'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPathFit), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::PathFit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PathFit", 814, G__RATEventRootDict_506_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RATEventRootDict_506_0_24, (int) ('u'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPathFit), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::PathFit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLEV(void) {
   /* RAT::DS::EV */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLEV));
   G__memfunc_setup("EV",155,G__RATEventRootDict_507_0_1, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLEV), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__RATEventRootDict_507_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetID",441,G__RATEventRootDict_507_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUTC",524,G__RATEventRootDict_507_0_4, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_TTimeStamp), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUTC",536,G__RATEventRootDict_507_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TTimeStamp' - 11 - _utc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPMT",529,G__RATEventRootDict_507_0_6, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPMT), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPMTCount",1050,G__RATEventRootDict_507_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddNewPMT",804,G__RATEventRootDict_507_0_8, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPMT), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrunePMT",763,G__RATEventRootDict_507_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Nhits",518,G__RATEventRootDict_507_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLAPPD",657,G__RATEventRootDict_507_0_11, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPD), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLAPPDCount",1178,G__RATEventRootDict_507_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddNewLAPPD",932,G__RATEventRootDict_507_0_13, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPD), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneLAPPD",891,G__RATEventRootDict_507_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDeltaT",862,G__RATEventRootDict_507_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDeltaT",874,G__RATEventRootDict_507_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _deltat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotalCharge",1390,G__RATEventRootDict_507_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTotalCharge",1402,G__RATEventRootDict_507_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _qTotal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCentroid",1112,G__RATEventRootDict_507_0_19, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLCentroid), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExistCentroid",1349,G__RATEventRootDict_507_0_20, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneCentroid",1346,G__RATEventRootDict_507_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPathFit",976,G__RATEventRootDict_507_0_22, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPathFit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExistPathFit",1213,G__RATEventRootDict_507_0_23, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrunePathFit",1210,G__RATEventRootDict_507_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RATEventRootDict_507_0_25, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::EV::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RATEventRootDict_507_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::EV::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RATEventRootDict_507_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::EV::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RATEventRootDict_507_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::EV::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RATEventRootDict_507_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RATEventRootDict_507_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::EV::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RATEventRootDict_507_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::EV::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RATEventRootDict_507_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::EV::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RATEventRootDict_507_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::EV::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EV", 155, G__RATEventRootDict_507_0_37, (int) ('i'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLEV), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::EV' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EV", 281, G__RATEventRootDict_507_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RATEventRootDict_507_0_39, (int) ('u'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLEV), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::EV' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLCalib(void) {
   /* RAT::DS::Calib */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLCalib));
   G__memfunc_setup("Calib",475,G__RATEventRootDict_524_0_1, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLCalib), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSourceName",1298,G__RATEventRootDict_524_0_2, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetSourceName",1310,G__RATEventRootDict_524_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - _name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetID",429,G__RATEventRootDict_524_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetID",441,G__RATEventRootDict_524_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMode",677,G__RATEventRootDict_524_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMode",689,G__RATEventRootDict_524_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetIntensity",1255,G__RATEventRootDict_524_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIntensity",1267,G__RATEventRootDict_524_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - _intensity", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUTC",524,G__RATEventRootDict_524_0_10, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_TTimeStamp), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUTC",536,G__RATEventRootDict_524_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TTimeStamp' - 11 - _utc", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPosition",1141,G__RATEventRootDict_524_0_12, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosition",1153,G__RATEventRootDict_524_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 11 - _pos", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RATEventRootDict_524_0_14, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::Calib::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RATEventRootDict_524_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::Calib::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RATEventRootDict_524_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::Calib::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RATEventRootDict_524_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::Calib::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RATEventRootDict_524_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RATEventRootDict_524_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::Calib::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RATEventRootDict_524_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::Calib::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RATEventRootDict_524_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::Calib::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RATEventRootDict_524_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::Calib::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Calib", 475, G__RATEventRootDict_524_0_26, (int) ('i'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLCalib), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::Calib' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Calib", 601, G__RATEventRootDict_524_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RATEventRootDict_524_0_28, (int) ('u'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLCalib), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::Calib' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLRoot(void) {
   /* RAT::DS::Root */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRoot));
   G__memfunc_setup("Root",420,G__RATEventRootDict_525_0_1, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRoot), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunID",738,G__RATEventRootDict_525_0_2, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRunID",750,G__RATEventRootDict_525_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - _runID", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AppendProcResult",1643,G__RATEventRootDict_525_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - procName i - - 0 - resultCode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLastProcResult",1735,G__RATEventRootDict_525_0_5, 105, -1, -1, 0, 1, 1, 1, 8, "u 'string' - 11 - procName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLastProcResult",1735,G__RATEventRootDict_525_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetProcResult",1331,G__RATEventRootDict_525_0_7, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR), G__defined_typename("vector<std::pair<std::string,int> >"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRatVersion",1325,G__RATEventRootDict_525_0_8, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRatVersion",1337,G__RATEventRootDict_525_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - _ratVersion", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMC",432,G__RATEventRootDict_525_0_10, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLMC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExistMC",669,G__RATEventRootDict_525_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneMC",666,G__RATEventRootDict_525_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCalib",763,G__RATEventRootDict_525_0_13, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLCalib), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExistCalib",1000,G__RATEventRootDict_525_0_14, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneCalib",997,G__RATEventRootDict_525_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEV",443,G__RATEventRootDict_525_0_16, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLEV), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEVCount",964,G__RATEventRootDict_525_0_17, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddNewEV",718,G__RATEventRootDict_525_0_18, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLEV), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExistEV",680,G__RATEventRootDict_525_0_19, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneEV",677,G__RATEventRootDict_525_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneEV",677,G__RATEventRootDict_525_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUserDataCount",1602,G__RATEventRootDict_525_0_22, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUserDataCount",1614,G__RATEventRootDict_525_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - count", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUserData",1081,G__RATEventRootDict_525_0_24, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetUserData",1093,G__RATEventRootDict_525_0_25, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i d - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RATEventRootDict_525_0_26, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::Root::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RATEventRootDict_525_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::Root::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RATEventRootDict_525_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::Root::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RATEventRootDict_525_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::Root::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RATEventRootDict_525_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RATEventRootDict_525_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::Root::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RATEventRootDict_525_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::Root::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RATEventRootDict_525_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::Root::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RATEventRootDict_525_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::Root::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Root", 420, G__RATEventRootDict_525_0_38, (int) ('i'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRoot), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::Root' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Root", 546, G__RATEventRootDict_525_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RATEventRootDict_525_0_40, (int) ('u'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRoot), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::Root' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLPMTInfo(void) {
   /* RAT::DS::PMTInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPMTInfo));
   G__memfunc_setup("PMTInfo",637,G__RATEventRootDict_621_0_1, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPMTInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddPMT",506,G__RATEventRootDict_621_0_2, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'TVector3' - 11 - _pos u 'TVector3' - 11 - _dir "
"i - - 10 - _type u 'string' - 10 - _model", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddPMT",506,G__RATEventRootDict_621_0_3, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TVector3' - 11 - _pos u 'TVector3' - 11 - _dir "
"i - - 10 - _type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPMTCount",1050,G__RATEventRootDict_621_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPosition",1141,G__RATEventRootDict_621_0_5, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3), -1, 0, 1, 1, 1, 8, "i - - 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosition",1153,G__RATEventRootDict_621_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - id u 'TVector3' - 11 - _pos", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDirection",1217,G__RATEventRootDict_621_0_7, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3), -1, 0, 1, 1, 1, 8, "i - - 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDirection",1229,G__RATEventRootDict_621_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - id u 'TVector3' - 11 - _dir", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetType",706,G__RATEventRootDict_621_0_9, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetType",718,G__RATEventRootDict_621_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - id i - - 0 - _type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModel",785,G__RATEventRootDict_621_0_11, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetModel",797,G__RATEventRootDict_621_0_12, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - id u 'string' - 0 - _model", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModelName",1170,G__RATEventRootDict_621_0_13, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_string), -1, 0, 1, 1, 1, 8, "i - - 0 - _modeltype", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModelCount",1306,G__RATEventRootDict_621_0_14, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RATEventRootDict_621_0_15, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::PMTInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RATEventRootDict_621_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::PMTInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RATEventRootDict_621_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::PMTInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RATEventRootDict_621_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::PMTInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RATEventRootDict_621_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RATEventRootDict_621_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::PMTInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RATEventRootDict_621_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::PMTInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RATEventRootDict_621_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::PMTInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RATEventRootDict_621_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::PMTInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PMTInfo", 637, G__RATEventRootDict_621_0_27, (int) ('i'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPMTInfo), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::PMTInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PMTInfo", 763, G__RATEventRootDict_621_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RATEventRootDict_621_0_29, (int) ('u'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPMTInfo), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::PMTInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLLAPPDInfo(void) {
   /* RAT::DS::LAPPDInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPDInfo));
   G__memfunc_setup("LAPPDInfo",765,G__RATEventRootDict_634_0_1, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPDInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddLAPPD",634,G__RATEventRootDict_634_0_2, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'TVector3' - 11 - _pos u 'TVector3' - 11 - _dir "
"i - - 10 - _type u 'string' - 10 - _model", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddLAPPD",634,G__RATEventRootDict_634_0_3, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TVector3' - 11 - _pos u 'TVector3' - 11 - _dir "
"i - - 10 - _type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLAPPDCount",1178,G__RATEventRootDict_634_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPosition",1141,G__RATEventRootDict_634_0_5, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3), -1, 0, 1, 1, 1, 8, "i - - 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPosition",1153,G__RATEventRootDict_634_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - id u 'TVector3' - 11 - _pos", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDirection",1217,G__RATEventRootDict_634_0_7, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_TVector3), -1, 0, 1, 1, 1, 8, "i - - 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDirection",1229,G__RATEventRootDict_634_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - id u 'TVector3' - 11 - _dir", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetType",706,G__RATEventRootDict_634_0_9, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetType",718,G__RATEventRootDict_634_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - id i - - 0 - _type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModel",785,G__RATEventRootDict_634_0_11, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetModel",797,G__RATEventRootDict_634_0_12, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - id u 'string' - 0 - _model", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModelName",1170,G__RATEventRootDict_634_0_13, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_string), -1, 0, 1, 1, 1, 8, "i - - 0 - _modeltype", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetModelCount",1306,G__RATEventRootDict_634_0_14, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RATEventRootDict_634_0_15, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::LAPPDInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RATEventRootDict_634_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::LAPPDInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RATEventRootDict_634_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::LAPPDInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RATEventRootDict_634_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::LAPPDInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RATEventRootDict_634_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RATEventRootDict_634_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::LAPPDInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RATEventRootDict_634_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::LAPPDInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RATEventRootDict_634_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::LAPPDInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RATEventRootDict_634_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::LAPPDInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("LAPPDInfo", 765, G__RATEventRootDict_634_0_27, (int) ('i'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPDInfo), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::LAPPDInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~LAPPDInfo", 891, G__RATEventRootDict_634_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RATEventRootDict_634_0_29, (int) ('u'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPDInfo), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::LAPPDInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLRun(void) {
   /* RAT::DS::Run */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRun));
   G__memfunc_setup("Run",309,G__RATEventRootDict_635_0_1, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRun), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__RATEventRootDict_635_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetID",441,G__RATEventRootDict_635_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - _id", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetType",706,G__RATEventRootDict_635_0_4, 109, -1, G__defined_typename("ULong64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetType",718,G__RATEventRootDict_635_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "m - 'ULong64_t' 0 - _type", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStartTime",1213,G__RATEventRootDict_635_0_6, 108, -1, G__defined_typename("time_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetStartTime",1225,G__RATEventRootDict_635_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "l - 'time_t' 0 - _startTime", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPMTInfo",925,G__RATEventRootDict_635_0_8, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLPMTInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPMTInfo",937,G__RATEventRootDict_635_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::DS::PMTInfo' - 10 - _pmtinfo", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExistPMTInfo",1162,G__RATEventRootDict_635_0_10, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PrunePMTInfo",1159,G__RATEventRootDict_635_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLAPPDInfo",1053,G__RATEventRootDict_635_0_12, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPDInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetLAPPDInfo",1065,G__RATEventRootDict_635_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::DS::LAPPDInfo' - 10 - _lappdinfo", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ExistLAPPDInfo",1290,G__RATEventRootDict_635_0_14, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("PruneLAPPDInfo",1287,G__RATEventRootDict_635_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RATEventRootDict_635_0_16, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::Run::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RATEventRootDict_635_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::Run::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RATEventRootDict_635_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::Run::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RATEventRootDict_635_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::Run::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RATEventRootDict_635_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RATEventRootDict_635_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::Run::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RATEventRootDict_635_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::Run::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RATEventRootDict_635_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::Run::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RATEventRootDict_635_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::Run::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Run", 309, G__RATEventRootDict_635_0_28, (int) ('i'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRun), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::Run' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Run", 435, G__RATEventRootDict_635_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RATEventRootDict_635_0_30, (int) ('u'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRun), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::Run' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDScLcLRunStore(void) {
   /* RAT::DS::RunStore */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRunStore));
   G__memfunc_setup("Get",288,G__RATEventRootDict_644_0_1, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRunStore), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (RAT::DS::RunStore* (*)())(&RAT::DS::RunStore::Get) ), 0);
   G__memfunc_setup("GetRun",597,G__RATEventRootDict_644_0_2, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRun), -1, 0, 1, 3, 1, 0, "U 'RAT::DS::Root' - 0 - ds", (char*)NULL, (void*) G__func2void( (RAT::DS::Run* (*)(RAT::DS::Root*))(&RAT::DS::RunStore::GetRun) ), 0);
   G__memfunc_setup("GetRun",597,G__RATEventRootDict_644_0_3, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRun), -1, 0, 1, 3, 1, 0, "i - - 0 - runID", (char*)NULL, (void*) G__func2void( (RAT::DS::Run* (*)(int))(&RAT::DS::RunStore::GetRun) ), 0);
   G__memfunc_setup("SetReadTree",1080,G__RATEventRootDict_644_0_4, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) G__func2void( (void (*)(TTree*))(&RAT::DS::RunStore::SetReadTree) ), 0);
   G__memfunc_setup("SetWriteTree",1223,G__RATEventRootDict_644_0_5, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) G__func2void( (void (*)(TTree*))(&RAT::DS::RunStore::SetWriteTree) ), 0);
   G__memfunc_setup("FlushWriteTree",1437,G__RATEventRootDict_644_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::RunStore::FlushWriteTree) ), 0);
   G__memfunc_setup("AddNewRun",872,G__RATEventRootDict_644_0_7, 121, -1, -1, 0, 1, 3, 1, 0, "U 'RAT::DS::Run' - 0 - run", (char*)NULL, (void*) G__func2void( (void (*)(RAT::DS::Run*))(&RAT::DS::RunStore::AddNewRun) ), 0);
   G__memfunc_setup("PreloadFromTree",1515,G__RATEventRootDict_644_0_8, 121, -1, -1, 0, 2, 3, 1, 0, 
"U 'TTree' - 0 - tree g - - 0 'false' alreadyWrittenToDisk", (char*)NULL, (void*) G__func2void( (void (*)(TTree*, bool))(&RAT::DS::RunStore::PreloadFromTree) ), 0);
   G__memfunc_setup("RunStore",834,G__RATEventRootDict_644_0_9, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRunStore), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InstanceGetRun",1418,G__RATEventRootDict_644_0_10, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRun), -1, 0, 1, 1, 1, 0, "U 'RAT::DS::Root' - 0 - ds", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InstanceGetRun",1418,G__RATEventRootDict_644_0_11, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRun), -1, 0, 1, 1, 1, 0, "i - - 0 - runID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InstanceSetReadTree",1901,G__RATEventRootDict_644_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InstanceSetWriteTree",2044,G__RATEventRootDict_644_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InstanceFlushWriteTree",2258,G__RATEventRootDict_644_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InstanceAddNewRun",1693,G__RATEventRootDict_644_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::DS::Run' - 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InstancePreloadFromTree",2336,G__RATEventRootDict_644_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TTree' - 0 - tree g - - 0 'false' writtenToDisk", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RATEventRootDict_644_0_17, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DS::RunStore::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RATEventRootDict_644_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::RunStore::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RATEventRootDict_644_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DS::RunStore::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RATEventRootDict_644_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DS::RunStore::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__RATEventRootDict_644_0_21, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__RATEventRootDict_644_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__RATEventRootDict_644_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RATEventRootDict_644_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RATEventRootDict_644_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::RunStore::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RATEventRootDict_644_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::RunStore::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RATEventRootDict_644_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DS::RunStore::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RATEventRootDict_644_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DS::RunStore::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RunStore", 834, G__RATEventRootDict_644_0_29, (int) ('i'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRunStore), -1, 0, 1, 1, 1, 0, "u 'RAT::DS::RunStore' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RunStore", 960, G__RATEventRootDict_644_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RATEventRootDict_644_0_31, (int) ('u'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRunStore), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::RunStore' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLDSReader(void) {
   /* RAT::DSReader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDSReader));
   G__memfunc_setup("DSReader",746,G__RATEventRootDict_655_0_1, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDSReader), -1, 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__RATEventRootDict_655_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBranchStatus",1534,G__RATEventRootDict_655_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - bname g - - 0 '1' status", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetT",372,G__RATEventRootDict_655_0_4, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDS",439,G__RATEventRootDict_655_0_5, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRoot), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotal",804,G__RATEventRootDict_655_0_6, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvent",802,G__RATEventRootDict_655_0_7, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRoot), -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NextEvent",929,G__RATEventRootDict_655_0_8, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLDScLcLRoot), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RATEventRootDict_655_0_9, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::DSReader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RATEventRootDict_655_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DSReader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RATEventRootDict_655_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::DSReader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RATEventRootDict_655_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::DSReader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RATEventRootDict_655_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RATEventRootDict_655_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DSReader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RATEventRootDict_655_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DSReader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RATEventRootDict_655_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::DSReader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RATEventRootDict_655_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::DSReader::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~DSReader", 872, G__RATEventRootDict_655_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLTrackNode(void) {
   /* RAT::TrackNode */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode));
   G__memfunc_setup("TrackNode",891,G__RATEventRootDict_656_0_1, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTrackStart",1215,G__RATEventRootDict_656_0_2, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTrackStart",1327,G__RATEventRootDict_656_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' state", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsTrackEnd",968,G__RATEventRootDict_656_0_4, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTrackID",930,G__RATEventRootDict_656_0_5, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTrackID",942,G__RATEventRootDict_656_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - _trackID", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetStepID",841,G__RATEventRootDict_656_0_7, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetStepID",853,G__RATEventRootDict_656_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - _stepID", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPDGCode",886,G__RATEventRootDict_656_0_9, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPDGCode",898,G__RATEventRootDict_656_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - _pdgcode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetParticleName",1493,G__RATEventRootDict_656_0_11, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_string), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetParticleName",1505,G__RATEventRootDict_656_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - _particleName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPrev",701,G__RATEventRootDict_656_0_13, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPrev",713,G__RATEventRootDict_656_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::TrackNode' - 0 - _prev", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNext",703,G__RATEventRootDict_656_0_15, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetNext",715,G__RATEventRootDict_656_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::TrackNode' - 0 - _next", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddNext",680,G__RATEventRootDict_656_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::TrackNode' - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddChild",749,G__RATEventRootDict_656_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::TrackNode' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__RATEventRootDict_656_0_19, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 1, 1, 1, 1, 0, "u 'RAT::DS::MCTrackStep' - 11 - rhs", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RATEventRootDict_656_0_20, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RAT::TrackNode::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RATEventRootDict_656_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::TrackNode::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RATEventRootDict_656_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RAT::TrackNode::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RATEventRootDict_656_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RAT::TrackNode::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RATEventRootDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RATEventRootDict_656_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RATEventRootDict_656_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::TrackNode::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RATEventRootDict_656_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::TrackNode::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RATEventRootDict_656_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RAT::TrackNode::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RATEventRootDict_656_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RAT::TrackNode::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TrackNode", 891, G__RATEventRootDict_656_0_32, (int) ('i'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 1, 1, 1, 0, "u 'RAT::TrackNode' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TrackNode", 1017, G__RATEventRootDict_656_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RATEventRootDict_656_0_34, (int) ('u'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 1, 1, 1, 1, 0, "u 'RAT::TrackNode' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLTrackCursor(void) {
   /* RAT::TrackCursor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackCursor));
   G__memfunc_setup("TrackCursor",1139,G__RATEventRootDict_663_0_1, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackCursor), -1, 0, 2, 1, 1, 0, 
"U 'RAT::TrackNode' - 0 - node g - - 0 'false' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVerbose",1014,G__RATEventRootDict_663_0_2, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVerbose",1026,G__RATEventRootDict_663_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackStart",1027,G__RATEventRootDict_663_0_4, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Prev",413,G__RATEventRootDict_663_0_5, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Here",388,G__RATEventRootDict_663_0_6, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Next",415,G__RATEventRootDict_663_0_7, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackEnd",780,G__RATEventRootDict_663_0_8, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StepCount",933,G__RATEventRootDict_663_0_9, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Step",412,G__RATEventRootDict_663_0_10, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChildCount",1005,G__RATEventRootDict_663_0_11, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Child",484,G__RATEventRootDict_663_0_12, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 1, 1, 1, 8, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackChildCount",1506,G__RATEventRootDict_663_0_13, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackChild",985,G__RATEventRootDict_663_0_14, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Parent",618,G__RATEventRootDict_663_0_15, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackLength",1111,G__RATEventRootDict_663_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTrackStart",1215,G__RATEventRootDict_663_0_17, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTrackEnd",968,G__RATEventRootDict_663_0_18, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Go",182,G__RATEventRootDict_663_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RAT::TrackNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GoTrackStart",1209,G__RATEventRootDict_663_0_20, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GoPrev",595,G__RATEventRootDict_663_0_21, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GoNext",597,G__RATEventRootDict_663_0_22, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GoTrackEnd",962,G__RATEventRootDict_663_0_23, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GoStep",594,G__RATEventRootDict_663_0_24, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GoChild",666,G__RATEventRootDict_663_0_25, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 1, 1, 1, 0, "i - - 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GoTrackChild",1167,G__RATEventRootDict_663_0_26, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GoParent",800,G__RATEventRootDict_663_0_27, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 0, "", "Go to the step in the parent particle where", (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__RATEventRootDict_663_0_28, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintTrack",1026,G__RATEventRootDict_663_0_29, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintTrackIDs",1282,G__RATEventRootDict_663_0_30, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_string), -1, 0, 1, 3, 1, 0, "U 'RAT::TrackNode' - 0 - node", (char*)NULL, (void*) G__func2void( (string (*)(RAT::TrackNode*))(&RAT::TrackCursor::PrintTrackIDs) ), 0);
   G__memfunc_setup("Print",525,G__RATEventRootDict_663_0_31, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_string), -1, 0, 1, 3, 1, 0, "U 'RAT::TrackNode' - 0 - node", (char*)NULL, (void*) G__func2void( (string (*)(RAT::TrackNode*))(&RAT::TrackCursor::Print) ), 0);
   G__memfunc_setup("PrintTrack",1026,G__RATEventRootDict_663_0_32, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_string), -1, 0, 1, 3, 1, 0, "U 'RAT::TrackNode' - 0 - node", (char*)NULL, (void*) G__func2void( (string (*)(RAT::TrackNode*))(&RAT::TrackCursor::PrintTrack) ), 0);
   G__memfunc_setup("FindNextTrack",1301,G__RATEventRootDict_663_0_33, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNextTrackNoDescend",2184,G__RATEventRootDict_663_0_34, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNextTrack",1301,G__RATEventRootDict_663_0_35, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 1, 1, 1, 0, "U 'RAT::TrackTest' - 0 - predicate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindNextParticle",1620,G__RATEventRootDict_663_0_36, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - particleName", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TrackCursor", 1139, G__RATEventRootDict_663_0_37, (int) ('i'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackCursor), -1, 0, 1, 1, 1, 0, "u 'RAT::TrackCursor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TrackCursor", 1265, G__RATEventRootDict_663_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RATEventRootDict_663_0_39, (int) ('u'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackCursor), -1, 1, 1, 1, 1, 0, "u 'RAT::TrackCursor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRATcLcLTrackNav(void) {
   /* RAT::TrackNav */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNav));
   G__memfunc_setup("TrackNav",794,G__RATEventRootDict_666_0_1, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNav), -1, 0, 2, 1, 1, 0, 
"U 'RAT::DS::Root' - 0 - ds g - - 0 'false' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TrackNav",794,G__RATEventRootDict_666_0_2, 105, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNav), -1, 0, 2, 1, 1, 0, 
"U 'RAT::DS::MC' - 0 - mc g - - 0 'false' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Load",384,G__RATEventRootDict_666_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'RAT::DS::MC' - 0 - mc g - - 0 'false' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__RATEventRootDict_666_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Head",370,G__RATEventRootDict_666_0_5, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cursor",638,G__RATEventRootDict_666_0_6, 117, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackCursor), -1, 0, 1, 1, 1, 0, "g - - 0 'false' verbose", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindID",526,G__RATEventRootDict_666_0_7, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 1, 1, 1, 0, "i - - 0 - trackID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindParticle",1205,G__RATEventRootDict_666_0_8, 85, G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNode), -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - particleName g - - 0 'false' verbose", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TrackNav", 794, G__RATEventRootDict_666_0_9, (int) ('i'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNav), -1, 0, 1, 1, 1, 0, "u 'RAT::TrackNav' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TrackNav", 920, G__RATEventRootDict_666_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RATEventRootDict_666_0_11, (int) ('u'), G__get_linked_tagnum(&G__RATEventRootDictLN_RATcLcLTrackNav), -1, 1, 1, 1, 1, 0, "u 'RAT::TrackNav' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncRATEventRootDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalRATEventRootDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {
}

static void G__cpp_setup_func35() {
}

static void G__cpp_setup_func36() {
}

static void G__cpp_setup_func37() {
}

static void G__cpp_setup_func38() {
}

static void G__cpp_setup_func39() {
}

static void G__cpp_setup_func40() {
}

static void G__cpp_setup_func41() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcRATEventRootDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
  G__cpp_setup_func35();
  G__cpp_setup_func36();
  G__cpp_setup_func37();
  G__cpp_setup_func38();
  G__cpp_setup_func39();
  G__cpp_setup_func40();
  G__cpp_setup_func41();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__RATEventRootDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TTimeStamp = { "TTimeStamp" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RAT = { "RAT" , 110 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLDS = { "RAT::DS" , 110 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLDScLcLMCParticle = { "RAT::DS::MCParticle" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLDScLcLMCTrackStep = { "RAT::DS::MCTrackStep" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLDScLcLMCTrack = { "RAT::DS::MCTrack" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR = { "vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::MCTrackStep,allocator<RAT::DS::MCTrackStep> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_pairlEstringcOintgR = { "pair<string,int>" , 115 , -1 };
G__linked_taginfo G__RATEventRootDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR = { "map<string,double,less<string>,allocator<pair<const string,double> > >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLDScLcLMCSummary = { "RAT::DS::MCSummary" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLDScLcLMCPhoton = { "RAT::DS::MCPhoton" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLDScLcLMCPMT = { "RAT::DS::MCPMT" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR = { "vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::MCPhoton,allocator<RAT::DS::MCPhoton> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLDScLcLMCLAPPD = { "RAT::DS::MCLAPPD" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLDScLcLMC = { "RAT::DS::MC" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgR = { "vector<RAT::DS::MCSummary,allocator<RAT::DS::MCSummary> >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::MCSummary,allocator<RAT::DS::MCSummary> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR = { "vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::MCParticle,allocator<RAT::DS::MCParticle> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR = { "vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::MCTrack,allocator<RAT::DS::MCTrack> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR = { "vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::MCPMT,allocator<RAT::DS::MCPMT> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCLAPPDcOallocatorlERATcLcLDScLcLMCLAPPDgRsPgR = { "vector<RAT::DS::MCLAPPD,allocator<RAT::DS::MCLAPPD> >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCLAPPDcOallocatorlERATcLcLDScLcLMCLAPPDgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::MCLAPPD,allocator<RAT::DS::MCLAPPD> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLDScLcLPMT = { "RAT::DS::PMT" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLDScLcLLAPPDHit = { "RAT::DS::LAPPDHit" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLDScLcLLAPPD = { "RAT::DS::LAPPD" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_vectorlERATcLcLDScLcLLAPPDHitcOallocatorlERATcLcLDScLcLLAPPDHitgRsPgR = { "vector<RAT::DS::LAPPDHit,allocator<RAT::DS::LAPPDHit> >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLLAPPDHitcOallocatorlERATcLcLDScLcLLAPPDHitgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::LAPPDHit,allocator<RAT::DS::LAPPDHit> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLDScLcLPosFit = { "RAT::DS::PosFit" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLDScLcLCentroid = { "RAT::DS::Centroid" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLDScLcLPathFit = { "RAT::DS::PathFit" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLDScLcLEV = { "RAT::DS::EV" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR = { "vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::PMT,allocator<RAT::DS::PMT> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_vectorlERATcLcLDScLcLLAPPDcOallocatorlERATcLcLDScLcLLAPPDgRsPgR = { "vector<RAT::DS::LAPPD,allocator<RAT::DS::LAPPD> >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLLAPPDcOallocatorlERATcLcLDScLcLLAPPDgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::LAPPD,allocator<RAT::DS::LAPPD> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_vectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgR = { "vector<RAT::DS::Centroid,allocator<RAT::DS::Centroid> >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::Centroid,allocator<RAT::DS::Centroid> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_vectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgR = { "vector<RAT::DS::PathFit,allocator<RAT::DS::PathFit> >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::PathFit,allocator<RAT::DS::PathFit> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLDScLcLCalib = { "RAT::DS::Calib" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLDScLcLRoot = { "RAT::DS::Root" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR = { "vector<pair<string,int>,allocator<pair<string,int> > >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<string,int>,allocator<pair<string,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR = { "vector<RAT::DS::MC,allocator<RAT::DS::MC> >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::MC,allocator<RAT::DS::MC> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR = { "vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::Calib,allocator<RAT::DS::Calib> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR = { "vector<RAT::DS::EV,allocator<RAT::DS::EV> >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::EV,allocator<RAT::DS::EV> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLDScLcLPMTInfo = { "RAT::DS::PMTInfo" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR = { "vector<TVector3,allocator<TVector3> >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVector3,allocator<TVector3> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLDScLcLLAPPDInfo = { "RAT::DS::LAPPDInfo" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLDScLcLRun = { "RAT::DS::Run" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR = { "vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::PMTInfo,allocator<RAT::DS::PMTInfo> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_vectorlERATcLcLDScLcLLAPPDInfocOallocatorlERATcLcLDScLcLLAPPDInfogRsPgR = { "vector<RAT::DS::LAPPDInfo,allocator<RAT::DS::LAPPDInfo> >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLLAPPDInfocOallocatorlERATcLcLDScLcLLAPPDInfogRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::DS::LAPPDInfo,allocator<RAT::DS::LAPPDInfo> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLDScLcLRunStore = { "RAT::DS::RunStore" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_maplEintcORATcLcLDScLcLRunRecordmUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLDScLcLRunRecordmUgRsPgRsPgR = { "map<int,RAT::DS::RunRecord*,less<int>,allocator<pair<const int,RAT::DS::RunRecord*> > >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLDSReader = { "RAT::DSReader" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLTrackNode = { "RAT::TrackNode" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR = { "vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RAT::TrackNode*,allocator<RAT::TrackNode*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLTrackTest = { "RAT::TrackTest" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_unary_functionlERATcLcLTrackNodemUcOboolgR = { "unary_function<RAT::TrackNode*,bool>" , 115 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLTrackCursor = { "RAT::TrackCursor" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_RATcLcLTrackNav = { "RAT::TrackNav" , 99 , -1 };
G__linked_taginfo G__RATEventRootDictLN_maplEintcORATcLcLTrackNodemUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLTrackNodemUgRsPgRsPgR = { "map<int,RAT::TrackNode*,less<int>,allocator<pair<const int,RAT::TrackNode*> > >" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableRATEventRootDict() {
  G__RATEventRootDictLN_TClass.tagnum = -1 ;
  G__RATEventRootDictLN_TBuffer.tagnum = -1 ;
  G__RATEventRootDictLN_TMemberInspector.tagnum = -1 ;
  G__RATEventRootDictLN_TObject.tagnum = -1 ;
  G__RATEventRootDictLN_TString.tagnum = -1 ;
  G__RATEventRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_string.tagnum = -1 ;
  G__RATEventRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RATEventRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RATEventRootDictLN_TTimeStamp.tagnum = -1 ;
  G__RATEventRootDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__RATEventRootDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__RATEventRootDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__RATEventRootDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__RATEventRootDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__RATEventRootDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__RATEventRootDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__RATEventRootDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__RATEventRootDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__RATEventRootDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__RATEventRootDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__RATEventRootDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__RATEventRootDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__RATEventRootDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__RATEventRootDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__RATEventRootDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__RATEventRootDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__RATEventRootDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__RATEventRootDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__RATEventRootDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__RATEventRootDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__RATEventRootDictLN_TVector3.tagnum = -1 ;
  G__RATEventRootDictLN_RAT.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLDS.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLDScLcLMCParticle.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLDScLcLMCTrackStep.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLDScLcLMCTrack.tagnum = -1 ;
  G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RATEventRootDictLN_pairlEstringcOintgR.tagnum = -1 ;
  G__RATEventRootDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLDScLcLMCSummary.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLDScLcLMCPhoton.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLDScLcLMCPMT.tagnum = -1 ;
  G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLDScLcLMCLAPPD.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLDScLcLMC.tagnum = -1 ;
  G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCLAPPDcOallocatorlERATcLcLDScLcLMCLAPPDgRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCLAPPDcOallocatorlERATcLcLDScLcLMCLAPPDgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLDScLcLPMT.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLDScLcLLAPPDHit.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLDScLcLLAPPD.tagnum = -1 ;
  G__RATEventRootDictLN_vectorlERATcLcLDScLcLLAPPDHitcOallocatorlERATcLcLDScLcLLAPPDHitgRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLLAPPDHitcOallocatorlERATcLcLDScLcLLAPPDHitgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLDScLcLPosFit.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLDScLcLCentroid.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLDScLcLPathFit.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLDScLcLEV.tagnum = -1 ;
  G__RATEventRootDictLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RATEventRootDictLN_vectorlERATcLcLDScLcLLAPPDcOallocatorlERATcLcLDScLcLLAPPDgRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLLAPPDcOallocatorlERATcLcLDScLcLLAPPDgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RATEventRootDictLN_vectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RATEventRootDictLN_vectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLDScLcLCalib.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLDScLcLRoot.tagnum = -1 ;
  G__RATEventRootDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RATEventRootDictLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RATEventRootDictLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RATEventRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__RATEventRootDictLN_TTree.tagnum = -1 ;
  G__RATEventRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLDScLcLPMTInfo.tagnum = -1 ;
  G__RATEventRootDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RATEventRootDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RATEventRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLDScLcLLAPPDInfo.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLDScLcLRun.tagnum = -1 ;
  G__RATEventRootDictLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RATEventRootDictLN_vectorlERATcLcLDScLcLLAPPDInfocOallocatorlERATcLcLDScLcLLAPPDInfogRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLLAPPDInfocOallocatorlERATcLcLDScLcLLAPPDInfogRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLDScLcLRunStore.tagnum = -1 ;
  G__RATEventRootDictLN_maplEintcORATcLcLDScLcLRunRecordmUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLDScLcLRunRecordmUgRsPgRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_TChain.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLDSReader.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLTrackNode.tagnum = -1 ;
  G__RATEventRootDictLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR.tagnum = -1 ;
  G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLTrackTest.tagnum = -1 ;
  G__RATEventRootDictLN_unary_functionlERATcLcLTrackNodemUcOboolgR.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLTrackCursor.tagnum = -1 ;
  G__RATEventRootDictLN_RATcLcLTrackNav.tagnum = -1 ;
  G__RATEventRootDictLN_maplEintcORATcLcLTrackNodemUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLTrackNodemUgRsPgRsPgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableRATEventRootDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TString);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_string);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TTimeStamp);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RAT);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLDS);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLDScLcLMCParticle),sizeof(RAT::DS::MCParticle),-1,29952,(char*)NULL,G__setup_memvarRATcLcLDScLcLMCParticle,G__setup_memfuncRATcLcLDScLcLMCParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrackStep),sizeof(RAT::DS::MCTrackStep),-1,29952,(char*)NULL,G__setup_memvarRATcLcLDScLcLMCTrackStep,G__setup_memfuncRATcLcLDScLcLMCTrackStep);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLDScLcLMCTrack),sizeof(RAT::DS::MCTrack),-1,29952,(char*)NULL,G__setup_memvarRATcLcLDScLcLMCTrack,G__setup_memfuncRATcLcLDScLcLMCTrack);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackStepcOallocatorlERATcLcLDScLcLMCTrackStepgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_pairlEstringcOintgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLDScLcLMCSummary),sizeof(RAT::DS::MCSummary),-1,29952,(char*)NULL,G__setup_memvarRATcLcLDScLcLMCSummary,G__setup_memfuncRATcLcLDScLcLMCSummary);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLDScLcLMCPhoton),sizeof(RAT::DS::MCPhoton),-1,29952,(char*)NULL,G__setup_memvarRATcLcLDScLcLMCPhoton,G__setup_memfuncRATcLcLDScLcLMCPhoton);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLDScLcLMCPMT),sizeof(RAT::DS::MCPMT),-1,29952,(char*)NULL,G__setup_memvarRATcLcLDScLcLMCPMT,G__setup_memfuncRATcLcLDScLcLMCPMT);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPhotoncOallocatorlERATcLcLDScLcLMCPhotongRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLDScLcLMCLAPPD),sizeof(RAT::DS::MCLAPPD),-1,29952,(char*)NULL,G__setup_memvarRATcLcLDScLcLMCLAPPD,G__setup_memfuncRATcLcLDScLcLMCLAPPD);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLDScLcLMC),sizeof(RAT::DS::MC),-1,29952,(char*)NULL,G__setup_memvarRATcLcLDScLcLMC,G__setup_memfuncRATcLcLDScLcLMC);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCSummarycOallocatorlERATcLcLDScLcLMCSummarygRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCParticlecOallocatorlERATcLcLDScLcLMCParticlegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCTrackcOallocatorlERATcLcLDScLcLMCTrackgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCPMTcOallocatorlERATcLcLDScLcLMCPMTgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCLAPPDcOallocatorlERATcLcLDScLcLMCLAPPDgRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCLAPPDcOallocatorlERATcLcLDScLcLMCLAPPDgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLDScLcLPMT),sizeof(RAT::DS::PMT),-1,29952,(char*)NULL,G__setup_memvarRATcLcLDScLcLPMT,G__setup_memfuncRATcLcLDScLcLPMT);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPDHit),sizeof(RAT::DS::LAPPDHit),-1,29952,(char*)NULL,G__setup_memvarRATcLcLDScLcLLAPPDHit,G__setup_memfuncRATcLcLDScLcLLAPPDHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPD),sizeof(RAT::DS::LAPPD),-1,29952,(char*)NULL,G__setup_memvarRATcLcLDScLcLLAPPD,G__setup_memfuncRATcLcLDScLcLLAPPD);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLLAPPDHitcOallocatorlERATcLcLDScLcLLAPPDHitgRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLLAPPDHitcOallocatorlERATcLcLDScLcLLAPPDHitgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLDScLcLPosFit),sizeof(RAT::DS::PosFit),-1,33792,(char*)NULL,G__setup_memvarRATcLcLDScLcLPosFit,G__setup_memfuncRATcLcLDScLcLPosFit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLDScLcLCentroid),sizeof(RAT::DS::Centroid),-1,62720,(char*)NULL,G__setup_memvarRATcLcLDScLcLCentroid,G__setup_memfuncRATcLcLDScLcLCentroid);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLDScLcLPathFit),sizeof(RAT::DS::PathFit),-1,62720,(char*)NULL,G__setup_memvarRATcLcLDScLcLPathFit,G__setup_memfuncRATcLcLDScLcLPathFit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLDScLcLEV),sizeof(RAT::DS::EV),-1,29952,(char*)NULL,G__setup_memvarRATcLcLDScLcLEV,G__setup_memfuncRATcLcLDScLcLEV);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTcOallocatorlERATcLcLDScLcLPMTgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLLAPPDcOallocatorlERATcLcLDScLcLLAPPDgRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLLAPPDcOallocatorlERATcLcLDScLcLLAPPDgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLCentroidcOallocatorlERATcLcLDScLcLCentroidgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLPathFitcOallocatorlERATcLcLDScLcLPathFitgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLDScLcLCalib),sizeof(RAT::DS::Calib),-1,29952,(char*)NULL,G__setup_memvarRATcLcLDScLcLCalib,G__setup_memfuncRATcLcLDScLcLCalib);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLDScLcLRoot),sizeof(RAT::DS::Root),-1,29952,(char*)NULL,G__setup_memvarRATcLcLDScLcLRoot,G__setup_memfuncRATcLcLDScLcLRoot);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_vectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_reverse_iteratorlEvectorlEpairlEstringcOintgRcOallocatorlEpairlEstringcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLMCcOallocatorlERATcLcLDScLcLMCgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLCalibcOallocatorlERATcLcLDScLcLCalibgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLEVcOallocatorlERATcLcLDScLcLEVgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLDScLcLPMTInfo),sizeof(RAT::DS::PMTInfo),-1,29952,(char*)NULL,G__setup_memvarRATcLcLDScLcLPMTInfo,G__setup_memfuncRATcLcLDScLcLPMTInfo);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLDScLcLLAPPDInfo),sizeof(RAT::DS::LAPPDInfo),-1,29952,(char*)NULL,G__setup_memvarRATcLcLDScLcLLAPPDInfo,G__setup_memfuncRATcLcLDScLcLLAPPDInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLDScLcLRun),sizeof(RAT::DS::Run),-1,29952,(char*)NULL,G__setup_memvarRATcLcLDScLcLRun,G__setup_memfuncRATcLcLDScLcLRun);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLPMTInfocOallocatorlERATcLcLDScLcLPMTInfogRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_vectorlERATcLcLDScLcLLAPPDInfocOallocatorlERATcLcLDScLcLLAPPDInfogRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLDScLcLLAPPDInfocOallocatorlERATcLcLDScLcLLAPPDInfogRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLDScLcLRunStore),sizeof(RAT::DS::RunStore),-1,1280,(char*)NULL,G__setup_memvarRATcLcLDScLcLRunStore,G__setup_memfuncRATcLcLDScLcLRunStore);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_maplEintcORATcLcLDScLcLRunRecordmUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLDScLcLRunRecordmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_TChain);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLDSReader),sizeof(RAT::DSReader),-1,62464,(char*)NULL,G__setup_memvarRATcLcLDSReader,G__setup_memfuncRATcLcLDSReader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLTrackNode),sizeof(RAT::TrackNode),-1,32000,(char*)NULL,G__setup_memvarRATcLcLTrackNode,G__setup_memfuncRATcLcLTrackNode);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_vectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_reverse_iteratorlEvectorlERATcLcLTrackNodemUcOallocatorlERATcLcLTrackNodemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLTrackTest);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_unary_functionlERATcLcLTrackNodemUcOboolgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLTrackCursor),sizeof(RAT::TrackCursor),-1,32768,(char*)NULL,G__setup_memvarRATcLcLTrackCursor,G__setup_memfuncRATcLcLTrackCursor);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_RATcLcLTrackNav),sizeof(RAT::TrackNav),-1,32768,(char*)NULL,G__setup_memvarRATcLcLTrackNav,G__setup_memfuncRATcLcLTrackNav);
   G__get_linked_tagnum_fwd(&G__RATEventRootDictLN_maplEintcORATcLcLTrackNodemUcOlesslEintgRcOallocatorlEpairlEconstsPintcORATcLcLTrackNodemUgRsPgRsPgR);
}
extern "C" void G__cpp_setupRATEventRootDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupRATEventRootDict()");
  G__set_cpp_environmentRATEventRootDict();
  G__cpp_setup_tagtableRATEventRootDict();

  G__cpp_setup_inheritanceRATEventRootDict();

  G__cpp_setup_typetableRATEventRootDict();

  G__cpp_setup_memvarRATEventRootDict();

  G__cpp_setup_memfuncRATEventRootDict();
  G__cpp_setup_globalRATEventRootDict();
  G__cpp_setup_funcRATEventRootDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncRATEventRootDict();
  return;
}
class G__cpp_setup_initRATEventRootDict {
  public:
    G__cpp_setup_initRATEventRootDict() { G__add_setup_func("RATEventRootDict",(G__incsetup)(&G__cpp_setupRATEventRootDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initRATEventRootDict() { G__remove_setup_func("RATEventRootDict"); }
};
G__cpp_setup_initRATEventRootDict G__cpp_setup_initializerRATEventRootDict;

