/** 
 * @class DS::MCLAPPD
 *  Data Structure: Hit LAPPD in Monte Carlo
 *
 *  @author Stan Seibert <sseibert@hep.upenn.edu>
 *
 *  This class represents a LAPPD in which at least one photoelectron
 *  was generated by an incident photon.
 */

#ifndef __RAT_DS_MCLAPPD__
#define __RAT_DS_MCLAPPD__

#include <vector>
#include <MCPhoton.hh>

namespace RAT {
  namespace DS {

class MCLAPPD : public TObject {
public:
  MCLAPPD() : TObject() {}
  virtual ~MCLAPPD() {}

  /** ID number */
  virtual Int_t GetID() const { return id; };
  virtual void SetID(Int_t _id) { id = _id; };

  /** Charge */
  virtual Float_t GetCharge() const;

  /** LAPPD type */
  virtual Int_t GetType() const { return type; };
  virtual void SetType(Int_t _type) { type = _type; };
  
  /** LAPPD model name */
  virtual std::string GetModelName() const { return modelName; };
  virtual void SetModelName(std::string _modelName) { modelName = _modelName; };

  /** List of photoelectrons created in this LAPPD. */
  MCPhoton* GetMCPhoton(Int_t i) { return &photon[i]; }
  Int_t GetMCPhotonCount() const { return photon.size(); }
  MCPhoton* AddNewMCPhoton() {
    photon.resize(photon.size() + 1);
    return &photon.back();
  }
  void PruneMCPhoton() { photon.resize(0); }
 
  ClassDef(MCLAPPD, 1)
    
protected:
  Int_t id;
  Int_t type;
  std::string modelName;
  std::vector<MCPhoton> photon;
};
  
  }
}

#endif

